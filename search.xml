<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>王家乐的世界</title>
      <link href="/2023/05/10/oursWorld/%E7%8E%8B%E5%AE%B6%E4%B9%90%E7%9A%84%E4%B8%96%E7%95%8C/"/>
      <url>/2023/05/10/oursWorld/%E7%8E%8B%E5%AE%B6%E4%B9%90%E7%9A%84%E4%B8%96%E7%95%8C/</url>
      
        <content type="html"><![CDATA[<h1>我的世界</h1><h2 id="一-自我介绍">一.自我介绍</h2><p>我是来自安徽亳州的王家乐，就读于合肥大学（学院）大二的软工牛马，重度二次元爱好者，上周刚去南京又玩了两天</p><h2 id="二-我滴家乡">二.我滴家乡</h2><p>安徽亳州是中国安徽省下辖的一个地级市，位于江淮平原的中部。亳州市是中华文化和华夏文明的发源地之一，素有“中州”“文化中枢”之称。亳州历史悠久，文化底蕴深厚，境内有大量的文化古迹和历史遗址，如曹操墓、魏武振铎塔、马踏飞燕、古井水渠等。亳州是中国传统的丝绸之路经济走廊的黄金路段，是现代文明与古代文明相融合的地方。</p><p>亳州市是中国农业生产的重要基地，盛产稻谷、小麦、棉花、玉米、豆类等农产品，还是国内龙头企业方太、美菱等的重要生产基地。此外，亳州市还有壹号灯塔、瑞汀生态景观区等优美的旅游景点，是全国发展最为迅速的旅游城市之一。</p><p>总之，亳州市是一个拥有丰富文化底蕴、吸引人们前来旅游、并充满发展潜力的城市。</p><h2 id="三-打卡南京">三.打卡南京</h2><p>打卡鸡鸣寺</p><p><img src="https://s1.ax1x.com/2023/05/10/p9BxnQH.jpg" alt=""></p><p>玄武门和玄武湖</p><p><img src="https://s1.ax1x.com/2023/05/10/p9BxKOA.jpg" alt=""></p><p><img src="https://s1.ax1x.com/2023/05/10/p9Bxuyd.jpg" alt=""></p><p>南京还是挺不错一地方的</p><p><img src="https://s1.ax1x.com/2023/05/10/p9BxZWD.jpg" alt=""><br><img src="https://s1.ax1x.com/2023/05/10/p9BxVJO.jpg" alt=""><br><img src="https://s1.ax1x.com/2023/05/10/p9BxEFK.jpg" alt=""></p><p>话说在五一出去确实是人挤人啊</p><h2 id="四-大学感悟">四.大学感悟</h2><p>大学生活是人生中极为重要的阶段，这也是迷茫期和探索期。在大学期间，我们能够接触到各个领域的学科，广泛涉猎各种知识，拓宽自己的视野。而且在这个思想自由的环境下，我们能够开阔自己的思维，形成自己的独立见解。此外，大学也是交友的好去处，我们可以认识不同背景、不同国籍的朋友，共同学习、成长。同时，还有各种社团、组织可以参加，能够锻炼领导力和组织能力，增强自信心。然而，大学生活也要付出很多，要认真对待每门课程并打好基础，要通过实践锻炼专业素质，要时刻保持学习的热情。总之，大学生活是一个“花开见月”的过程，需要我们保持耐心、并且积极正面的态度去面对各种挑战。</p>]]></content>
      
      
      <categories>
          
          <category> 我们的世界 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生活 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>李超业的世界</title>
      <link href="/2023/05/10/oursWorld/%E6%9D%8E%E8%B6%85%E4%B8%9A%E7%9A%84%E4%B8%96%E7%95%8C/"/>
      <url>/2023/05/10/oursWorld/%E6%9D%8E%E8%B6%85%E4%B8%9A%E7%9A%84%E4%B8%96%E7%95%8C/</url>
      
        <content type="html"><![CDATA[<h1>李超业的世界</h1><h2 id="一-兴趣爱好">一.兴趣爱好</h2><p>作为一名合格健康的大学生肯定都有一些兴趣爱好的，我自然也不会例外，除了平时打打游戏放松一下外，我最喜欢的兴趣项目是踢足球和钓鱼。</p><p>在合肥大学，我加入了我们人工智能与大数据学院的足球俱乐部，也参加了学校里组织的杯赛，总共三场杯赛，最好的成绩是我们队伍在院杯中取得了第四的好成绩。下面就是我们人大院21级的男足和女足的合照了<img src="https://i.328888.xyz/2023/05/09/iQozUN.jpeg" alt="足球队合影"><br>在踢足球的时候是快乐的，运动是美好的这就是我的兴趣爱好之一。</p><p>在俱乐部里担任前首发的守门员。可能很多人会问我为什么是一个守门员呢？因为一些人觉得足球的精彩主要来源于进球，所以守门员在足球比赛中往往都是背景板，但其实我当守门员的原因不过在两点，第一就是我的体能和运动天赋一般，踢其他位置没有能力踢完全场。第二个原因就是我其实真的想踢守门员，没有想到吧。作为一名守门员，受伤是在所难免的，不过全队中我的位置也是不可或缺的，嘿嘿，有句话说的好，”一个好门将可以抵半个球队“。下面是比赛的照片，一眼就可以看见那个黄色衣服的守门员就是我了，而且是c位哦<img src="https://i.328888.xyz/2023/05/09/iQsUFX.jpeg" alt="赛前合照"><br>哈哈哈。在球队的日子其实很开心的过的日子也是很快乐而且充实的。</p><p>第二个兴趣爱好就是钓鱼了，平时钓鱼的次数虽然不多，但是钓鱼确实我非常喜欢的一件事情，钓鱼真的不是为了去吃鱼，钓鱼是一件非常具有放松身心和讨厌情操的作用。而且每次收货鱼的时候真的会很快乐。<img src="https://i.328888.xyz/2023/05/09/iQs8Yz.jpeg" alt="钓鱼的收获"><br>在我们学校也钓过几次鱼，而且被保安发现，不过保安很好没有没收我的钓鱼工具。</p><h2 id="二-校园生活">二.校园生活</h2><p>合肥大学是我人生中非常重要的阶段，在这里我度过了轻松愉快、充满挑战和成长的大学生活。<img src="https://i.328888.xyz/2023/05/09/iQ9nXc.jpeg" alt="校园的风景"><br>首先，我要说的是在合肥大学学习的经历。我在大学里选择了计算机专业，这门学科非常有挑战性和前景。我非常喜欢课程设置和实践培训项目，学习了很多专业知识，并且参加了很多社团和组织，进行了不同方面的实践和项目。<br>其次，大学生活不仅是学习，也是充满各种活动和社会体验。在这里，我参加了许多校园活动，包括各类比赛、展览、音乐会和文学节。我还加入了学术和文艺社团，并参与了很多社区义务活动和志愿活动。这些活动让我更了解本地文化和人民的生活。<br>最后，合肥大学还为我们提供了丰富的娱乐活动，如体育比赛、电影观看和饮食文化体验等。这些活动不仅提高了我的健康水平，也给了我很多和同学的交流机会，增进了我们的友谊和感情。<br>总之，我的大学生活充满了学习、挑战、成长、社交和娱乐。我将永远忘不了这段美好的时光，也会用我所学知识和经验，为我未来的职业生涯做好准备。</p><h2 id="三-家乡美景">三. 家乡美景</h2><p>我的家乡是位于中国安徽省阜阳市颍上县的一个美丽的城市，这里有着丰富的文化底蕴和壮美的自然景观。</p><p>首先，我要介绍的是八里河风景区。这是一个以河流为主要景观的旅游区域，里面包含着多个不同地貌和生态环境的景点。</p><p><img src="https://i.328888.xyz/2023/05/09/iQ9A1t.jpeg" alt="八里河风景"></p><p>其中，有蜿蜒的山间小溪、巍峨的山峰和风景如画的森林草地，还有清澈的水库和丰富的野生动植物资源。这里不仅能欣赏到美丽的风景，还能体验农耕文化的乐趣，感受到当地人民的淳朴和热情。另外一个著名景点是管仲老街。这是一条历史悠久的古老街道，</p><p><img src="https://i.328888.xyz/2023/05/09/iQ9O1z.jpeg" alt="管仲老街夜景"></p><p>留有许多清朝和明朝时期的建筑和文化遗产。这里有古色古香的门楼和红墙黑瓦的民居，是一个充满浓郁历史风情的风景区。不仅可以看到悠久的历史和文化，还可以尝到特色小吃和陶艺品，感受到浓浓的民俗文化。</p><p><img src="https://i.328888.xyz/2023/05/09/iQ9tKA.jpeg" alt="管仲老街风景"></p><p>综上所述，我深爱我的家乡，这里的美景、人文历史让我为之自豪。如果你来到阜阳市颍上县，不妨去游览八里河风景区和管仲老街，相信你会有一段难忘的旅行经历。</p><h2 id="四-旅游日记">四.旅游日记</h2><p>在四月的一个周末和女朋友前往南京</p><p>于晚上到达南京南站</p><p><img src="https://i.328888.xyz/2023/05/09/iQ97g8.jpeg" alt="南京南站"></p><p>首站在次日早上去了古鸡鸣寺，欣赏了路途的樱花和寺庙的壮观</p><p><img src="https://i.328888.xyz/2023/05/09/iQ9ELZ.jpeg" alt="鸡鸣寺"></p><p><img src="https://i.328888.xyz/2023/05/09/iQ96RH.jpeg" alt="鸡鸣寺"></p><p>随后去往了南京城墙，在城墙上欣赏了更多的美景，也拍了很多的照片</p><p><img src="https://i.328888.xyz/2023/05/09/iQ956P.jpeg" alt="南京城墙"></p><p><img src="https://i.328888.xyz/2023/05/09/iQ9vgJ.jpeg" alt="墙上风景"></p><p><img src="https://i.328888.xyz/2023/05/09/iQ9TfV.jpeg" alt="墙上拍照"></p><p>之后不仅去了南京的玄武湖还有老门东，同时也在老门东里找到了德云社，第一天的行程到这里就结束了。</p><p><img src="https://i.328888.xyz/2023/05/09/iQ99Lc.jpeg" alt="玄武湖风景"></p><p><img src="https://i.328888.xyz/2023/05/09/iQJyoL.jpeg" alt="老门东"></p><p><img src="https://i.328888.xyz/2023/05/09/iQJAfp.jpeg" alt="德云社"></p><p>第二天主要就是去了，南京的牛首山，那是一个非常大的景区，游玩那里就需要大概一整天，因为下午还要赶车，所以我们只去了牛首山的主要的景点</p><p><img src="https://i.328888.xyz/2023/05/09/iQJmmA.jpeg" alt="牛首山入口"></p><p>牛首山是一座佛山，里面的佛像是中国之最，尤其是佛首宫拥有一万个佛像非常壮观</p><p><img src="https://i.328888.xyz/2023/05/09/iQJxGd.jpeg" alt="佛像"></p><p><img src="https://i.328888.xyz/2023/05/09/iQJewq.jpeg" alt="佛像"></p><p>在佛首公的底层向上看可以看到壮观的人造天空，上面的天空好像真的天庭一样，非常壮观</p><p><img src="https://i.328888.xyz/2023/05/09/iQJoIp.jpeg" alt="天空顶"></p>]]></content>
      
      
      <categories>
          
          <category> 我们的世界 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生活 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>邵纪杰的世界</title>
      <link href="/2023/05/06/oursWorld/%E9%82%B5%E7%BA%AA%E6%9D%B0%E7%9A%84%E4%B8%96%E7%95%8C/"/>
      <url>/2023/05/06/oursWorld/%E9%82%B5%E7%BA%AA%E6%9D%B0%E7%9A%84%E4%B8%96%E7%95%8C/</url>
      
        <content type="html"><![CDATA[<h1>自我介绍</h1><pre><code>大家好，我来自安徽黄山（让你们浅浅看下招牌）现就读合肥大学（学院），是一名大二学生，软件工程专业。此前，去过新疆，对其风景感到震撼。</code></pre><p><img src="https://i.328888.xyz/2023/05/06/iangUL.jpeg" alt="迎客松"></p><h1>打卡边疆</h1><pre><code>如临仙境</code></pre><p><img src="https://i.328888.xyz/2023/05/06/iaDaut.jpeg" alt="风景照"><br><img src="https://i.328888.xyz/2023/05/06/ianqcN.jpeg" alt="风景"></p><pre><code>一个天空，两种景色</code></pre><p><img src="https://i.328888.xyz/2023/05/06/iatfFq.jpeg" alt="风景照"></p><pre><code>遍地牛羊，青青草原</code></pre><p><img src="https://i.328888.xyz/2023/05/06/iatItF.jpeg" alt="风景照"></p><pre><code>雪景（南方人没见过那种）</code></pre><p><img src="https://i.328888.xyz/2023/05/06/iatsPa.jpeg" alt="风景照"><br><img src="https://i.328888.xyz/2023/05/06/iat9Wx.jpeg" alt="风景照"><br><img src="https://i.328888.xyz/2023/05/06/iatJpk.jpeg" alt="风景照"></p><h1>我的家乡</h1><pre><code>我的家乡坐落在群山之中，依山傍水，空气清新，一方水土养育一方人。</code></pre><p><img src="https://i.328888.xyz/2023/05/06/iatS2z.jpeg" alt="家乡照"></p><h1>我的大学</h1><pre><code>认识了很多同学，以及其他专业的室友。</code></pre><p><img src="https://i.328888.xyz/2023/05/06/iaXCXa.jpeg" alt="我的室友"></p><h1>我的世界</h1><p>在我的内心世界中，有一座敢与刘禹锡的陋室媲美的居所，有-处不差于陶渊明的世外桃源的仙境。它是喧闹的城市中僻静的场所，它是污染的环境中优美的地方，它是瑕疵的处境中淳朴的境地。<br>这里你听不到喧哗的车声，只能聆听悦耳的鸟叫音。画眉在唱歌，喜鹊的歌唱，清脆而舒心的音符带来鸟儿的欢乐。任何一处地方,都适合让你走进书的世界。在这里你能挑选-本自己喜欢的书籍,坐在躺椅_上,舒适地浏览着-排排文字， 诧异地飞进作者的心里。安静的环境指挥着厂机器的轰隆,阳花炮的喧嚣,任何商场的音乐。都让它们静止在还没响前奏的时间内，让噪音和我们远离。<br>这里你见不到漫天飞舞的垃圾,只能欣赏树木葱葱的园林。-排排整齐的小白杨，过优美的桃花林，四季的花儿齐放,不时能闻到清新的花香。在这里你随时随刻能吃到鲜美的果子，果树遍地，树干不高，伸手及触。各个地方都有不同的人种的花和栽的果树，你要精心呵护它、抚养它，到了收获的时节自己会感到成功的喜悦。清澈的小河流淌在园林间，河底漫部着沙石，没有人去破坏，清灵得像面镜子。各种名贵的鱼在小河中生存,也没有人打捞。<br>这里你闻不到犯罪的血腥，只能看到互帮互助的场景。谁需要帮助，谁盼望开解，只要听到求助的信息，附近的人们都争先恐后地前来询问。犯罪分子在这样的境地中E经消失,打架斗殴现象也早已被隐埋。到处弥漫着和谐欢乐的范围，散布着喜庆的消息。<br>我喜欢这里的温馨僻静,喜欢这里的优美清新，喜欢这里的淳朴安乐。也许这只是理想与幻想相结合，但我的真实世界-样充满和谐与美好。</p>]]></content>
      
      
      <categories>
          
          <category> 我们的世界 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生活 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>王朝阳的世界</title>
      <link href="/2023/05/04/oursWorld/%E7%8E%8B%E6%9C%9D%E9%98%B3%E7%9A%84%E4%B8%96%E7%95%8C/"/>
      <url>/2023/05/04/oursWorld/%E7%8E%8B%E6%9C%9D%E9%98%B3%E7%9A%84%E4%B8%96%E7%95%8C/</url>
      
        <content type="html"><![CDATA[<h1>1. 我的个人介绍</h1><p>​               <strong>你好</strong>，我是来自安徽合肥的一名大二学生王朝阳，目前的专业是软件工程！<br>“什么？你是程序猿？快让我看看look look your 帅气片。“这样好吗？我头发挺多哩。<br>算了罢了，不绕关子了，说到自我介绍，怎么能没有个人照片呢，不然我认得你是谁啊？往下看：</p><p><img src="https://s1.ax1x.com/2023/05/04/p9t11EQ.jpg" alt="个人初二自拍"></p><p>​什么？看不出来长什么样？服了，那就再看：</p><p><img src="https://s1.ax1x.com/2023/05/04/p9t1JCn.jpg" alt="个人自拍二"></p><p>​哎，大概就…这样吧…咳咳，这个不重要，既然我放弃了走颜值演员的道路，这一切都不是那么的重要了，我在说什么，第一印象还是很重要的啊。说起程序员的第一印象是什么，当然是…头发啦！头发少的一看就是大佬？？。。哦,shit，是技术啊，那坏了，我是菜逼。呸呸呸，无所谓，赶紧进入下一环节吧，这个人介绍我是介绍不下去一点了。</p><p>​看下面！！！</p><h1>2. 我的生活</h1><p>​王朝阳的生活，总结起来就是，二刺螈与现充的结合体。？你小子串台了。我的生活吗？充满了很多事情吧，我只介绍我的大学生活吧，老师给我们的作业貌似就是这样说明滴。可不是我懒的写哦。</p><h2 id="2-1-程序员前传">2.1 程序员前传</h2><p>​高考结束后，其实我的第一专业不是软件工程，而是”食品科学与工程“，这样我度过了目前为止我感觉最舒服的一个学期吧，那个时候，大一上，太美好了，回忆起来我现在都心痛。仍然记得当时上课，无论是高数，无机化学，分析化学，有机化学，物理化学，生物化学…and英语(化学没那么多，吓唬你的)，我还是一个能好好听课的学。那时候，每天的生活不固定，但是，好像除了玩还是玩，其实也不全是。那时候算是把大学该做的一些事做了吧，用现在的角度来看。</p><p>​我加入了篮球俱乐部，加入了话剧俱乐部，加入了学生会，加入了…没啦。别说，还挺忙的，篮球俱乐部，在沃恩军训的时候，我们篮球俱乐部是有训练的，包括了军训结束后的晚训和早训。晚训从9点到11点，11点回到宿舍，热水都没几点了，痛苦。早训，6点多一点就要到球场！我都不知道我当时是怎么做到大学6点多起床的，痛苦！难道，我的篮球俱乐部生涯只剩下痛苦了吗？显而易见，并非如此。在这里，我收获了一起奋斗的友情，那时候，留下的汗水也是甜的。虽然我们比赛没有取得很好的成绩，但是大家变得更加凝聚与强大了。我们现在也经常一起打球哦。说起话剧俱乐部，我上面是不是说过抛弃了颜值演员路线？哈哈哈，没错，我小时候还真的挺想当个演员呢。所以话剧俱乐部，参加就完事！有个面试，当时我们选角色，搭配着演，我选的是倩女幽魂中的姥姥，对，现在就开始“反串”了哈哈，不过是反串角色哦。我这个角色演得效果很好，很多妹子拉着我搭戏，我，狂喜。咳咳，尽力帮帮忙吧，说真的，真的可还行。</p><p><img src="https://i.328888.xyz/2023/05/07/iaJNYz.jpeg" alt="化学实验"></p><p>​转眼就到期末了，真的快啊，我当时是怎么在宿舍好好复习下去的，带着舍友们一起狂学是吧，内卷？？恐怖如斯。当时，还剩下一个星期左右吧，宿舍开始疯了，空调开一天不带关的，这样子度过最后一个星期。真没想到是刷刷的往下掉啊，恐怖如斯。我当时班级里40个人，男的就12个人，请记住我现在说过的这句话。然后我，身为学号01的男人，势必要为男人们争光。最终，化学全班第一，高数卷面分是唯一95+的，90+的男人，其他都是女生，太痛了啊。然后我就迎来了人生中一个重要的转折——转专业。</p><h2 id="2-2-转行成功">2.2 转行成功</h2><p>​说实话，在大一上一直到期末我都没去思考转专业的事情，只是在开学的时候思考过，后来得出的结论是先享受现在的专业吧。后来在寒假，就直接重新蹦出这个想法，转专业。说实话，人是应该要相信机遇的，在刚入学的时候是一个大二的学长当教官带的我们的，然后某次我从班级同学中无意听说了他是计算机系的学长，然后我抱着尝试的态度找到了他，他很耐心的帮助我。就这样我在寒假的时候对于C语言有了一部分的入门认识。转专业的考试其实我考的很一般般，我觉得是在面试的时候发挥了较大的功夫与作用。你懂的吧，面试就是随意扯蛋哈哈。不过，也透露出一股自信与强烈的目标。最后我转专业成功了，转到了软件工程。这也太库辣！</p><p><img src="https://i.328888.xyz/2023/05/07/iaho6A.jpeg" alt="寒假的C语言训练"></p><h2 id="2-3-软件工程的日常">2.3 软件工程的日常</h2><p>​到此为止，这篇文章诞生的最初契机已经出现啦。在我成为软件工程的一员后，这篇文章注定会出现了。对，我说的是注定，如果我是摆烂的人的话，或许也不会诞生哈哈。这叫什么，墨菲定律的另一种用法<a href="https://baike.baidu.com/item/%E5%A2%A8%E8%8F%B2%E5%AE%9A%E5%BE%8B/746284">墨菲定律</a>如果我转行了，这件事一定会发生，因为我就是这样的一个人。不过，转专业的生活真的好累啊，先说补修的事情，到现在我还需要补修线代，现在已经5月份了啊。貌似我还什么都没学呢。恐怖！对了，突然想起来，写完这个我要赶紧去写我的线代报告了，手写！可恶。转回来，程序员学生的日常是什么呢？首先班里41人只有5个女生，？？？哦，不是吐槽啊。日常就是封校。哈哈哈。大一下确实也经历了好久的封校，不对，大二上也有。都扯远了.</p><p>​程序员学生的日常生活，当然是学习啦。我进入了一个仿人机器人实验室。这个后续我会说。然后那段时间是刚学java的时间吧，晚上没事就窝到实验室学习。白天就上课，生活貌似就是这么简单。然后晚上回到宿舍就开始打游戏，原神，lol。这是之前哦，现在晚上我就玩玩APEX，至于原神是什么？早早逃离这片提瓦特大陆了哈哈。对了，我最爱的是胡桃。<img src="https://i.328888.xyz/2023/05/07/ia5lLE.jpeg" alt="胡桃的第一次复刻"></p><p>给最爱的角色来张图片不过分吧哈哈。</p><p>​学习是永无止境的，我在大一下学完了Java,暑假本来想疯狂study的，但是，你懂的，不尽人意啊。就简单学学html和css,以及数据库的简单知识。到现在为止，我的计划还没完成呢。哎， 现在要学的还是很多啊。对了，我还拿到了奖学金，虽然不是一等奖，原因很简单，4级没过啊，那玩意加综测分简直是作弊，所以我现在还要准备4级，对的，到现在还没过。坏了，不能再说了，害怕，马上快要期末考试了，我还没咋听课呢。加油吧，少年，大学生活没我们想的很轻松。还是转向娱乐吧要不，哈哈。</p><h2 id="2-4-现充的娱乐生活">2.4 现充的娱乐生活</h2><p>​OK，学习什么的，一句话，自己要自觉。但是生活中只有学习，岂不是废了。对，那我已经废了一半了，开个玩笑哈哈。首先，我认为，我真实且痛恨的认识到上课玩手机就是浪费时间。看些无聊的短视频。哦，对了，其实，我也有拍抖音的兴趣哈哈。抖音搜索**“黄前久美子”**用户，你一定能搜到我，我的主页第一个视频时如何问不认识的女孩要微信，xdm，开始整活咯。<a href="https://www.douyin.com/user/self?modal_id=7077540823688138025">黄前久美子的主页 - 抖音 (douyin.com)</a>好丢脸啊 ，哎。拍不了一点。平时我是把抖音卸载了的，然后在想要拍视频的时候下载回来。听起来还挺自律，哈哈，打错特错咯！被迫的，呜呜。。。</p><p>​现充生活之运动。我平时喜欢打篮球，这学期我也办了一张健身卡，健健身啥的，什么？想看腹肌？喂，看不了一点，这玩意就不是人能练的啊（/(ㄒoㄒ)/~~）！即便如此，对了，我抖音也许会发哦，嘿嘿，关注关注me。有时不得不感叹，打篮球的时间真的越来越少了，但是，我依旧保持着这份热爱。我喜欢的NBA球星是KD，欧文，哈登。源于我的篮网啊，那时我也是刚看NBA，那真的是最美好的一段时间，篮网生涯，kd的天王山之战，kd的踩线，真的是遗憾一辈子的事情。算了，不说这个了，健身更不用说，肯定是为了身材好看啊，为了谈对象，咳咳，为了自己无疑。除此之外，自己也喜欢出去玩玩的，这个5.1去了南京玩玩，人是真多啊。以后有旅游的机会还是要把握啊。<img src="https://i.328888.xyz/2023/05/07/ia5v85.jpeg" alt="天王上之战"></p><p>自古美人叹迟暮，不许英雄见白头。</p><h2 id="2-5-二次元的娱乐生活">2.5 二次元的娱乐生活</h2><p>​终究还是来了，其实我也是个动漫爱好者。我的第一部动漫是《我家女仆有够烦》，这个就当伪第一部吧，哈哈。我真正的第一部是《紫罗兰永恒花园》，当时看了一个mad<a href="https://www.bilibili.com/video/BV1G441177ZP/?spm_id_from=333.999.0.0&amp;vd_source=0f284da85feb1334c893b978b9f5425d">一听就中毒，使人极度舒适的视听盛宴，愿时间永远停留在此刻，前方高能来袭！！！</a>，真的是，第一眼就爱上了这个角色，没想到看的时候也是老泪纵横啊。然后就是恋爱番《辉夜大小姐想让我告白》，从此，我也喜欢上了恋爱番，还是那句话，我注定会喜欢上的哈哈。我是19年开始看，到现在也挺久了哈哈，不过也不能说是资深。我觉得这是一件挺好的事情，可以让自己感到快乐放松，能够调动自己的情绪，这都是美好的事物，所以，这也是一份热爱。跟着新番，又好看的就看看，不好看的就不看，每个星期，都能做这份热爱的事情，而且带来的都是不同的体验，这不是很酷吗？</p><p><img src="https://i.328888.xyz/2023/05/07/ia5uIt.png" alt="薇尔莉特"></p><h1>3. 奇闻趣事</h1><p>​欢迎来到我的奇闻趣事环节，在这里，我会着重说一些有趣的，有感悟的，轻松快乐的，亦或是难过伤心的一些事，带你更好的了解我的生活。仅针对于大学哦。</p><h2 id="3-1-我的篮球生涯">3.1 我的篮球生涯</h2><p>​篮球比赛，虽说更多的是充满了汗水，严肃，就比赛层面来说。我们学校每年会举办两场比赛，新生杯和系部联赛，新生杯就是那一组全是大一的，一般来说每个学院有三个或者四个队伍，非别对应各个年级，但是大部分都把最强的一批人搞到一队去，系部联赛就是每个队伍都可能会遇到，比如大一的遇到大四的，被狠狠暴捶。</p><p>​在大一下，我们当时队长没去一队，选择了和我们在一起继续打，当时比赛出现了很搞笑的一幕。我们都知道比赛是全场5打5，我们当时打的旅游三，因为犯规问题，打着打着对面两个人被吹下去了，而他们也没有替补了，导致最后变成了5打3，反正剩的时间也不多了，最后就是一直打完了，这个其实还挺搞笑的哈哈。可别说我们欺负别人，反正也是第一次碰到这种情况吧，最后含泪收下胜利。</p><p><img src="https://i.328888.xyz/2023/05/07/iasjf3.jpeg" alt="快攻四打一"></p><h2 id="3-2-我的话剧生涯">3.2 我的话剧生涯</h2><p>​这个标题有点太狂了哈哈。话剧生涯也算是大学的一次很好的体验吧。毕竟在话剧里还能被别人喊老公。不过，有件遗憾且伤心的事情发生在我们身上。</p><p>​大一上吧，按照惯例话剧俱乐部会在12月在在我们学校的致用礼堂举办一次话剧活动进行表演一些节目。我当时参加了也是参加了一个节目《占座位》，这个上过春晚的由开心麻花团队出品的节目，当时前前后后整整排练了该有一个月，我们都众志成城，甚至票都去发了，最终却得到了一个很难过的消息， 我们的演出被取消了，理由是疫情时期，避免人群聚集。呵呵，这也没办法，学校都这么说了，我们只能看着最终的演出溜走了。这样我的人生还是少了舞台演出这一幕啊。</p><p><img src="https://i.328888.xyz/2023/05/07/iasM7x.jpeg" alt="排练一线"></p><p>给你们打码真是抱歉啊呜呜。</p><h2 id="3-3-我的游玩生涯">3.3 我的游玩生涯</h2><p>​其实我整个大学出去旅游的次数并没有多少， 这个5.1倒是和同学一起去玩了。地点就选在了南京，我的出生之地哈哈。不得不说，5.1期间南京人确实真的多，但是，我们玩好我们自己的就行啦。我们是30号晚上抵达南京，落地南站直接就冲向了秦淮河夫子庙，刚下地铁我就意识到了事情的不妙兴，根本出不去啊。然后很努力的挤了挤秦淮河，然后晚上去的新街口那边吃的烧烤。然后，我要感谢一下青春飞扬网咖，因为哦我们发现我们没地方睡觉了哈哈，而且这个时候的宾馆都很贵很贵，我们两个男的，直接选择网吧将就一夜，哎，也没想着提前去订房间，然后就疯狂去找网吧，南京的网吧我发现个有趣的现象，每个青春飞扬网吧周围都会存在一个踏浪网咖，这就是竞争吧哈哈。我们好不容易兜兜转转找到了一个后，又打了会游戏，然后安然入睡？安然不了一点。然后早起吃了牛肉锅贴，然后去鸡鸣寺，吃完饭后又去星巴克点了杯咖啡顺便休憩一下，然后又去了玄武湖，临走前吃了一份正宗的鸭血粉丝。结束啦，5.1之旅，总体来说还是很快乐的。以至于现在还有点空虚。</p><p><img src="https://i.328888.xyz/2023/05/07/iav0dX.jpeg" alt="秦淮河"></p><p><img src="https://i.328888.xyz/2023/05/07/iavCut.jpeg" alt="夜晚的鸡鸣寺"></p><p><img src="https://i.328888.xyz/2023/05/07/iav2Ec.jpeg" alt="玄武湖"></p><h2 id="3-4-我的学习生涯">3.4 我的学习生涯</h2><p>​学习生涯我想说一件事情，我的实验室。我上文有提到一个学长，他对我很好，另外，他还把我拉近了他所在的实验室——仿人机器人实验室。他还跟我说了一些学习规划上的事情，告诉我一些学习路线，指导我一些学习方法，真的是个很好的人。可以称之为贵人了把哈哈。在这个实验室里，我获得了很多有用的知识，这里环境很好，没有喧嚣，可以放心的沉浸于学习之中。在宿舍是不可能租到这钟事情的吧。然后一直到现在，我是我们这一届的负责人，手写还有大一的学弟需要带，我们就快要参加省赛了，今年是线下比赛，而且就在我们学校举行，整个人还是很紧张的。你一定好奇我们的机器人长什么样子对吧。</p><p><img src="https://i.328888.xyz/2023/05/07/iav79p.jpeg" alt="达尔文机器人"></p><p>就长这样哈哈，机器人的具体技术和比赛我就不说了，等有时间单独提取成一篇文章发布出来。</p><h2 id="3-5-我的爱情生涯">3.5 我的爱情生涯</h2><p>​没有。？没听懂？翻篇啦！没有！！！</p><h1>4. 我的人生观</h1><p>​我感觉我现在的大学生活节奏很快，很忙，不知道大家是否有这张感觉。我们有时也会去迷茫，到底该去做什么事情，怎么做。虽然谈这个似乎很无趣，但是这正是一种最真实的状态。5.1回来之后，这段时间就陷入了不想学习的时间段，计算机领域和其他的相比，其他的我是不知道，反正我们这一行就是要不断抽出时间去学习一些技术，这些或许是书本上，甚至整个大学生涯都不会教学的内容，而且版本迭代发展很快。我其实并不想简简单单做个平凡的人，有谁不想成为一届大佬呢。说来，其实到目前为止我的计算机年龄也仅仅不过是一年。去年的四月份吧我好像蔡刚开始正式接触并学习，从我的Java开始。看课，跟着敲，写写博客，所以我有时会感叹时间时真的重要。身为转专业，我少敲了半年的C语言，这就是会导致我现在算法方面，做题方面不如其他人，低于普通值，所以我需要花费更多的时间去补。幸运的是，我并没有自暴自弃，我，仍然有着一颗上进的心。</p>]]></content>
      
      
      <categories>
          
          <category> 我们的世界 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生活 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Test文章</title>
      <link href="/2023/04/20/test/"/>
      <url>/2023/04/20/test/</url>
      
        <content type="html"><![CDATA[<h1>Test</h1><p>你是我的我是你的谁</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs Java"><span class="hljs-keyword">class</span> <span class="hljs-title class_">test</span>()&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> &#123;<br>        System.out.println(<span class="hljs-string">&quot;你好世界&quot;</span>);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>结束战斗哈哈</p><h1>end</h1>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL基础</title>
      <link href="/2023/04/20/%E6%8A%80%E6%9C%AF/MySQL%E5%9F%BA%E7%A1%80/"/>
      <url>/2023/04/20/%E6%8A%80%E6%9C%AF/MySQL%E5%9F%BA%E7%A1%80/</url>
      
        <content type="html"><![CDATA[<h1>1. 初识MySQL</h1><h2 id="1-1-什么是数据库">1.1 什么是数据库</h2><p>数据库(DB,DataBase)</p><p>概念：数据仓库，<strong>软件</strong>，安装在操作系统之上，SQL，可以存储大量的数据，500w！</p><p>作用：存储数据，管理数据</p><h2 id="1-2-数据库分类">1.2 数据库分类</h2><p><strong>关系型数据库</strong></p><ul><li>MySQL,Oracle,Sql Server,DB2,SQLlite</li><li>通过表与表之间，行列之间的关系进行数据的存储，学员信息表，考勤表…</li></ul><p><strong>非关系型数据库</strong>(NoSQL) not only</p><ul><li>Redis,MongDB</li><li>对象存储，通过对象的自身的属性来决定</li></ul><h2 id="1-3-连接数据库">1.3 连接数据库</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs mysql">mysql -u rppt -p -- 连接数据库<br><br>update mysql.user set authentication_string=password(&quot;******&quot;)where user = &#x27;root&#x27; and Host = &#x27;localhost&#x27;; -- 修改用户密码<br>flush privileges; -- 刷新权限<br>----------------------------<br>-- 所有语句都使用; 结尾<br>show databases; -- 查看所有的数据库<br><br>mysql &gt; use school --切换数据据 use 数据库名<br>Database change;<br><br>show tables; -- 查看数据库中所有的表的信息<br>describe student ; -- 显示数据库中所有的表的信息<br><br>create database westos; -- 创建一个数据库<br><br>exit -- 退出连接<br></code></pre></td></tr></table></figure><p>数据库xxx语言</p><p>DDL 定义</p><p>DML 操作</p><p>DQL 查询</p><p>DCL 控制</p><h1>2. 操作数据库</h1><h2 id="2-1-操作数据库">2.1 操作数据库</h2><p><strong>操作数据库—&gt;操作数据库中的表—&gt;操作数据库中表的数据</strong></p><p>== mysql关键字不区分大小写 ==</p><ol><li><p>创建数据库</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">CREATE DATABASE [IF NOT EXISTS] westos; -- 创建数据库westos if判断可用可不用create database shop character set utf8 collate utf8_general_ci -- 字符集，字符校对<br></code></pre></td></tr></table></figure></li><li><p>删除数据库</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">DROP DATABASE IF EXISTS westos;<br></code></pre></td></tr></table></figure></li><li><p>使用数据库</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">-- ``在tab键的上面,如果你的表名或者字段名是一个特殊字符，就需要带``USE `school`;-- 切换数据库-- user是个特殊的字段，在SQLyog中会标为关键字，而在student表中只是我设置的一个普通属性，不需要特殊标识，所以user用``标记SELECT `user` FROM student;<br></code></pre></td></tr></table></figure></li><li><p>查看数据库</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">SHOW DATABASES;-- 查看所有的数据库<br></code></pre></td></tr></table></figure></li></ol><p>学习思路：</p><ul><li>对照SQLyog可视化的历史记录来查看SQL代码，多敲SQL代码</li><li>固定的语法或关键字必须要强行记住！多敲就能记住</li></ul><h2 id="2-2-数据库的属性类型">2.2 数据库的属性类型</h2><blockquote><p>数值</p></blockquote><ul><li>tinyint 十分小的数据 1个字节</li><li>smallint 较小的数据 2个字节</li><li>mediumint 中等大小的数据 3个字节</li><li><strong>int 标准的整数 4个字节 常用</strong></li><li>bigint 较大的数据 8个字节</li><li>float 浮点数 4个字节</li><li>double 浮点数 8个字节（这种类型的浮点数都会有精度问题）</li><li><strong>decimal 字符串形式的浮点数 金融计算的时候一般都是使用decimal，这不会丢失精度</strong></li></ul><p><font color=red>int显示长度与零填充有关，不与值大小有关，而varchar的长度与字符串长度和值有关</font></p><blockquote><p>字符串</p></blockquote><ul><li>char 字符串固定大小的 0~255</li><li><strong>varchar 可变字符串 0~65535 常用的变量 String</strong></li><li>tinytext 微型文本 2^8 - 1</li><li><strong>text 文本串 2^16 - 1 一般可保存大文本</strong></li></ul><blockquote><p>时间日期</p></blockquote><p>java.util.Data</p><ul><li>data YYYY-MM-DD 日期格式</li><li>time HH:mm:ss      时间格式</li><li><strong>datetime YYYY-MM-DD HH:mm:ss     最常用的时间格式</strong></li><li><strong>timestamp 时间戳 1970.1.1到现在的毫秒数 较为常用</strong></li><li>year 年份表示</li></ul><blockquote><p>null</p></blockquote><ul><li>没有值 未知的意思</li><li>==注意，不要使用NULL进行运算，有NULL的话最后的结果也是NULL，没意义 ==</li></ul><h2 id="2-3-数据库的字段属性（重点）">2.3 数据库的字段属性（重点）</h2><p><font color=red>Unsigned:</font></p><ul><li>无符号的整数</li><li>表明了该列不能声明为负数</li></ul><p><font color=red>zerofill:</font></p><ul><li>零填充的</li><li>不足的位数，使用零来填充，int(3)，5 … 005</li></ul><p><font color=red>自增:</font>（auto_increment）</p><p>+ 通常理解为自增,一般使用在主键中<br>+ 通常用来设计唯一的主键 index，必须是整数类型<br>+ 可以自定义设计主键自增的起始值和步长</p><p><font color=red>非空：</font>NULL 与 NOT NULL</p><p>+ 假设设置为not null：如果不给它赋值，就会报错！<br>+ 不设置not null：如果不填写值，默认就是NULL</p><p><font color=red>默认：</font></p><ul><li>设置默认的值</li></ul><p>扩展：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs mysql">/* 每一个表，都必须存在以下五个字段！未来做项目用的，表示一个记录存在意义id   <br>主键`version`    <br>乐观锁is_delete    <br>伪删除gmt_create   <br>创建时间gmt_update   <br>修改时间*/<br></code></pre></td></tr></table></figure><h2 id="2-4-创建数据库表（重点）">2.4 创建数据库表（重点）</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-comment">-- 目标：创建一个school数据库-- 创建学生表（列，字段） 使用SQL创建-- 学号int 登录密码varchar(20) 姓名，性别varchar(2)，出生日期(datetime)，家庭住址。email</span><br><span class="hljs-comment">-- 注意点，使用英文（），表的名称和字段  尽量使用``括起来</span><br><span class="hljs-comment">-- AUTO_INCREMENT 自增-- 字符串使用单引号&#x27;&#x27;括起来！</span><br><span class="hljs-comment">-- 所有的语句后面加英文逗号 , (英文)，最后一个不用加</span><br><span class="hljs-comment">-- primary key 主键，一般一个表只有一个唯一的主键</span><br><span class="hljs-comment">-- ENGINE=INNODB 设置存储引擎， DEFAULT CHARSET=utf8 设置编码格式</span><br><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">TABLE</span> IF <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">EXISTS</span> `student`(<br>    `id` <span class="hljs-type">INT</span>(<span class="hljs-number">4</span>) <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> AUTO_INCREMENT COMMENT <span class="hljs-string">&#x27;学号&#x27;</span>,     <br>    `password` <span class="hljs-type">VARCHAR</span>(<span class="hljs-number">20</span>) <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> <span class="hljs-keyword">DEFAULT</span> <span class="hljs-string">&#x27;123456&#x27;</span> COMMENT <span class="hljs-string">&#x27;密码&#x27;</span>,     <br>    `name` <span class="hljs-type">VARCHAR</span>(<span class="hljs-number">10</span>) <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> <span class="hljs-keyword">DEFAULT</span> <span class="hljs-string">&#x27;匿名&#x27;</span> COMMENT <span class="hljs-string">&#x27;名字&#x27;</span>,     <br>    `sex` <span class="hljs-type">VARCHAR</span>(<span class="hljs-number">2</span>) <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> <span class="hljs-keyword">DEFAULT</span> <span class="hljs-string">&#x27;男&#x27;</span> COMMENT <span class="hljs-string">&#x27;性别&#x27;</span>,     <br>    `birthday` DATETIME <span class="hljs-keyword">DEFAULT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;出生日期&#x27;</span>,     <br>    `address` <span class="hljs-type">VARCHAR</span>(<span class="hljs-number">50</span>) <span class="hljs-keyword">DEFAULT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;家庭住址&#x27;</span>,     <br>    `email` <span class="hljs-type">VARCHAR</span>(<span class="hljs-number">30</span>) <span class="hljs-keyword">DEFAULT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;邮件&#x27;</span>,     <br>    <span class="hljs-keyword">PRIMARY</span> KEY(`id`)<br>)ENGINE<span class="hljs-operator">=</span>INNODB <span class="hljs-keyword">DEFAULT</span> CHARSET<span class="hljs-operator">=</span>utf8<br></code></pre></td></tr></table></figure><p>格式：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">TABLE</span> [IF <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">EXISTS</span>] `表名`(     <br>    `字段名` 属性类型 [属性] [索引] [注释],     <br>    `字段名` 属性类型 [属性] [索引] [注释],   <br>    ......    <br>    `字段名` 属性类型 [属性] [索引] [注释],    <br>    <span class="hljs-keyword">primary</span> key(``)<span class="hljs-comment">-- 设置主键</span><br>)[表类型][字符集设置][注释]<br><br></code></pre></td></tr></table></figure><p><strong>常用命令：</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">SHOW</span> <span class="hljs-keyword">CREATE</span> DATABASE school  <span class="hljs-comment">-- 查看创建school数据库的语句</span><br><span class="hljs-comment">-- CREATE DATABASE `school` /*!40100 DEFAULT CHARACTER SET utf8 */</span><br><span class="hljs-keyword">SHOW</span> <span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">TABLE</span> student <span class="hljs-comment">-- 查看student数据表的定义语句</span><br><span class="hljs-keyword">DESC</span> student <span class="hljs-comment">-- 显示表的结构，属性</span><br></code></pre></td></tr></table></figure><h2 id="2-5-数据表的类型">2.5 数据表的类型</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-comment">-- 关于数据库的引擎</span><br><span class="hljs-comment">/*</span><br><span class="hljs-comment">INNODB 默认使用~</span><br><span class="hljs-comment">MYISAM 早些年使用的</span><br><span class="hljs-comment">*/</span><br></code></pre></td></tr></table></figure><table><thead><tr><th></th><th>MYISAM</th><th>INNODB</th></tr></thead><tbody><tr><td>事务支持</td><td>不支持</td><td>支持</td></tr><tr><td>数据行锁定</td><td>不支持</td><td>支持</td></tr><tr><td>外键约束</td><td>不支持</td><td>支持</td></tr><tr><td>全文索引</td><td>支持</td><td>不支持</td></tr><tr><td>表空间大小</td><td>较小</td><td>较大，约为2倍的MYISAM</td></tr></tbody></table><p>常规使用操作：</p><ul><li>MYISAM 节约空间，速度较快</li><li>INNODB 安全性高，事务的处理，多表多用户操作</li></ul><blockquote><p>在物理空间存在的位置:</p></blockquote><p>所有的数据库文件都存在data目录下，一个文件夹就对应一个数据库，本质还是文件的存储！</p><p>MYSQL（5版本）引擎在物理文件上的区别：</p><ul><li>INNODB 在数据库中有一个*.frm文件和* .ibd文件，以及上级目录下的ibdata1文件</li><li>MYISAM对应文件：<ul><li>*.frm 表结构的定义文件</li><li>*.MYD 数据文件（data）</li><li>*.MYI 索引文件（index）</li></ul></li></ul><blockquote><p>设置数据库表的字符集编码</p></blockquote><p>MySQL的默认编码是Latin1 不支持中文</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">charset =utf8<br></code></pre></td></tr></table></figure><p>不设置的话，会是mysql默认的字符集编码（不支持中文）</p><ol><li><p>在建表的时候设置字符编码</p><p><em>ENGINE</em>=<strong>InnoDB</strong>  <em>DEFAULT CHARSET</em>=<strong>utf8</strong></p></li><li><p>在my.ini主配置中设置默认的编码（不推荐）</p><p><code>character-set-server=utf8</code></p></li></ol><h2 id="2-6-修改删除表">2.6 修改删除表</h2><blockquote><p><strong>修改</strong>：</p></blockquote><p>对表进行修改，不是修改里面的数据（行）</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-comment">-- 创建表</span><br><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">TABLE</span> IF <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">EXISTS</span> teacher (<br>    `tid` <span class="hljs-type">INT</span>(<span class="hljs-number">5</span>) <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> AUTO_INCREMENT COMMENT <span class="hljs-string">&#x27;id&#x27;</span>, <br>    <span class="hljs-keyword">PRIMARY</span> KEY(tid)<br>)ENGINE<span class="hljs-operator">=</span>INNODB <span class="hljs-keyword">DEFAULT</span> CHARSET<span class="hljs-operator">=</span>utf8<br><span class="hljs-comment">-- 修改表名  ALTER TABLE 旧表名 RENAME AS 新表名</span><br><span class="hljs-keyword">ALTER</span> <span class="hljs-keyword">TABLE</span> teacher RENAME <span class="hljs-keyword">AS</span> teacher1<br><span class="hljs-comment">-- 增加表的字段(属性) ALTER TABLE 表名 ADD 字段名（属性名） 数据类型</span><br><span class="hljs-keyword">ALTER</span> <span class="hljs-keyword">TABLE</span> teacher1 <span class="hljs-keyword">ADD</span> `age` <span class="hljs-type">INT</span>(<span class="hljs-number">3</span>)<br><span class="hljs-comment">-- 修改表的字段（重命名，修改约束！）</span><br><span class="hljs-keyword">ALTER</span> <span class="hljs-keyword">TABLE</span> teacher1 MODIFY age <span class="hljs-type">VARCHAR</span>(<span class="hljs-number">11</span>) <span class="hljs-comment">-- 修改约束（数据类型）</span><br><span class="hljs-keyword">ALTER</span> <span class="hljs-keyword">TABLE</span> teacher1 CHANGE age age1 <span class="hljs-type">INT</span>(<span class="hljs-number">3</span>) <span class="hljs-comment">-- 字段重命名</span><br><span class="hljs-comment">-- 删除表的字段(属性):ALTER TABLE 表名 DROP 属性名（字段名）</span><br><span class="hljs-keyword">ALTER</span> <span class="hljs-keyword">TABLE</span> teacher1 <span class="hljs-keyword">DROP</span> age1<br></code></pre></td></tr></table></figure><blockquote><p>删除：</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs SQL"><span class="hljs-comment">-- 删除表（如果表存在则删除）</span><br><span class="hljs-keyword">DROP</span> <span class="hljs-keyword">TABLE</span> IF <span class="hljs-keyword">EXISTS</span> teacher1<br></code></pre></td></tr></table></figure><p>注意点：</p><ul><li>字段名要用 ``包裹</li><li>注释： — 和 /**/</li><li>sql关键字大小写不敏感，建议都小写（SQLyog会自动转为大写）</li><li>所有的符号全部用英文</li></ul><h1>3. MySQL数据管理</h1><h2 id="3-1-外键">3.1 外键</h2><blockquote><p>方式一：创建表的时候就添加外键</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">TABLE</span> `grade`(<br>    `gid` <span class="hljs-type">INT</span>(<span class="hljs-number">10</span>) <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> AUTO_INCREMENT COMMENT <span class="hljs-string">&#x27;年级id&#x27;</span>,<br>    <span class="hljs-keyword">PRIMARY</span> KEY(`gid`)<br>)ENGINE<span class="hljs-operator">=</span>INNODB <span class="hljs-keyword">DEFAULT</span> CHARSET<span class="hljs-operator">=</span>utf8<br><br><span class="hljs-comment">-- 学生表的gradeid字段，要去引用年级表的gradeid</span><br><span class="hljs-comment">-- 定义外键key</span><br><span class="hljs-comment">-- 给这个外键添加约束（执行引用） constraint约束 references引用</span><br><span class="hljs-comment">-- 注意添加表的时候确保这个表之前不在，不要直接在添加表的代码里临时添加数据，添加表属性用alter...add...</span><br><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">TABLE</span> IF <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">EXISTS</span> `student`(<br>     `id` <span class="hljs-type">INT</span>(<span class="hljs-number">4</span>) <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> AUTO_INCREMENT COMMENT <span class="hljs-string">&#x27;学号&#x27;</span>,<br>     `gradeid` <span class="hljs-type">INT</span>(<span class="hljs-number">10</span>) <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;学生的年级&#x27;</span>,<br>     <span class="hljs-keyword">PRIMARY</span> KEY(`id`),<br>     KEY `FK_gradeid`(`gradeid`),<br>     <span class="hljs-keyword">CONSTRAINT</span> `FK_gradeid` <span class="hljs-keyword">FOREIGN</span> KEY (`gradeid`) <span class="hljs-keyword">REFERENCES</span> `grade`(`gid`)<br>)ENGINE<span class="hljs-operator">=</span>INNODB <span class="hljs-keyword">DEFAULT</span> CHARSET<span class="hljs-operator">=</span>utf8<br></code></pre></td></tr></table></figure><blockquote><p>方式二：在创建表时没有添加外键，手动临时添加外键约束如下：</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-comment">-- 创建表的时候没有外键关系,手动修改表，创建外键</span><br><span class="hljs-keyword">ALTER</span> <span class="hljs-keyword">TABLE</span> `student` <br><span class="hljs-keyword">ADD</span> <br><span class="hljs-keyword">CONSTRAINT</span> `FK_gradeid` <span class="hljs-keyword">FOREIGN</span> KEY(`gradeid`) <span class="hljs-keyword">REFERENCES</span> `grade`(`gid`);<br><span class="hljs-comment">-- ALTER TABLE 表名 ADD CONSTRAINT 约束名 FOREIGN KEY(作为外键的属性) REFERENCES 哪个表(哪个字段（属性）);</span><br></code></pre></td></tr></table></figure><p>以上操作都是物理外键，数据库级别的外键，不建议使用，（避免数据库过多造成困扰）</p><p><strong>最佳实践</strong></p><ul><li>数据库就是单纯的表，只用来存数据，只有行（数据）和列（字段，属性）</li><li>我们想使用多张表的数据，想实现关联（外键）（用程序去实现）</li></ul><p>为什么不用外键： <a href="https://blog.csdn.net/yxz8102/article/details/107303975">(19条消息) 为什么实际开发中不使用外键_王富贵儿。的博客-CSDN博客_实际开发中会用外键吗</a></p><h2 id="3-2-DML语言">3.2 DML语言</h2><p>**数据库意义：**数据存储，数据管理</p><p>DML语言：数据操作语言**（对数据（记录，行）进行操作）**</p><ul><li>insert</li><li>update</li><li>delete</li></ul><h2 id="3-3-添加">3.3 添加</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-comment">-- 插入语句（添加）</span><br><span class="hljs-comment">-- insert into 表名（[字段名1,字段名2,...]）values (值1,值2,值3,...),(值1,值2,值3,...),(值1,值2,值3,...)...</span><br><span class="hljs-comment">-- 一个括号values()代表一个数据(记录)</span><br><span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> `grade`(gname) <span class="hljs-keyword">VALUES</span> (<span class="hljs-string">&#x27;大四&#x27;</span>)<br><span class="hljs-comment">-- 由于主键自增我们可以省略（如果不写表的字段，他就会一一匹配）</span><br><span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> `grade` <span class="hljs-keyword">VALUES</span>(<span class="hljs-string">&#x27;大三&#x27;</span>) <span class="hljs-comment">-- 这里会报错，大三对应的是gid（int类型）</span><br><span class="hljs-comment">-- 插入多个字段</span><br><span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> grade(gname) <br><span class="hljs-keyword">VALUES</span> (<span class="hljs-string">&#x27;大三&#x27;</span>),(<span class="hljs-string">&#x27;大二&#x27;</span>);<br><span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> `student`(`name`) <span class="hljs-keyword">VALUES</span> (<span class="hljs-string">&#x27;张三&#x27;</span>)<br><span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> `student`(`name`,`password`,`sex`)<br><span class="hljs-keyword">VALUES</span>(<span class="hljs-string">&#x27;张三&#x27;</span>,<span class="hljs-string">&#x27;aaaaaaa&#x27;</span>,<span class="hljs-string">&#x27;男&#x27;</span>),(<span class="hljs-string">&#x27;李四&#x27;</span>,<span class="hljs-string">&#x27;bbbbbb&#x27;</span>,<span class="hljs-string">&#x27;男&#x27;</span>);<br><span class="hljs-comment">-- 没有字段名（属性名）则需要一一对应表中的属性顺序</span><br><span class="hljs-comment">-- 要全部属性对应的数据都写出来，主键不能一样，外键编号对应在引用表里也必须存在</span><br><span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> `student` <span class="hljs-keyword">VALUES</span>(<span class="hljs-number">10</span>,<span class="hljs-string">&#x27;000000&#x27;</span>,<span class="hljs-string">&#x27;Tang&#x27;</span>,<span class="hljs-string">&#x27;男&#x27;</span>,<span class="hljs-string">&#x27;2021-01-01&#x27;</span>,<span class="hljs-string">&#x27;湖南&#x27;</span>,<span class="hljs-string">&#x27;email&#x27;</span>,<span class="hljs-number">2</span>)<br></code></pre></td></tr></table></figure><p>语法：<code>insert into 表名（[字段名1,字段名2,...]）values (值1,值2,值3,...),(值1,值2,值3,...),(值1,值2,值3,...)...</code></p><p>一 一对应</p><p><strong>注意事项：</strong></p><ol><li>字段和字段之间使用英文逗号隔开</li><li>字段是可以省略的，但是后面的值必须要一一对应，不能少</li><li>可以同时插入多条数据，values后面的值需要使用，隔开即可values(),(),…</li><li>没有字段名（属性名）则需要一 一对应表中的属性顺序<br><strong>要全部属性对应的数据都写出来，主键不能一样，外键编号对应在引用表里也必须存在</strong></li></ol><h2 id="3-4-修改">3.4 修改</h2><blockquote><p>update 修改谁 [条件] set 属性名=新值</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs SQL"><span class="hljs-comment">-- 修改学生名字</span><br><span class="hljs-keyword">UPDATE</span> `student` <span class="hljs-keyword">SET</span> `name`<span class="hljs-operator">=</span><span class="hljs-string">&#x27;狂神&#x27;</span> <span class="hljs-keyword">WHERE</span> id<span class="hljs-operator">=</span><span class="hljs-number">1</span>;<br><span class="hljs-comment">-- 不指定条件的情况下会修改表中所有记录的数据</span><br><span class="hljs-keyword">UPDATE</span> student <span class="hljs-keyword">SET</span> `name`<span class="hljs-operator">=</span><span class="hljs-string">&#x27;1号&#x27;</span><br><span class="hljs-comment">-- 修改多个属性，逗号隔开</span><br><span class="hljs-keyword">UPDATE</span> student <span class="hljs-keyword">SET</span> `name`<span class="hljs-operator">=</span><span class="hljs-string">&#x27;狂神&#x27;</span>,email<span class="hljs-operator">=</span><span class="hljs-keyword">NULL</span> <span class="hljs-keyword">WHERE</span> id <span class="hljs-operator">=</span><span class="hljs-number">6</span>;<br><span class="hljs-comment">-- 语法：</span><br><span class="hljs-comment">-- UPDATE 表名 SET column_name=value,[column_name=value,...] WHERE [条件];</span><br></code></pre></td></tr></table></figure><p>条件：where子句 运算符 id等于某个值，大于某个值，在某个区间修改 ……</p><p>UPDATE student SET <code>name</code>=’狂神’,email=’123’ WHERE id BETWEEN 2 AND 5;</p><p>操作符会返回 布尔值</p><table><thead><tr><th>操作符</th><th>含义</th><th>范围</th><th>结果</th></tr></thead><tbody><tr><td>=</td><td>等于</td><td>5=6</td><td>false</td></tr><tr><td>&lt;&gt;或!=</td><td>不等于</td><td>5&lt;&gt;6或5!=6</td><td>true</td></tr><tr><td>&gt;</td><td>大于</td><td>5&gt;6</td><td>false</td></tr><tr><td>&lt;</td><td>小于</td><td>5&lt;6</td><td>true</td></tr><tr><td>&gt;=</td><td>大于等于</td><td>5&gt;=6</td><td>false</td></tr><tr><td>&lt;=</td><td>小于等于</td><td>5&lt;=6</td><td>true</td></tr><tr><td>between…and…</td><td>在某个范围内，双闭合区间</td><td>[2,5]</td><td></td></tr><tr><td>and</td><td>&amp;&amp; 和</td><td>5&gt;1 and 1&gt;2</td><td>false</td></tr><tr><td>or</td><td>|| 或</td><td>5&gt;1 or 1&gt;2</td><td>true</td></tr></tbody></table><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-comment">-- 通过多个条件定位数据</span><br><span class="hljs-keyword">UPDATE</span> student <span class="hljs-keyword">SET</span> `name`<span class="hljs-operator">=</span><span class="hljs-string">&#x27;长江7号&#x27;</span> <span class="hljs-keyword">WHERE</span> `name`<span class="hljs-operator">=</span><span class="hljs-string">&#x27;狂神&#x27;</span> <span class="hljs-keyword">AND</span> sex<span class="hljs-operator">=</span><span class="hljs-string">&#x27;女&#x27;</span><br></code></pre></td></tr></table></figure><p><strong>注意:</strong></p><ul><li>column_name 是数据库的列，尽量带上``</li><li>筛选的条件，如果没有指定，则会修改所有的列</li><li>value是一个具体的值，也可以是一个变量</li><li>多个变量的属性之间使用英文逗号隔开</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-comment">-- CURRENT_TIME 当前时间 （变量）</span><br><span class="hljs-keyword">UPDATE</span> student <span class="hljs-keyword">SET</span> birthday<span class="hljs-operator">=</span><span class="hljs-built_in">CURRENT_TIME</span> <span class="hljs-keyword">WHERE</span> id<span class="hljs-operator">=</span><span class="hljs-number">1</span><br><span class="hljs-comment">-- or</span><br><span class="hljs-keyword">UPDATE</span> student <span class="hljs-keyword">SET</span> birthday<span class="hljs-operator">=</span><span class="hljs-string">&#x27;xxxx-xx-xx&#x27;</span> <span class="hljs-keyword">WHERE</span> id<span class="hljs-operator">=</span><span class="hljs-number">1</span><br></code></pre></td></tr></table></figure><h2 id="3-5-删除">3.5 删除</h2><blockquote><p>delete 命令</p></blockquote><p>语法：<code>delete from 表名 [where 条件]</code></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-comment">-- 删除指定数据D</span><br>ELETE <span class="hljs-keyword">FROM</span> student <span class="hljs-keyword">WHERE</span> id <span class="hljs-operator">=</span><span class="hljs-number">1</span>;<br><span class="hljs-comment">-- 删除数据没有条件（避免这样写，会全部清空表）</span><br><span class="hljs-keyword">DELETE</span> <span class="hljs-keyword">FROM</span> student;<br></code></pre></td></tr></table></figure><blockquote><p>truncate命令</p></blockquote><p>作用：完全清空一个数据库表，表的结构和索引约束不会变！</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-comment">-- 清空student表(会将自增量也清零)</span><br><span class="hljs-keyword">TRUNCATE</span> student<br></code></pre></td></tr></table></figure><blockquote><p>delete与truncate的区别</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-comment">-- 测试delete 和 truncate区别</span><br><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">TABLE</span> `test`(<br>`id` <span class="hljs-type">INT</span>(<span class="hljs-number">4</span>) <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> AUTO_INCREMENT,<br>    `coll` <span class="hljs-type">VARCHAR</span>(<span class="hljs-number">20</span>) <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span>,   <br>     <span class="hljs-keyword">PRIMARY</span> KEY(`id`)<br>)ENGINE<span class="hljs-operator">=</span>INNODB <span class="hljs-keyword">DEFAULT</span> CHARSET<span class="hljs-operator">=</span>utf8<br><span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> test(coll) <span class="hljs-keyword">VALUES</span> (<span class="hljs-string">&#x27;1&#x27;</span>),(<span class="hljs-string">&#x27;2&#x27;</span>),(<span class="hljs-string">&#x27;3&#x27;</span>)<span class="hljs-keyword">DELETE</span> <span class="hljs-keyword">FROM</span> test <br><span class="hljs-comment">-- delete 不会影响自增</span><br><span class="hljs-keyword">TRUNCATE</span> test  <span class="hljs-comment">-- 清零自增量</span><br></code></pre></td></tr></table></figure><p>了解即可：delete删除的问题，<strong>重启数据库</strong>现象:</p><ul><li>INNODB 自增列会重1开始 (存在内存当中，断电即失)</li><li>MYISAM 继续从上一个自增量开始（存在文件中，不会丢失）</li></ul><h1>4. DQL查询数据（最重点）</h1><h2 id="4-1-DQL">4.1 DQL</h2><p>DQL: Data Query Language 数据查询语言</p><ul><li>所有的查询操作都用它 Select</li><li>简单的查询，复杂的查询它都能做</li><li><font color=red>数据库中最核心的语言，最重要的语句</font></li><li>使用频率最高的语句</li></ul><p><font color = red>以下图片内的语法顺序必须遵守</font></p><p><strong>where的条件不能使用聚集函数，要再having中使用</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-comment">-- 一般sql语句</span><br><span class="hljs-operator">=</span><span class="hljs-operator">=</span>顺序很重要：<span class="hljs-operator">=</span><span class="hljs-operator">=</span><br><br><span class="hljs-keyword">select</span> 去重(<span class="hljs-keyword">distinct</span>) 要查询的字段<span class="hljs-keyword">from</span>表（注意：表和字段可以区别名）<span class="hljs-operator">=</span><span class="hljs-operator">=</span><br><br>xxx <span class="hljs-keyword">join</span> 要连接的表 <span class="hljs-keyword">on</span> 判断的连接点<br><br><span class="hljs-keyword">where</span>（具体的值，子查询语句）<span class="hljs-operator">=</span><span class="hljs-operator">=</span><br><br><span class="hljs-keyword">Group</span> <span class="hljs-keyword">By</span>（通过哪个字段来分组）<span class="hljs-operator">=</span><span class="hljs-operator">=</span><br><br><span class="hljs-keyword">Having</span>（过滤分组后的信息，条件语法和<span class="hljs-keyword">where</span>是一样的，位置不同，用在分组中）<br><br><span class="hljs-keyword">order</span> <span class="hljs-keyword">by</span>（通过哪个字段排序）【升序<span class="hljs-operator">/</span>降序】<br><br>limit startindex， pageSize（分页）<br><br>业务层面：查询：跨表，跨数据库…<br></code></pre></td></tr></table></figure><h2 id="4-2-查询指定字段">4.2 查询指定字段</h2><p><font color = red>select 字段,… from 表名 </font></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-comment">-- 查询全部学生   SELECT * FROM 表名</span><br><span class="hljs-keyword">SELECT</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">FROM</span> student<br><span class="hljs-comment">-- 查询指定字段</span><br><span class="hljs-keyword">SELECT</span> `studentno`,`studentname` <span class="hljs-keyword">FROM</span> student<br><span class="hljs-comment">-- 别名，给结果起一个别名  用AS（as可以省略）</span><br><span class="hljs-keyword">SELECT</span> `studentno` <span class="hljs-keyword">AS</span> `学号`,`studentname` <span class="hljs-keyword">AS</span> 名字 <span class="hljs-keyword">FROM</span> student<br><span class="hljs-comment">-- 在姓名前加上“姓名:XXX” 函数concat(a,b)</span><br><span class="hljs-keyword">SELECT</span> `studentno`  学号,CONCAT(<span class="hljs-string">&#x27;姓名：&#x27;</span>,`studentname`)<span class="hljs-keyword">AS</span> 新姓名 <span class="hljs-keyword">FROM</span> student<br></code></pre></td></tr></table></figure><blockquote><p>有的时候列名字不是那么的见名知意，所以有了别名 AS（可以省略） 字段名 as 别名 表名 as 别名</p></blockquote><blockquote><p>去重 distinct</p></blockquote><p><strong>作用：去除重复的结果数据，重复的数据只显示一条</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-comment">-- 查询一下有哪些同学参加了考试，成绩</span><br><span class="hljs-keyword">SELECT</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">FROM</span> <span class="hljs-keyword">result</span>  <span class="hljs-comment">-- 查询全部的考试成绩</span><br><span class="hljs-keyword">SELECT</span> `studentno` <span class="hljs-keyword">FROM</span> <span class="hljs-keyword">result</span> <span class="hljs-comment">-- 查询哪些同学参加了考试，只显示学号</span><br><span class="hljs-comment">-- 发现有重复数据，distinct去重</span><br><span class="hljs-keyword">SELECT</span> <span class="hljs-keyword">DISTINCT</span> `studentno` <span class="hljs-keyword">FROM</span> <span class="hljs-keyword">result</span><br></code></pre></td></tr></table></figure><blockquote><p>数据库的列（表达式）</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> VERSION()  <span class="hljs-comment">-- 查询系统的版本（函数）</span><br><span class="hljs-keyword">SELECT</span> <span class="hljs-number">100</span><span class="hljs-operator">*</span><span class="hljs-number">3</span><span class="hljs-number">-1</span> <span class="hljs-keyword">AS</span> 计算结果  <span class="hljs-comment">-- 用来计算（表达式）</span><br><span class="hljs-keyword">SELECT</span> @<span class="hljs-variable">@auto</span>_increment_increment <span class="hljs-comment">-- 查询自增量的步长（变量）</span><br><span class="hljs-comment">-- 学生的考试成绩+1分查看</span><br><span class="hljs-keyword">SELECT</span> `studentno`, `studentresult`<span class="hljs-operator">+</span><span class="hljs-number">1</span> <span class="hljs-keyword">AS</span> <span class="hljs-string">&#x27;提分后&#x27;</span> <span class="hljs-keyword">FROM</span> <span class="hljs-keyword">result</span><br></code></pre></td></tr></table></figure><p><strong>数据库中的表达式有：文本值，列，null，函数，计算表达式，系统变量….</strong></p><p><strong>select 表达式 from 表</strong></p><h2 id="4-3-where条件子句">4.3 where条件子句</h2><p>作用 ： 检索条件中<code>符合条件</code>的值</p><blockquote><p>逻辑运算符：<font color=red>尽量使用英文字母</font></p></blockquote><table><thead><tr><th>运算符</th><th>语法</th><th>描述</th></tr></thead><tbody><tr><td>and &amp;&amp;</td><td>a and b a&amp;&amp;b</td><td>逻辑与</td></tr><tr><td>or</td><td>a or b    a||b</td><td>逻辑或</td></tr><tr><td>not !</td><td>not a !a</td><td>逻辑非</td></tr></tbody></table><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-comment">-- ========where========</span><br><span class="hljs-keyword">SELECT</span> studentNo,StudentResult <span class="hljs-keyword">FROM</span> <span class="hljs-keyword">result</span>; <span class="hljs-comment">-- 不区分大小写</span><br><span class="hljs-comment">-- AND 查询考试成绩在90~100分之间</span><br><span class="hljs-keyword">SELECT</span> `studentno`,`studentresult` <span class="hljs-keyword">FROM</span> <span class="hljs-keyword">result</span><br><span class="hljs-keyword">WHERE</span> `studentresult`<span class="hljs-operator">&gt;=</span><span class="hljs-number">90</span> <span class="hljs-keyword">AND</span> `studentresult`<span class="hljs-operator">&lt;=</span><span class="hljs-number">100</span>;<br><span class="hljs-comment">-- &amp;&amp;</span><br><span class="hljs-keyword">SELECT</span> `studentno`,`studentresult` <span class="hljs-keyword">FROM</span> <span class="hljs-keyword">result</span><br><span class="hljs-keyword">WHERE</span> `studentresult`<span class="hljs-operator">&gt;=</span><span class="hljs-number">90</span> <span class="hljs-operator">&amp;&amp;</span> `studentresult`<span class="hljs-operator">&lt;=</span><span class="hljs-number">100</span>;<br><span class="hljs-comment">-- 闭合区间：between...and...</span><br><span class="hljs-keyword">SELECT</span> `studentno`,`studentresult` <span class="hljs-keyword">FROM</span> <span class="hljs-keyword">result</span><br><span class="hljs-keyword">WHERE</span> `studentresult` <span class="hljs-keyword">BETWEEN</span> <span class="hljs-number">90</span> <span class="hljs-keyword">AND</span> <span class="hljs-number">100</span>;<br><span class="hljs-comment">-- != 除了1001号学生之外的同学的成绩</span><br><span class="hljs-keyword">SELECT</span> `studentno`,`studentresult` <span class="hljs-keyword">FROM</span> <span class="hljs-keyword">result</span><br><span class="hljs-keyword">WHERE</span> studentno<span class="hljs-operator">!=</span><span class="hljs-number">1001</span>;<br><span class="hljs-comment">-- not 除了1001号学生之外的同学的成绩</span><br><span class="hljs-keyword">SELECT</span> `studentno`,`studentresult` <span class="hljs-keyword">FROM</span> <span class="hljs-keyword">result</span><br><span class="hljs-keyword">WHERE</span> <span class="hljs-keyword">NOT</span> studentno<span class="hljs-operator">=</span><span class="hljs-number">1001</span>;<br></code></pre></td></tr></table></figure><blockquote><p>模糊查询：比较运算符</p></blockquote><table><thead><tr><th>运算符</th><th>语法</th><th>描述</th></tr></thead><tbody><tr><td>is null</td><td>a is null</td><td>如果操作数为null，结果为真</td></tr><tr><td>is not null</td><td>a is not null</td><td>如果操作数不为null，结果为真</td></tr><tr><td>between</td><td>a between b and c</td><td>若a在[b,c]之间，则结果为真</td></tr><tr><td>like</td><td>a like b</td><td>SQL匹配，如果a匹配b，则结果为真</td></tr><tr><td>in</td><td>a in（a1，a2，a3，…）</td><td>若a为区间(a1,a2,a3,…)中某个值，则结果为真</td></tr></tbody></table><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><code class="hljs SQL"><span class="hljs-comment">-- =======模糊查询========</span><br><span class="hljs-comment">-- 查询性唐的同学</span><br><span class="hljs-comment">-- like结合 %(代表0到任意个字符)  _(一个字符)</span><br><span class="hljs-keyword">SELECT</span> `studentno`,`studentname` <span class="hljs-keyword">FROM</span> student<br><span class="hljs-keyword">WHERE</span> `studentname` <span class="hljs-keyword">LIKE</span> <span class="hljs-string">&#x27;唐%&#x27;</span>;<br><br><span class="hljs-comment">-- 查询姓唐的同学，名字后面只有一个字的</span><br><span class="hljs-keyword">SELECT</span> `studentno`,`studentname` <span class="hljs-keyword">FROM</span> student<br><span class="hljs-keyword">WHERE</span> `studentname` <span class="hljs-keyword">LIKE</span> <span class="hljs-string">&#x27;唐_&#x27;</span>;<br><br><span class="hljs-comment">-- 查询姓唐的同学，名字后面只有两个字的</span><br><span class="hljs-keyword">SELECT</span> `studentno`,`studentname` <span class="hljs-keyword">FROM</span> student<br><span class="hljs-keyword">WHERE</span> `studentname` <span class="hljs-keyword">LIKE</span> <span class="hljs-string">&#x27;唐__&#x27;</span>;<br><br><span class="hljs-comment">-- 查询名字中间有嘉字的同学%嘉%</span><br><span class="hljs-keyword">SELECT</span> `studentno`,`studentname` <span class="hljs-keyword">FROM</span> student<br><span class="hljs-keyword">WHERE</span> `studentname` <span class="hljs-keyword">LIKE</span> <span class="hljs-string">&#x27;%嘉%&#x27;</span>;<br><br><span class="hljs-comment">-- in（具体的一个或者多个值(全称)）</span><br><span class="hljs-comment">-- 查询1001,1002,1003号学生</span><br><span class="hljs-keyword">SELECT</span> `studentno`,`studentname` <span class="hljs-keyword">FROM</span> `student`<br><span class="hljs-keyword">WHERE</span> `studentno` <span class="hljs-keyword">IN</span>(<span class="hljs-number">1001</span>,<span class="hljs-number">1002</span>,<span class="hljs-number">1003</span>);<br><br><span class="hljs-comment">-- 查询在北京的学生</span><br><span class="hljs-keyword">SELECT</span> `studentno`,`studentname` <span class="hljs-keyword">FROM</span> `student`<br><span class="hljs-keyword">WHERE</span> `address` <span class="hljs-keyword">IN</span>(<span class="hljs-string">&#x27;湖南&#x27;</span>,<span class="hljs-string">&#x27;河南洛阳&#x27;</span>);<span class="hljs-comment">-- 必须是全称，一一匹配</span><br><br><span class="hljs-comment">-- null     not null</span><br><span class="hljs-comment">-- 查询地址为空的学生null &#x27;&#x27;</span><br><span class="hljs-keyword">SELECT</span> `studentno`,`studentname` <span class="hljs-keyword">FROM</span> `student`<br><span class="hljs-keyword">WHERE</span> `address`<span class="hljs-operator">=</span><span class="hljs-string">&#x27;&#x27;</span><br><br><span class="hljs-comment">-- 查询出生日期的同学 不为空</span><br><span class="hljs-keyword">SELECT</span> `studentno`,`studentname` <span class="hljs-keyword">FROM</span> `student`<br><span class="hljs-keyword">WHERE</span> `borndate` <span class="hljs-keyword">IS</span> <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span>;<br><br><span class="hljs-comment">-- 查询没有出生日期的同学  为空</span><br><span class="hljs-keyword">SELECT</span> `studentno`,`studentname` <span class="hljs-keyword">FROM</span> `student`<br><span class="hljs-keyword">WHERE</span> `borndate` <span class="hljs-keyword">IS</span> <span class="hljs-keyword">NULL</span>;<br></code></pre></td></tr></table></figure><h2 id="4-4-联表查询">4.4 联表查询</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-comment">-- =========联表查询 join==========</span><br><span class="hljs-keyword">SELECT</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">FROM</span> student<br><span class="hljs-keyword">SELECT</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">FROM</span> <span class="hljs-keyword">result</span><br><span class="hljs-comment">-- 查询参加了考试的同学（学号，姓名，科目编号，分数）</span><br><span class="hljs-comment">/* 思路</span><br><span class="hljs-comment">1.分析需求，分析查询的字段来自哪些表（连接查询）</span><br><span class="hljs-comment">2.确定使用哪种连接查询？7种</span><br><span class="hljs-comment">3.确定交叉点（这两个表哪个数据是相同的）</span><br><span class="hljs-comment">4.判断的条件：学生表中studentno = 成绩表中studentno（这里用别名会方便很多）</span><br><span class="hljs-comment">*/</span><br><span class="hljs-comment">-- join on   连接查询</span><br><span class="hljs-comment">-- where     等值查询</span><br><span class="hljs-comment">-- inner join</span><br><span class="hljs-keyword">SELECT</span> s.studentno,studentname,subjectno,studentresult<br><span class="hljs-keyword">FROM</span> student <span class="hljs-keyword">AS</span> s<br><span class="hljs-keyword">INNER</span> <span class="hljs-keyword">JOIN</span> <span class="hljs-keyword">result</span> <span class="hljs-keyword">AS</span> r<br><span class="hljs-keyword">WHERE</span> s.studentno <span class="hljs-operator">=</span> r.studentn<br><span class="hljs-comment">-- right join</span><br><span class="hljs-keyword">SELECT</span> s.`studentno`,`studentname`,`studentname`,`studentresult`<br><span class="hljs-keyword">FROM</span> `student` s<br><span class="hljs-keyword">RIGHT</span> <span class="hljs-keyword">JOIN</span> `<span class="hljs-keyword">result</span>` r<br><span class="hljs-keyword">ON</span> r.`studentno` <span class="hljs-operator">=</span> s.`studentno`<br><span class="hljs-comment">-- left join</span><br><span class="hljs-keyword">SELECT</span> s.`studentno`,`studentname`,`studentname`,`studentresult`<br><span class="hljs-keyword">FROM</span> `student` s<br><span class="hljs-keyword">LEFT</span> <span class="hljs-keyword">JOIN</span> `<span class="hljs-keyword">result</span>` r<br><span class="hljs-keyword">ON</span> r.`studentno` <span class="hljs-operator">=</span> s.`studentno`<br></code></pre></td></tr></table></figure><p><font color = red>注意：right join和left join只能用on确定交叉点</font></p><ul><li><p>join on 连接查询</p><p>on是在临时表的生成时，不管on后面的条件为不为真，都会返回左表的记录，然后再通过条件进行覆盖条件为真的记录，而不为真的用null来代替</p></li><li><p>where 等值查询</p><p>where条件是在临时表生成好后再对临时表进行过滤的条件，这时已经没有left join的含义了，条件不为真的就全部过滤掉</p></li></ul><table><thead><tr><th>操作</th><th>描述</th></tr></thead><tbody><tr><td>inner join</td><td>两个表都要存在的数据，只取交集</td></tr><tr><td>left join</td><td>左表都有，右表可以没有。在右表中没有的数据，展示的属性数据用null替代或者过滤掉</td></tr><tr><td>right join</td><td>右表都有，左表可以没有。在左表中没有的数据，展示的属性数据用null替代或者过滤掉</td></tr></tbody></table><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-comment">-- 查询缺考的同学 先查出所有同学再通过条件筛选出缺考的学生</span><br><span class="hljs-keyword">SELECT</span> s.studentno,studentname,subjectno,studentresult<br><span class="hljs-keyword">FROM</span> student s <span class="hljs-keyword">LEFT</span> <span class="hljs-keyword">JOIN</span> <span class="hljs-keyword">result</span> r<br><span class="hljs-keyword">ON</span> s.studentno<span class="hljs-operator">=</span>r.studentno<br><span class="hljs-keyword">WHERE</span> `studentresult` <span class="hljs-keyword">IS</span> <span class="hljs-keyword">NULL</span>;<br><span class="hljs-comment">-- 思考题（查询参加考试的同学的信息：学号，学生姓名，科目名，分数）(三表查询)</span><br><span class="hljs-comment">/*思路</span><br><span class="hljs-comment">1.分析需求，分析查询的字段来自哪些表，student，result，subject（连接查询）</span><br><span class="hljs-comment">2.确定使用左连接找出参加考试同学的信息，然后再通过交集连接把课程名打印出来</span><br><span class="hljs-comment">3.确定交叉点 studentno，subjectno</span><br><span class="hljs-comment">*/</span><br><span class="hljs-keyword">SELECT</span> s.`studentno`,`studentname`,`subjectname`,`studentresult`<br><span class="hljs-keyword">FROM</span> `student` s<br><span class="hljs-keyword">RIGHT</span> <span class="hljs-keyword">JOIN</span> `<span class="hljs-keyword">result</span>` r<br><span class="hljs-keyword">ON</span> r.`studentno` <span class="hljs-operator">=</span> s.`studentno`<br><span class="hljs-keyword">INNER</span> <span class="hljs-keyword">JOIN</span> `subject` sub<br><span class="hljs-keyword">ON</span> sub.`subjectno` <span class="hljs-operator">=</span> r.`subjectno`<br><br><span class="hljs-keyword">SELECT</span> s.`studentno`,`studentname`,`gradename`,`studentresult`<br><span class="hljs-keyword">FROM</span> `student` s<br><span class="hljs-keyword">LEFT</span> <span class="hljs-keyword">JOIN</span> `<span class="hljs-keyword">result</span>` r<br><span class="hljs-keyword">ON</span> r.`studentno` <span class="hljs-operator">=</span> s.`studentno`<br><span class="hljs-keyword">INNER</span> <span class="hljs-keyword">JOIN</span> `grade` sub<br><span class="hljs-keyword">ON</span> sub.`gradeid` <span class="hljs-operator">=</span> s.`gradeid`<br></code></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs mysql">-- 查询数据 select ...<br>-- 从哪几个表中查 from 表名XXX join 连接的表XXX on 交叉的条件<br>-- 假设存在一种多张表查询，一步一步来，先查询两张表然后再慢慢增加查询<br>-- from a inner join b<br>-- from a left join b<br>-- from a right join b<br></code></pre></td></tr></table></figure><p>三表查询的注意事项，关于谁作为左右表的:</p><p><font color = red ><strong>左右表就是查询比对的底层表</strong></font></p><p>当第一个表作为左表时，第三个表要有作为左表的相同字段，在第一个表和第二个表查询后，再使用inner join交叉查询</p><p>当第一个表作为右表时，第三个表要有作为右表的相同字段，在第一个表和第二个表查询后，再使用inner join交叉查询</p><blockquote><p>自连接</p></blockquote><p>自己的表和自己的表连接，核心：<strong>一张表拆为两种一样的表即可</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-comment">-- ==========自连接============</span><br><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">TABLE</span> `category`(<br>   `id` <span class="hljs-type">INT</span>(<span class="hljs-number">10</span>) UNSIGNED <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> AUTO_INCREMENT COMMENT <span class="hljs-string">&#x27;唯一id&#x27;</span>,<br>   `pid` <span class="hljs-type">INT</span>(<span class="hljs-number">10</span>) <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;父级id&#x27;</span>,<br>   `name` <span class="hljs-type">VARCHAR</span>(<span class="hljs-number">50</span>) <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;名称&#x27;</span>,<br>   <span class="hljs-keyword">PRIMARY</span> KEY(`id`)<br>)ENGINE <span class="hljs-operator">=</span>INNODB AUTO_INCREMENT<span class="hljs-operator">=</span><span class="hljs-number">9</span> <span class="hljs-keyword">DEFAULT</span> CHARSET<span class="hljs-operator">=</span>utf8<br><span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> category (id,pid,`name`)<br><span class="hljs-keyword">VALUES</span> (<span class="hljs-number">2</span>,<span class="hljs-number">1</span>,<span class="hljs-string">&#x27;信息技术&#x27;</span>),(<span class="hljs-number">3</span>,<span class="hljs-number">1</span>,<span class="hljs-string">&#x27;软件开发&#x27;</span>),(<span class="hljs-number">4</span>,<span class="hljs-number">3</span>,<span class="hljs-string">&#x27;数据库&#x27;</span>),<br>(<span class="hljs-number">5</span>,<span class="hljs-number">1</span>,<span class="hljs-string">&#x27;美术设计&#x27;</span>),(<span class="hljs-number">6</span>,<span class="hljs-number">3</span>,<span class="hljs-string">&#x27;web开发&#x27;</span>),(<span class="hljs-number">7</span>,<span class="hljs-number">5</span>,<span class="hljs-string">&#x27;ps技术&#x27;</span>),(<span class="hljs-number">8</span>,<span class="hljs-number">2</span>,<span class="hljs-string">&#x27;办公信息&#x27;</span>);<br><br><span class="hljs-comment">-- 查询父子信息：把一张表看成两个一模一样的表</span><br><span class="hljs-keyword">SELECT</span> a.`categoryName` 父栏目,b.`categoryName` 子栏目<br><span class="hljs-keyword">FROM</span> `category` a,<br>`category` b<br><span class="hljs-keyword">WHERE</span> a.`categoryid` <span class="hljs-operator">=</span> b.`pid`<br></code></pre></td></tr></table></figure><p>查询练习：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-comment">-- 查询学员所属的年级（学员，学生的姓名，年级名称）</span><br><span class="hljs-keyword">SELECT</span> `studentno`,`studentname`,`gradename`<br><span class="hljs-keyword">FROM</span> student s<br><span class="hljs-keyword">INNER</span> <span class="hljs-keyword">JOIN</span> grade g<br><span class="hljs-keyword">ON</span> s.gradeid<span class="hljs-operator">=</span>g.gradeid<br><span class="hljs-comment">-- 查询科目所属的年级（科目名称，年级名称）</span><br><span class="hljs-keyword">SELECT</span> `subjectname`,`gradename`<br><span class="hljs-keyword">FROM</span> `subject` sub<br><span class="hljs-keyword">INNER</span> <span class="hljs-keyword">JOIN</span> grade g<br><span class="hljs-keyword">ON</span> sub.gradeid<span class="hljs-operator">=</span>g.gradeid<br><span class="hljs-comment">-- 查询了参加高等数学-1 考试的同学信息（学号，学生姓名，科目名，分数）</span><br><span class="hljs-keyword">SELECT</span> s.`studentno`,`studentname`,`subjectname`,`studentresult`<br><span class="hljs-keyword">FROM</span> student s<br><span class="hljs-keyword">INNER</span> <span class="hljs-keyword">JOIN</span> <span class="hljs-keyword">result</span> r<br><span class="hljs-keyword">ON</span> s.studentno<span class="hljs-operator">=</span>r.studentno<br><span class="hljs-keyword">INNER</span> <span class="hljs-keyword">JOIN</span> `subject` sub<br><span class="hljs-keyword">ON</span> r.`subjectno`<span class="hljs-operator">=</span>sub.`subjectno`<br><span class="hljs-keyword">WHERE</span> `subjectname`<span class="hljs-operator">=</span><span class="hljs-string">&#x27;高等数学-1&#x27;</span><br></code></pre></td></tr></table></figure><h2 id="4-5-分页和排序">4.5 分页和排序</h2><blockquote><p>排序</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-comment">-- =======分页 limit和排序 order by=========</span><br><span class="hljs-comment">-- 排序：升序ASC，降序DESC</span><br><span class="hljs-comment">-- 语法：order by 通过哪个字段进行排序，怎么排（asc，desc）</span><br><span class="hljs-comment">-- 查询的结果根据成绩排序</span><br><span class="hljs-keyword">SELECT</span> s.`studentno`,`studentname`,`subjectname`,`studentresult`<br><span class="hljs-keyword">FROM</span> student s<br><span class="hljs-keyword">INNER</span> <span class="hljs-keyword">JOIN</span> <span class="hljs-keyword">result</span> r<br><span class="hljs-keyword">ON</span> s.studentno<span class="hljs-operator">=</span>r.studentno<br><span class="hljs-keyword">INNER</span> <span class="hljs-keyword">JOIN</span> `subject` sub<br><span class="hljs-keyword">ON</span> r.`subjectno`<span class="hljs-operator">=</span>sub.`subjectno`<br><span class="hljs-keyword">WHERE</span> `subjectname`<span class="hljs-operator">=</span><span class="hljs-string">&#x27;高等数学-1&#x27;</span><br><span class="hljs-keyword">ORDER</span> <span class="hljs-keyword">BY</span> `studentresult` <span class="hljs-keyword">ASC</span><br></code></pre></td></tr></table></figure><blockquote><p>分页</p></blockquote><ul><li>为什么要分页<ul><li>缓解数据库压力，给人的体验更好，瀑布流（例如抖音，一直往下刷）</li><li>分页，每页只显示五条数据</li><li>语法：limit 记录下标(数据库第一个数据的下标是0),页面大小</li><li>limit 0,5  从1开始，展示5个记录</li><li>limit 0,5  1~5</li><li>limit 5,5  6~10</li></ul></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> s.`studentno`,`studentname`,`subjectname`,`studentresult`<br><span class="hljs-keyword">FROM</span> student s<br><span class="hljs-keyword">INNER</span> <span class="hljs-keyword">JOIN</span> <span class="hljs-keyword">result</span> r<br><span class="hljs-keyword">ON</span> s.studentno<span class="hljs-operator">=</span>r.studentno<br><span class="hljs-keyword">INNER</span> <span class="hljs-keyword">JOIN</span> `subject` sub<br><span class="hljs-keyword">ON</span> r.`subjectno`<span class="hljs-operator">=</span>sub.`subjectno`<br><span class="hljs-keyword">ORDER</span> <span class="hljs-keyword">BY</span> `studentresult` <span class="hljs-keyword">ASC</span><br>LIMIT <span class="hljs-number">5</span>,<span class="hljs-number">5</span><br><span class="hljs-comment">-- 第一页 limit 0,5   (1-1)*5</span><br><span class="hljs-comment">-- 第二页 limit 5,5   (2-1)*5</span><br><span class="hljs-comment">-- 第三页 limit 10,5  (3-1)*5</span><br><span class="hljs-comment">-- 第n页  limit ~,5   (n-1)*pageSize,pageSize</span><br><span class="hljs-comment">-- 【pageSize：页面大小】</span><br><span class="hljs-comment">-- 【(n-1)*pageSize:起始值】</span><br><span class="hljs-comment">-- 【n: 当前页】</span><br><span class="hljs-comment">-- 【总页数= 数据总数/页面大小】（向上取整）</span><br><span class="hljs-comment">-- 思考</span><br><span class="hljs-comment">-- 查询java-1 课程成绩排名第一的学生，并且分数要大于80的学生信息(学号，姓名，课程名称，分数)</span><br><span class="hljs-keyword">SELECT</span> s.`studentno`,`studentname`,`subjectname`,`studentresult`<br><span class="hljs-keyword">FROM</span> student s<br><span class="hljs-keyword">INNER</span> <span class="hljs-keyword">JOIN</span> <span class="hljs-keyword">result</span> r<br><span class="hljs-keyword">ON</span> s.studentno<span class="hljs-operator">=</span>r.studentno<br><span class="hljs-keyword">INNER</span> <span class="hljs-keyword">JOIN</span> `subject` sub<br><span class="hljs-keyword">ON</span> r.`subjectno`<span class="hljs-operator">=</span>sub.`subjectno`<br><span class="hljs-keyword">WHERE</span> `subjectname`<span class="hljs-operator">=</span><span class="hljs-string">&#x27;java-1&#x27;</span> <span class="hljs-keyword">AND</span> `studentresult`<span class="hljs-operator">&gt;=</span><span class="hljs-number">60</span><br><span class="hljs-keyword">ORDER</span> <span class="hljs-keyword">BY</span> `studentresult` <span class="hljs-keyword">DESC</span><br>LIMIT <span class="hljs-number">0</span>,<span class="hljs-number">1</span><br></code></pre></td></tr></table></figure><p><font color = red>语法：limit（起始下标，pageSize）</font></p><h2 id="4-6-子查询">4.6 子查询</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-comment">-- ===========where=========</span><br><span class="hljs-comment">-- 1.查询 高等数学-1 的所有的考试结果（学号，科目编号，成绩）按成绩降序排列</span><br><span class="hljs-comment">-- 方式一：使用联表查询</span><br><span class="hljs-keyword">SELECT</span> `studentno`,r.`subjectno`,`studentresult`<br><span class="hljs-keyword">FROM</span> `<span class="hljs-keyword">result</span>` r<br><span class="hljs-keyword">INNER</span> <span class="hljs-keyword">JOIN</span> `subject` sub<br><span class="hljs-keyword">ON</span> r.subjectno<span class="hljs-operator">=</span>sub.subjectno<br><span class="hljs-keyword">WHERE</span> `subjectname`<span class="hljs-operator">=</span><span class="hljs-string">&#x27;高等数学-1&#x27;</span><br><span class="hljs-keyword">ORDER</span> <span class="hljs-keyword">BY</span> `studentresult` <span class="hljs-keyword">DESC</span><br><br><span class="hljs-comment">-- 方式二：使用子查询（由里及外）</span><br><span class="hljs-comment">-- 查询所有学生的学号等信息，然后通过子查询再筛选出高等数学-1的学生信息</span><br><span class="hljs-keyword">SELECT</span> studentno,`subjectno`,`studentresult`<br><span class="hljs-keyword">FROM</span> <span class="hljs-keyword">result</span><br><span class="hljs-keyword">WHERE</span> `subjectno`<span class="hljs-operator">=</span>(<br><span class="hljs-comment">-- 查询高等数学-1的科目编号</span><br><span class="hljs-keyword">SELECT</span> `subjectno` <span class="hljs-keyword">FROM</span> `subject` <span class="hljs-keyword">WHERE</span> `subjectname`<span class="hljs-operator">=</span><span class="hljs-string">&#x27;高等数学-1&#x27;</span><br>)<br><span class="hljs-keyword">ORDER</span> <span class="hljs-keyword">BY</span> `studentresult` <span class="hljs-keyword">DESC</span><br><br><span class="hljs-comment">-- 练习：</span><br><span class="hljs-comment">-- 1.分数不小于60分的学生的学号和姓名(使用联表方式)</span><br><span class="hljs-keyword">SELECT</span> <span class="hljs-keyword">DISTINCT</span> s.studentno,studentname<br><span class="hljs-keyword">FROM</span> student s<br><span class="hljs-keyword">INNER</span> <span class="hljs-keyword">JOIN</span> <span class="hljs-keyword">result</span> r<br><span class="hljs-keyword">ON</span> s.studentno<span class="hljs-operator">=</span>r.studentno<br><span class="hljs-keyword">WHERE</span> studentresult <span class="hljs-operator">&gt;=</span> <span class="hljs-number">60</span><br><span class="hljs-comment">/*</span><br><span class="hljs-comment">-- 2.在这个基础上增加一个科目，高等数学-2</span><br><span class="hljs-comment">SELECT DISTINCT s.studentno,studentname</span><br><span class="hljs-comment">FROM student s</span><br><span class="hljs-comment">INNER JOIN result r</span><br><span class="hljs-comment">ON s.studentno=r.studentno</span><br><span class="hljs-comment">WHERE studentresult &gt;= 60 AND studentname=&#x27;高等数学-2&#x27;</span><br><span class="hljs-comment">-- 错误，因为还要再联一个subject表才行，所以用子查询会方便很多</span><br><span class="hljs-comment">*/</span><br><br><span class="hljs-comment">-- 3.正确方式，加一个联表(联了三个表)效率较子查询来说要低一些</span><br><span class="hljs-keyword">SELECT</span> <span class="hljs-keyword">DISTINCT</span> s.studentno,studentname<br><span class="hljs-keyword">FROM</span> student s<br><span class="hljs-keyword">INNER</span> <span class="hljs-keyword">JOIN</span> <span class="hljs-keyword">result</span> r<br><span class="hljs-keyword">ON</span> s.studentno<span class="hljs-operator">=</span>r.studentno<br><span class="hljs-keyword">INNER</span> <span class="hljs-keyword">JOIN</span> `subject` sub<br><span class="hljs-keyword">ON</span> r.subjectno<span class="hljs-operator">=</span>sub.subjectno<br><span class="hljs-keyword">WHERE</span> studentresult <span class="hljs-operator">&gt;=</span> <span class="hljs-number">60</span> <span class="hljs-keyword">AND</span> subjectname<span class="hljs-operator">=</span><span class="hljs-string">&#x27;高等数学-2&#x27;</span><br><br><span class="hljs-comment">-- 4.子查询方式。在这个基础上增加一个科目，高等数学-2</span><br><span class="hljs-comment">-- 子查询 查询高等数学-2的编号</span><br><span class="hljs-keyword">SELECT</span> <span class="hljs-keyword">DISTINCT</span> s.`studentno`,`studentname`<br><span class="hljs-keyword">FROM</span> `student` s<br><span class="hljs-keyword">INNER</span> <span class="hljs-keyword">JOIN</span> `<span class="hljs-keyword">result</span>` r<br><span class="hljs-keyword">ON</span> s.`studentno` <span class="hljs-operator">=</span> r.`studentno`<br><span class="hljs-keyword">WHERE</span> `studentresult` <span class="hljs-operator">&gt;</span> <span class="hljs-number">60</span> <span class="hljs-keyword">AND</span> subjectno <span class="hljs-operator">=</span> (<br>  <span class="hljs-keyword">SELECT</span> subjectno <span class="hljs-keyword">FROM</span> `subject`<br>  <span class="hljs-keyword">WHERE</span> `subjectname` <span class="hljs-operator">=</span> <span class="hljs-string">&#x27;高等数学-1&#x27;</span><br>)<br><span class="hljs-comment">-- 5.通过子查询再简化，把联表操作去掉</span><br><span class="hljs-comment">-- 再次改造（由里及外）</span><br><span class="hljs-keyword">SELECT</span> studentno , studentname <span class="hljs-keyword">FROM</span> student <span class="hljs-keyword">WHERE</span> studentno <span class="hljs-keyword">IN</span>(<br>  <span class="hljs-keyword">SELECT</span> studentno <span class="hljs-keyword">FROM</span> <span class="hljs-keyword">result</span> <span class="hljs-keyword">WHERE</span> studentresult <span class="hljs-operator">&gt;</span> <span class="hljs-number">60</span> <span class="hljs-keyword">AND</span> subjectno <span class="hljs-operator">=</span> (<br>      <span class="hljs-keyword">SELECT</span> subjectno <span class="hljs-keyword">FROM</span> `subject` <span class="hljs-keyword">WHERE</span> `subjectname` <span class="hljs-operator">=</span> <span class="hljs-string">&#x27;高等数学-1&#x27;</span><br>  )<br>)<br><span class="hljs-comment">-- 练习：查询java-2 前5名同学的成绩的信息（学号，姓名，分数） 使用子查询</span><br><span class="hljs-keyword">SELECT</span> s.`studentno`,`studentname`,`studentresult`<br><span class="hljs-keyword">FROM</span> student s<br><span class="hljs-keyword">INNER</span> <span class="hljs-keyword">JOIN</span> <span class="hljs-keyword">result</span> r<br><span class="hljs-keyword">ON</span> s.studentno<span class="hljs-operator">=</span>r.studentno<br><span class="hljs-keyword">WHERE</span> r.subjectno <span class="hljs-operator">=</span> (<br><span class="hljs-keyword">SELECT</span> subjectno <span class="hljs-keyword">FROM</span> `subject` <span class="hljs-keyword">WHERE</span> subjectname<span class="hljs-operator">=</span> <span class="hljs-string">&#x27;java-2&#x27;</span><br>)<br><span class="hljs-keyword">ORDER</span> <span class="hljs-keyword">BY</span> `studentresult` <span class="hljs-keyword">DESC</span><br>LIMIT <span class="hljs-number">0</span>,<span class="hljs-number">5</span><br><span class="hljs-comment">/*</span><br><span class="hljs-comment">SELECT studentno ,studentname, FROM student WHERE studentno IN(</span><br><span class="hljs-comment">  SELECT studentno,studentresult FROM result WHERE subjectno = (</span><br><span class="hljs-comment">     SELECT subjectno FROM `subject` WHERE subjectname = &#x27;高等数学-1&#x27;</span><br><span class="hljs-comment">  )</span><br><span class="hljs-comment">)*/</span><br></code></pre></td></tr></table></figure><h2 id="4-7-分组和过滤">4.7 分组和过滤</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-comment">-- 查询不同课程的平均分，最高分，最低分，并且平均分大于80</span><br><span class="hljs-comment">-- 核心（根据不同的课程分组）</span><br><span class="hljs-keyword">SELECT</span> `subjectname` ,<span class="hljs-built_in">AVG</span>(`studentresult`) 平均分,<span class="hljs-built_in">MAX</span>(`studentresult`) 最高分,<span class="hljs-built_in">MIN</span>(`studentresult`) 最低分<br><span class="hljs-keyword">FROM</span> <span class="hljs-keyword">result</span> r<br><span class="hljs-keyword">INNER</span> <span class="hljs-keyword">JOIN</span> `subject` sub<br><span class="hljs-keyword">ON</span> r.`subjectno` <span class="hljs-operator">=</span> sub.`subjectno`<br><span class="hljs-keyword">GROUP</span> <span class="hljs-keyword">BY</span> `subjectname`<br><span class="hljs-keyword">HAVING</span> 平均分 <span class="hljs-operator">&gt;</span> <span class="hljs-number">80</span><br><span class="hljs-comment">-- having 用于分组后过滤</span><br></code></pre></td></tr></table></figure><h1>5. MySQL函数</h1><p>官网：<a href="https://dev.mysql.com/doc/refman/5.7/en/functions.html">https://dev.mysql.com/doc/refman/5.7/en/functions.html</a></p><h2 id="5-1-通用函数（不常用）">5.1 通用函数（不常用）</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-comment">-- ===========常用函数==========</span><br><span class="hljs-comment">-- 数学运算</span><br><span class="hljs-keyword">SELECT</span> <span class="hljs-built_in">ABS</span>(<span class="hljs-number">-8</span>)    <span class="hljs-comment">-- 绝对值</span><br><span class="hljs-keyword">SELECT</span> <span class="hljs-built_in">CEILING</span>(<span class="hljs-number">9.4</span>) <span class="hljs-comment">-- 向上取整</span><br><span class="hljs-keyword">SELECT</span> <span class="hljs-built_in">FLOOR</span>(<span class="hljs-number">9.4</span>) <span class="hljs-comment">-- 向下取整</span><br><span class="hljs-keyword">SELECT</span> RAND() <span class="hljs-comment">-- 返回一个0~1之间的随机数</span><br><span class="hljs-keyword">SELECT</span> SIGN(<span class="hljs-number">0</span>) <span class="hljs-comment">-- 判断一个数的符号 0返回0 负数返回-1，正数返回 1 </span><br><span class="hljs-comment">-- 字符串函数</span><br><span class="hljs-keyword">SELECT</span> <span class="hljs-keyword">CHAR_LENGTH</span>(<span class="hljs-string">&#x27;即使再小的帆也能远航&#x27;</span>) <span class="hljs-comment">-- 字符串长度</span><br><span class="hljs-keyword">SELECT</span> CONCAT(<span class="hljs-string">&#x27;我&#x27;</span>,<span class="hljs-string">&#x27;爱&#x27;</span>,<span class="hljs-string">&#x27;wlh&#x27;</span>) <span class="hljs-comment">-- 拼接字符串</span><br><span class="hljs-keyword">SELECT</span> <span class="hljs-keyword">INSERT</span>(<span class="hljs-string">&#x27;我爱编程HelloWord&#x27;</span>,<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-string">&#x27;超级热爱&#x27;</span>) <span class="hljs-comment">-- 插入，从某个位置开始替换某个长度</span><br><span class="hljs-keyword">SELECT</span> <span class="hljs-built_in">LOWER</span>(<span class="hljs-string">&#x27;KuangShen&#x27;</span>) <span class="hljs-comment">-- 全小写</span><br><span class="hljs-keyword">SELECT</span> <span class="hljs-built_in">UPPER</span>(<span class="hljs-string">&#x27;KuangShen&#x27;</span>) <span class="hljs-comment">-- 全大写</span><br><span class="hljs-keyword">SELECT</span> INSTR(<span class="hljs-string">&#x27;kuangShen&#x27;</span>,<span class="hljs-string">&#x27;h&#x27;</span>)<span class="hljs-comment">-- 返回第一次出现的字串的索引</span><br><span class="hljs-keyword">SELECT</span> REPLACE(<span class="hljs-string">&#x27;每天都是坚持就能成功&#x27;</span>,<span class="hljs-string">&#x27;坚持&#x27;</span>,<span class="hljs-string">&#x27;努力&#x27;</span>)<span class="hljs-comment">-- 替换出现的指定字符串</span><br><span class="hljs-keyword">SELECT</span> SUBSTR(<span class="hljs-string">&#x27;每天都是坚持就能成功&#x27;</span>,<span class="hljs-number">5</span>,<span class="hljs-number">2</span>) <span class="hljs-comment">-- 返回指定的字符串（源字符串，截取位置，截取的长度）</span><br><span class="hljs-keyword">SELECT</span> REVERSE(<span class="hljs-string">&#x27;每天都是坚持就能成功&#x27;</span>) <span class="hljs-comment">-- 反转</span><br><span class="hljs-comment">-- 查询姓周的同学，替换为邹</span><br><span class="hljs-comment">-- 当有名字里有多个周的时候用insert方法</span><br><span class="hljs-keyword">SELECT</span> REPLACE(studentname,<span class="hljs-string">&#x27;周&#x27;</span>,<span class="hljs-string">&#x27;邹&#x27;</span>)<span class="hljs-keyword">FROM</span> student<br><span class="hljs-keyword">WHERE</span> studentname <span class="hljs-keyword">LIKE</span> <span class="hljs-string">&#x27;周%&#x27;</span><br><span class="hljs-keyword">SELECT</span> <span class="hljs-keyword">INSERT</span>(studentname,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-string">&#x27;邹&#x27;</span>)<span class="hljs-keyword">FROM</span> student<br><span class="hljs-keyword">WHERE</span> studentname <span class="hljs-keyword">LIKE</span> <span class="hljs-string">&#x27;周%&#x27;</span><br><br><span class="hljs-comment">-- 时间和日期函数（记住！）</span><br><span class="hljs-keyword">SELECT</span> <span class="hljs-built_in">CURRENT_DATE</span>() <span class="hljs-comment">-- 获取当前日期</span><br><span class="hljs-keyword">SELECT</span> CURDATE() <span class="hljs-comment">-- 获取当前日期</span><br><span class="hljs-keyword">SELECT</span> NOW() <span class="hljs-comment">-- 获取当前的时间有时分秒</span><br><span class="hljs-keyword">SELECT</span> <span class="hljs-built_in">LOCALTIME</span>() <span class="hljs-comment">-- 获取本地时间</span><br><span class="hljs-keyword">SELECT</span> SYSDATE() <span class="hljs-comment">-- 获取系统时间</span><br><span class="hljs-comment">-- 年月日时分秒</span><br><span class="hljs-keyword">SELECT</span> <span class="hljs-keyword">YEAR</span>(NOW())<span class="hljs-comment">-- 年</span><br><span class="hljs-keyword">SELECT</span> <span class="hljs-keyword">MONTH</span>(NOW())<span class="hljs-comment">-- 月</span><br><span class="hljs-keyword">SELECT</span> <span class="hljs-keyword">DAY</span>(NOW())<span class="hljs-comment">-- 日</span><br><span class="hljs-keyword">SELECT</span> <span class="hljs-keyword">HOUR</span>(NOW())<span class="hljs-comment">-- 小时</span><br><span class="hljs-keyword">SELECT</span> <span class="hljs-keyword">MINUTE</span>(NOW())<span class="hljs-comment">-- 分钟</span><br><span class="hljs-keyword">SELECT</span> <span class="hljs-keyword">SECOND</span>(NOW())<span class="hljs-comment">-- 秒</span><br><span class="hljs-comment">-- 获取系统信息</span><br><span class="hljs-keyword">SELECT</span> <span class="hljs-built_in">SYSTEM_USER</span>() <span class="hljs-comment">-- root@localhost</span><br><span class="hljs-keyword">SELECT</span> <span class="hljs-keyword">USER</span>()<span class="hljs-comment">-- root@localhost</span><br><span class="hljs-keyword">SELECT</span> VERSION() <span class="hljs-comment">-- 查了MySQL版本号</span><br></code></pre></td></tr></table></figure><h2 id="5-2-聚合函数-常用">5.2 聚合函数(常用)</h2><table><thead><tr><th>函数名称</th><th>描述</th></tr></thead><tbody><tr><td>count()****</td><td><strong>计数</strong></td></tr><tr><td>sum()</td><td>求和</td></tr><tr><td>avg()</td><td>平均值</td></tr><tr><td>max()</td><td>最大值</td></tr><tr><td>min()</td><td>最小值</td></tr><tr><td>……</td><td>……</td></tr></tbody></table><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-comment">-- ==========聚合函数==========</span><br><span class="hljs-comment">-- 统计表中的数据（想查询一个表中有多少个记录，就使用这个count()）</span><br><span class="hljs-keyword">SELECT</span> <span class="hljs-built_in">COUNT</span>(`address`) <span class="hljs-keyword">FROM</span> student; <span class="hljs-comment">-- count(字段)，会忽略所有的null值</span><br><span class="hljs-keyword">SELECT</span> <span class="hljs-built_in">COUNT</span>(<span class="hljs-operator">*</span>) <span class="hljs-keyword">FROM</span> student; <span class="hljs-comment">-- count(*) 不会忽略null值，本质  计算行数</span><br><span class="hljs-keyword">SELECT</span> <span class="hljs-built_in">COUNT</span>(<span class="hljs-number">1</span>) <span class="hljs-keyword">FROM</span> student;<span class="hljs-comment">-- count(1)  不会忽略null值，本质  计算行数</span><br><span class="hljs-keyword">SELECT</span> <span class="hljs-built_in">SUM</span>(`studentresult`) <span class="hljs-keyword">AS</span> 总分 <span class="hljs-keyword">FROM</span> <span class="hljs-keyword">result</span><br><span class="hljs-keyword">SELECT</span> <span class="hljs-built_in">AVG</span>(studentresult) <span class="hljs-keyword">AS</span> 平均分 <span class="hljs-keyword">FROM</span> <span class="hljs-keyword">result</span><br><span class="hljs-keyword">SELECT</span> <span class="hljs-built_in">MAX</span>(studentresult) <span class="hljs-keyword">AS</span> 最高分 <span class="hljs-keyword">FROM</span> <span class="hljs-keyword">result</span><br><span class="hljs-keyword">SELECT</span> <span class="hljs-built_in">MIN</span>(studentresult) <span class="hljs-keyword">AS</span> 最低分 <span class="hljs-keyword">FROM</span> <span class="hljs-keyword">result</span><br></code></pre></td></tr></table></figure><h2 id="5-3-数据库级别的MD5加密-扩展">5.3 数据库级别的MD5加密(扩展)</h2><p>什么是MD5？</p><p>主要是增强算法复杂度和不可逆性</p><p>MD5不可逆，具体的值的MD5是一样的</p><p>MD5破解网站的原理，背后有一个字典，MD5加密后的值，加密的前值</p><p>password()函数也是一个加密不可逆的加密方式</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-comment">-- ==========测试加密MD5========</span><br><span class="hljs-comment">-- 加密后不可逆！！</span><br><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">TABLE</span>`testmd5`(<br>    `id` <span class="hljs-type">INT</span>(<span class="hljs-number">4</span>) <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span>,<br>    `name` <span class="hljs-type">VARCHAR</span>(<span class="hljs-number">20</span>) <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span>,<br>    `pwd` <span class="hljs-type">VARCHAR</span>(<span class="hljs-number">50</span>) <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span>,<br>    <span class="hljs-keyword">PRIMARY</span> KEY(`id`)<br>)ENGINE<span class="hljs-operator">=</span>INNODB <span class="hljs-keyword">DEFAULT</span> CHARSET<span class="hljs-operator">=</span>utf8<br><span class="hljs-comment">-- 明文密码（能看见的密码）</span><br><span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> `testmd5` <span class="hljs-keyword">VALUES</span>(<span class="hljs-number">1</span>,<span class="hljs-string">&#x27;Tang&#x27;</span>,<span class="hljs-string">&#x27;123456&#x27;</span>),(<span class="hljs-number">2</span>,<span class="hljs-string">&#x27;Wen&#x27;</span>,<span class="hljs-string">&#x27;123456&#x27;</span>),(<span class="hljs-number">3</span>,<span class="hljs-string">&#x27;xiao&#x27;</span>,<span class="hljs-string">&#x27;123456&#x27;</span>)<br><span class="hljs-comment">-- 加密（对id为1的pwd记录加密一次）</span><br><span class="hljs-keyword">UPDATE</span> testmd5 <span class="hljs-keyword">SET</span> pwd<span class="hljs-operator">=</span>MD5(pwd) <span class="hljs-keyword">WHERE</span> id<span class="hljs-operator">=</span><span class="hljs-number">1</span><br><span class="hljs-comment">-- 加密全部的密码</span><br><span class="hljs-keyword">UPDATE</span> testmd5 <span class="hljs-keyword">SET</span> pwd<span class="hljs-operator">=</span>MD5(pwd)<br><span class="hljs-comment">-- 插入的时候加密！</span><br><span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> testmd5 <span class="hljs-keyword">VALUES</span>(<span class="hljs-number">4</span>,<span class="hljs-string">&#x27;zu&#x27;</span>,MD5(<span class="hljs-string">&#x27;123456&#x27;</span>))<br><span class="hljs-comment">-- 如何校验：将用户传递进来的密码进行md5加密，然后比对加密后的值</span><br><span class="hljs-comment">-- 当用户要登录查询用户信息时，如何进行验证：用户登录输入的密码加密后， 与注册表里加密后的密码进行比对就ok了</span><br><span class="hljs-comment">-- 注意加密的次数，对加密后再加密就是加密了两次，与加密一次的值不一样的</span><br><span class="hljs-keyword">SELECT</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">FROM</span> testmd5 <span class="hljs-keyword">WHERE</span> `name`<span class="hljs-operator">=</span><span class="hljs-string">&#x27;Wen&#x27;</span> <span class="hljs-keyword">AND</span> pwd<span class="hljs-operator">=</span>MD5(<span class="hljs-string">&#x27;123456&#x27;</span>)<br><span class="hljs-keyword">SELECT</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">FROM</span> testmd5 <span class="hljs-keyword">WHERE</span> `name`<span class="hljs-operator">=</span><span class="hljs-string">&#x27;Tang&#x27;</span> <span class="hljs-keyword">AND</span> pwd<span class="hljs-operator">=</span>MD5(MD5(<span class="hljs-string">&#x27;123456&#x27;</span>))<br></code></pre></td></tr></table></figure><h1>6. 事务</h1><h2 id="6-1-什么是事务">6.1 什么是事务</h2><p>事务：就是一些增删改查等等操作</p><p>目的：设置事务是为了保证一组事务要么都成功，要么都失败</p><hr><ol><li>SQL执行 A给B转账 A 1000 —&gt;200 B 200</li><li>SQL执行 B收到A的钱 A 800 B 400</li></ol><hr><p>将一组SQL放在一个批次中去执行</p><blockquote><p><font color = orifen>事务原则: ACID原则： 原子性，一致性，隔离性，持久性</font></p></blockquote><p>可供参考博客链接： <a href="https://blog.csdn.net/dengjili/article/details/82468576">(20条消息) 事务ACID理解_dengjili的博客-CSDN博客_事务acid</a></p><p><strong>原子性（Atomicity）</strong></p><p>要么都成功，要么都失败</p><p><strong>一致性（Consistency）</strong></p><p>事务前后的数据完整性要保持一致</p><p><strong>持久性（Durability）</strong>——事务提交</p><p>事务一旦提交则不可逆，被持久化到数据库中</p><p><strong>隔离性（Isolation）</strong></p><p>事务的隔离性是多个用户并发访问数据库时，数据库为每一个用户开启的事务，不能被其他事务的操作数据所干扰，多个并发事务之间要相互隔离。</p><blockquote><p><font color = blue>隔离所导致的一些问题</font></p></blockquote><p><strong>脏读：</strong></p><p>指一个事务读取了另一个事务未提交的数据</p><p><strong>不可重复读：</strong></p><p>在一个事务内读取表中的某一行数据，多次读取结果不同。（这个不一定是错误，只是某些场合不对）</p><p><strong>虚读(幻读)</strong></p><p>是指在一个事务内读取到了别的事务插入的数据，导致前后读取不一致</p><h2 id="6-2-操作事务方式">6.2 操作事务方式</h2><blockquote><p>执行事务</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-comment">-- MySQL是默认开启事务自动提交的</span><br><span class="hljs-keyword">SET</span> autocommit<span class="hljs-operator">=</span><span class="hljs-number">0</span> <span class="hljs-comment">-- 关闭</span><br><span class="hljs-keyword">SET</span> autocommit<span class="hljs-operator">=</span><span class="hljs-number">1</span> <span class="hljs-comment">-- 开启（默认的）</span><br><span class="hljs-comment">-- 手动处理事务（事务：对数据库进行增删改查等操作）</span><br><span class="hljs-comment">-- 事务开启</span><br><span class="hljs-keyword">START</span> TRANSACTION <span class="hljs-comment">-- 标记一个事务的开始，从这个之后的sql都在同一个事务内</span><br><span class="hljs-comment">-- 用start直接开启手动模式，写完事务就直接commit提交事务，不需要语法设置</span><br><span class="hljs-keyword">INSERT</span> xx<br><span class="hljs-keyword">INSERT</span> xx<br><span class="hljs-comment">-- 提交：提交后就是持久化到数据库中(成功)</span><br><span class="hljs-keyword">COMMIT</span><br><span class="hljs-comment">-- 回滚：回到原来的样子（失败）</span><br><span class="hljs-keyword">ROLLBACK</span><br><span class="hljs-comment">-- 事务结束`    </span><br><span class="hljs-keyword">SET</span> autocommit<span class="hljs-operator">=</span><span class="hljs-number">1</span> <span class="hljs-comment">-- 开启自动提交</span><br><br><br><span class="hljs-comment">/* 了解</span><br><span class="hljs-comment">SAVEPOINT 保存点 名 -- 设置一个事务的保存点</span><br><span class="hljs-comment">ROLLBACK TO SAVEPOINT 保存点 名 -- 回滚到保存点</span><br><span class="hljs-comment">RELEASE SAVEPOINT 保存点 名 -- 撤销保存点</span><br><span class="hljs-comment">*/</span><br></code></pre></td></tr></table></figure><p><strong>MySQL 默认开启事务自动提交模式，即除非显式的开启事务（BEGIN 或 START TRANSACTION），否则每条 SOL 语句都会被当做一个单独的事务自动执行。但有些情况下，我们需要关闭事务自动提交来保证数据的一致性。</strong></p><blockquote><p>模拟场景</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-comment">-- 转账  1.创建银行数据库</span><br><span class="hljs-keyword">CREATE</span> DATABASE shop <span class="hljs-type">CHARACTER</span> <span class="hljs-keyword">SET</span> utf8 <span class="hljs-keyword">COLLATE</span> utf8_general_ci<br>USE shop<br><span class="hljs-comment">-- 创建表</span><br><span class="hljs-comment">-- DECIMAL(9,2)代表：9位数，其中小数位是两位</span><br><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">TABLE</span> `account`(<br>    `id` <span class="hljs-type">INT</span>(<span class="hljs-number">5</span>) <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> AUTO_INCREMENT,<br>    `name` <span class="hljs-type">VARCHAR</span>(<span class="hljs-number">30</span>) <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span>,<br>    `money` <span class="hljs-type">DECIMAL</span>(<span class="hljs-number">9</span>,<span class="hljs-number">2</span>) <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span>,<br>    <span class="hljs-keyword">PRIMARY</span> KEY(`id`)<br>)ENGINE<span class="hljs-operator">=</span>INNODB <span class="hljs-keyword">DEFAULT</span> CHARSET<span class="hljs-operator">=</span>utf8<br><span class="hljs-comment">-- 添加数据</span><br><span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> account(`name`,`money`)<br><span class="hljs-keyword">VALUES</span>(<span class="hljs-string">&#x27;A&#x27;</span>,<span class="hljs-number">2000</span>),(<span class="hljs-string">&#x27;B&#x27;</span>,<span class="hljs-number">10000</span>)<br><span class="hljs-comment">-- 模拟转账事务</span><br><span class="hljs-keyword">SET</span> autocommit<span class="hljs-operator">=</span><span class="hljs-number">0</span>; <span class="hljs-comment">-- 关闭自动提交</span><br><span class="hljs-keyword">START</span> TRANSACTION <span class="hljs-comment">-- 开启一个事务（一组事务）</span><br><span class="hljs-keyword">UPDATE</span> account <span class="hljs-keyword">SET</span> money<span class="hljs-operator">=</span>money<span class="hljs-number">-500</span> <span class="hljs-keyword">WHERE</span> `name`<span class="hljs-operator">=</span><span class="hljs-string">&#x27;A&#x27;</span> <span class="hljs-comment">-- A减500</span><br><span class="hljs-keyword">UPDATE</span> account <span class="hljs-keyword">SET</span> money<span class="hljs-operator">=</span>money<span class="hljs-operator">+</span><span class="hljs-number">500</span> <span class="hljs-keyword">WHERE</span> `name`<span class="hljs-operator">=</span><span class="hljs-string">&#x27;B&#x27;</span> <span class="hljs-comment">-- B加500</span><br><span class="hljs-keyword">COMMIT</span>;<span class="hljs-comment">-- 提交事务，就被持久化了</span><br><span class="hljs-keyword">ROLLBACK</span>;<span class="hljs-comment">-- 回滚，回到事务前的数据</span><br><span class="hljs-keyword">SET</span> autocommit <span class="hljs-operator">=</span> <span class="hljs-number">1</span>;<span class="hljs-comment">-- 恢复自动提交</span><br></code></pre></td></tr></table></figure><h1>7. 索引</h1><blockquote><p>MySQL官方对索引的定义为：<strong>索引（index）是帮助MySQL高效获取数据的数据结构</strong></p><p>提取句子主干，就可以得到索引的本质，索引是数据结构</p></blockquote><p><a href="http://blog.codinglabs.org/articles/theory-of-mysql-index.html">MySQL索引背后的数据结构及算法原理</a></p><h2 id="7-1-索引的分类">7.1 索引的分类</h2><blockquote><p>在一个表中，不能设置多个主键索引，可以设置多个唯一键索引</p></blockquote><ul><li>主键索引（primary key）<ul><li>唯一的标识，主键不可重复，只能有一个列作为主键</li></ul></li><li>唯一索引（unique key）<ul><li>避免重复的列数据出现，值唯一，可以重复—&gt;也就是说可以设置多个唯一索引</li></ul></li><li>常规索引（key/index）<ul><li>默认的，index，key关键字来设置</li></ul></li><li>全文索引（fulltext）<ul><li>在特定的数据库引擎下才有，MYISAM</li><li>快速定位数据</li></ul></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-comment">-- 索引的使用</span><br><span class="hljs-comment">-- 1.在创建表的时候给字段增加索引（第一种添加索引方式）</span><br><span class="hljs-comment">-- 2.创建完毕后，增加索引</span><br><span class="hljs-comment">-- 显示所有的索引信息</span><br><span class="hljs-keyword">SHOW</span> INDEX <span class="hljs-keyword">FROM</span> student<br><span class="hljs-comment">-- 第二种添加索引方式：增加一个全文索引(索引名) 列名</span><br><span class="hljs-keyword">ALTER</span> <span class="hljs-keyword">TABLE</span> school.`student`<span class="hljs-keyword">ADD</span> FULLTEXT INDEX studentname(studentname);<br><span class="hljs-comment">-- explain 分析sql执行的状况</span><br>EXPLAIN <span class="hljs-keyword">SELECT</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">FROM</span> student <span class="hljs-comment">-- 非全文索引(rows返回你查了多少行的数据，相当于检查了这条SQL的效率)</span><br><span class="hljs-comment">-- 全文索引，一般用于很多很多数据的时候</span><br>EXPLAIN <span class="hljs-keyword">SELECT</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">FROM</span> student <span class="hljs-keyword">WHERE</span> <span class="hljs-keyword">MATCH</span>(studentname)AGAINST(<span class="hljs-string">&#x27;刘&#x27;</span>)<br></code></pre></td></tr></table></figure><p>添加索引的方式：</p><ol><li>在创建表的时候给字段增加索引（第一种添加索引方式）</li><li>第二种添加索引方式：增加一个全文索引(索引名) 列名<br>ALTER TABLE school.<code>student</code>ADD FULLTEXT INDEX studentname(studentname);</li><li>添加索引 命名格式：id <em>表名</em> 字段名<br>CREATE INDEX 索引名 ON 表(字段)</li></ol><h2 id="7-2-测试索引">7.2 测试索引</h2><p>插入100 0000条数据</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">TABLE</span> `app_user`(<br>    `id` <span class="hljs-type">BIGINT</span>(<span class="hljs-number">20</span>) UNSIGNED <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> AUTO_INCREMENT,<br>    `name` <span class="hljs-type">VARCHAR</span>(<span class="hljs-number">50</span>) <span class="hljs-keyword">DEFAULT</span> <span class="hljs-string">&#x27;&#x27;</span> COMMENT <span class="hljs-string">&#x27;用户昵称&#x27;</span>,<br>    `email`<span class="hljs-type">VARCHAR</span>(<span class="hljs-number">50</span>) <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;用户邮箱&#x27;</span>,<br>    `phone`<span class="hljs-type">VARCHAR</span>(<span class="hljs-number">20</span>) <span class="hljs-keyword">DEFAULT</span> <span class="hljs-string">&#x27;&#x27;</span> COMMENT <span class="hljs-string">&#x27;手机号&#x27;</span>,<br>    `gender`TINYINT(<span class="hljs-number">4</span>) UNSIGNED <span class="hljs-keyword">DEFAULT</span><span class="hljs-string">&#x27;0&#x27;</span> COMMENT <span class="hljs-string">&#x27;性别(男:0;女:1)&#x27;</span>,<br>    `password` <span class="hljs-type">VARCHAR</span>(<span class="hljs-number">100</span>)<span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> COMMENT<span class="hljs-string">&#x27;密码&#x27;</span>,<br>    `age`TINYINT(<span class="hljs-number">3</span>)<span class="hljs-keyword">DEFAULT</span><span class="hljs-string">&#x27;0&#x27;</span> COMMENT<span class="hljs-string">&#x27;年龄&#x27;</span>,<br>    `create_time`DATETIME <span class="hljs-keyword">DEFAULT</span> <span class="hljs-built_in">CURRENT_TIMESTAMP</span>,<br>    `update_time`<span class="hljs-type">TIMESTAMP</span> <span class="hljs-keyword">NULL</span> <span class="hljs-keyword">DEFAULT</span> <span class="hljs-built_in">CURRENT_TIMESTAMP</span> <span class="hljs-keyword">ON</span> <span class="hljs-keyword">UPDATE</span> <span class="hljs-built_in">CURRENT_TIMESTAMP</span>,<br>    <span class="hljs-keyword">PRIMARY</span> KEY(`id`) <br>)ENGINE<span class="hljs-operator">=</span>INNODB <span class="hljs-keyword">DEFAULT</span> CHARSET<span class="hljs-operator">=</span>utf8mb4 COMMENT<span class="hljs-operator">=</span><span class="hljs-string">&#x27;app用户表&#x27;</span><br><span class="hljs-comment">-- 插入1万条数据</span><br><span class="hljs-comment">-- 创建函数，还不是执行函数</span><br>DELIMITER $$ <span class="hljs-comment">-- 写函数之前必须要写，标志（类似于c语言的头文件）</span><br><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">FUNCTION</span> mock_data()<br><span class="hljs-keyword">RETURNS</span> <span class="hljs-type">INT</span> <span class="hljs-comment">-- 放回值</span><br><span class="hljs-keyword">BEGIN</span><br>   <span class="hljs-comment">-- 声明变量</span><br>   <span class="hljs-keyword">DECLARE</span> num <span class="hljs-type">INT</span> <span class="hljs-keyword">DEFAULT</span> <span class="hljs-number">500000</span>;<br>   <span class="hljs-keyword">DECLARE</span> i <span class="hljs-type">INT</span> <span class="hljs-keyword">DEFAULT</span> <span class="hljs-number">0</span>;<br>   WHILE i<span class="hljs-operator">&lt;</span>num DO<br>        <span class="hljs-comment">-- 插入数据</span><br>        <span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> app_user(`name`,`email`,`phone`,`gender`,`password`,`age`)<br>        <span class="hljs-keyword">VALUES</span>(CONCAT(<span class="hljs-string">&#x27;用户&#x27;</span>,i),<span class="hljs-string">&#x27;2640420434@qq.com&#x27;</span>,<br>        CONCAT(<span class="hljs-string">&#x27;18&#x27;</span>,<span class="hljs-built_in">FLOOR</span>(RAND()<span class="hljs-operator">*</span><span class="hljs-number">899999999</span><span class="hljs-operator">+</span><span class="hljs-number">100000000</span>)),<br>        <span class="hljs-built_in">FLOOR</span>(RAND()<span class="hljs-operator">*</span><span class="hljs-number">2</span>),UUID(),<span class="hljs-built_in">FLOOR</span>(RAND()<span class="hljs-operator">*</span><span class="hljs-number">100</span>));<br>        <span class="hljs-keyword">SET</span> i<span class="hljs-operator">=</span>i<span class="hljs-operator">+</span><span class="hljs-number">1</span>;<br>   <span class="hljs-keyword">END</span> WHILE; <br>   <span class="hljs-keyword">RETURN</span> i;<span class="hljs-comment">-- 注意这里是return 前面是returns    </span><br><span class="hljs-keyword">END</span>;<br><br><span class="hljs-keyword">TRUNCATE</span> app_user;<span class="hljs-comment">-- 清空表</span><br><span class="hljs-keyword">SELECT</span> mock_data();<span class="hljs-comment">-- 执行函数</span><br><span class="hljs-keyword">DROP</span> <span class="hljs-keyword">FUNCTION</span> mock_data; <span class="hljs-comment">-- 删除函数</span><br></code></pre></td></tr></table></figure><p>索引查询比较</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-comment">-- 查询用户9999数据,当没有索引的时候(总耗时:0.573 sec)</span><br><span class="hljs-keyword">SELECT</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">FROM</span> app_user <span class="hljs-keyword">WHERE</span> `name`<span class="hljs-operator">=</span><span class="hljs-string">&#x27;用户9999&#x27;</span>;<br>EXPLAIN <span class="hljs-keyword">SELECT</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">FROM</span> app_user <span class="hljs-keyword">WHERE</span> `name`<span class="hljs-operator">=</span><span class="hljs-string">&#x27;用户9999&#x27;</span>;<br><span class="hljs-comment">-- 添加索引 命名格式：id_表名_字段名</span><br><span class="hljs-comment">-- CREATE INDEX 索引名 ON 表(字段)</span><br><span class="hljs-keyword">CREATE</span> INDEX id_app_user_name <span class="hljs-keyword">ON</span> app_user(`name`);<br><span class="hljs-comment">-- 查询用户9999数据,当有索引的时候(总耗时:0.001 sec)</span><br><span class="hljs-keyword">SELECT</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">FROM</span> app_user <span class="hljs-keyword">WHERE</span> `name`<span class="hljs-operator">=</span><span class="hljs-string">&#x27;用户9999&#x27;</span>;<br>EXPLAIN <span class="hljs-keyword">SELECT</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">FROM</span> app_user <span class="hljs-keyword">WHERE</span> `name`<span class="hljs-operator">=</span><span class="hljs-string">&#x27;用户9999&#x27;</span>;<br></code></pre></td></tr></table></figure><h2 id="7-3-索引原则">7.3 索引原则</h2><ul><li>索引不是越多越好</li><li>不要对进程变动数据加索引</li><li>小数据量的表不需要加索引</li><li>索引一般加在常用来查询的字段上</li></ul><blockquote><p>索引的数据结构</p></blockquote><p>Hash类型的索引</p><p>Btree:innodb默认的数据结构</p><p>阅读：<a href="http://blog.codinglabs.org/articles/theory-of-mysql-index.html">CodingLabs - MySQL索引背后的数据结构及算法原理</a></p><h1>8. 用户管理和备份</h1><h2 id="8-1-用户管理">8.1 用户管理</h2><p><strong>root是最高权限用户</strong></p><blockquote><p>可视化命令操作</p></blockquote><blockquote><p>SQL 命令操作</p></blockquote><p>用户表：mysql.user表</p><p>本质:读这张表进行增删改查</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-comment">-- 创建用户 CREATE USER 用户名 IDENTIFIED BY &#x27;密码&#x27;</span><br><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">USER</span> Tang IDENTIFIED <span class="hljs-keyword">BY</span> <span class="hljs-string">&#x27;123456&#x27;</span><br><br><span class="hljs-comment">-- 修改密码（修改当前用户密码）这个时候修改的是root用户（最高权限用户）</span><br><span class="hljs-keyword">SET</span> PASSWORD<span class="hljs-operator">=</span>PASSWORD(<span class="hljs-string">&#x27;123456&#x27;</span>)<span class="hljs-comment">-- 注意：mysql8.0已经不能这样修改密码了</span><br><br><span class="hljs-comment">-- 修改密码（修改指定用户密码）</span><br><span class="hljs-keyword">SET</span> PASSWORD <span class="hljs-keyword">FOR</span> Tang<span class="hljs-operator">=</span>PASSWORD(<span class="hljs-string">&#x27;123456&#x27;</span>); <span class="hljs-comment">-- 第一种方式</span><br><span class="hljs-keyword">ALTER</span> <span class="hljs-keyword">USER</span> <span class="hljs-string">&#x27;Tang&#x27;</span>@<span class="hljs-string">&#x27;%&#x27;</span> IDENTIFIED <span class="hljs-keyword">BY</span> <span class="hljs-string">&#x27;456789&#x27;</span>;<span class="hljs-comment">-- 第二种方式</span><br><br><span class="hljs-comment">-- 重命名 rename user 原来名字 to 新的名字</span><br>RENAME <span class="hljs-keyword">USER</span> Tang <span class="hljs-keyword">TO</span> Wen<br><br><span class="hljs-comment">-- 用户授权grant all privileges(全部的权限) on 库.表 to Wen</span><br><span class="hljs-comment">-- all privileges 除了给别人授权，其它都能干（也就是不会给grant权限）</span><br><span class="hljs-keyword">GRANT</span> <span class="hljs-keyword">ALL</span> PRIVILEGES <span class="hljs-keyword">ON</span> <span class="hljs-operator">*</span>.<span class="hljs-operator">*</span> <span class="hljs-keyword">TO</span> Wen<br><br><span class="hljs-comment">-- 查询权限</span><br><span class="hljs-comment">-- 查看指定用户的权限sql语句</span><br><span class="hljs-keyword">SHOW</span> GRANTS <span class="hljs-keyword">FOR</span> Wen <br><br><span class="hljs-comment">-- GRANT ALL PRIVILEGES ON *.* TO &#x27;Wen&#x27;@&#x27;%&#x27;</span><br><span class="hljs-keyword">SHOW</span> GRANTS <span class="hljs-keyword">FOR</span> root<span class="hljs-variable">@localhost</span><br><br><span class="hljs-comment">-- GRANT ALL PRIVILEGES ON *.* TO &#x27;root&#x27;@&#x27;localhost&#x27; WITH GRANT OPTION</span><br><span class="hljs-comment">-- 撤销权限 revoke 哪些权限，在哪个库撤销，给谁撤销</span><br><span class="hljs-keyword">REVOKE</span> <span class="hljs-keyword">ALL</span> PRIVILEGES <span class="hljs-keyword">ON</span> <span class="hljs-operator">*</span>.<span class="hljs-operator">*</span> <span class="hljs-keyword">FROM</span> Wen<br><br><span class="hljs-comment">-- 注意：当你只给了指定库的权限时，用上面*.*不能直接撤销，需要指定库指定表</span><br><span class="hljs-comment">-- 现在要撤销Wen里school库的全部权限</span><br><span class="hljs-keyword">REVOKE</span> <span class="hljs-keyword">ALL</span> PRIVILEGES <span class="hljs-keyword">ON</span> school.<span class="hljs-operator">*</span> <span class="hljs-keyword">FROM</span> Wen<br><br><span class="hljs-comment">-- 删除用户</span><br><span class="hljs-keyword">DROP</span> <span class="hljs-keyword">USER</span> Wen<br></code></pre></td></tr></table></figure><h2 id="8-2-MySQL备份">8.2 MySQL备份</h2><p>为什么要备份：</p><ul><li>保证重要的数据不丢失</li><li>数据转移</li></ul><p>MySQL数据库备份的方式</p><blockquote><ol><li>直接拷贝物理文件</li><li>使用可视化工具（SQLyog）手动备份导出</li></ol></blockquote><p>点击你要导出的文件（库或者表）鼠标右键选择备份/导出，选择‘备选表作为sql存储’</p><blockquote><ol><li>使用命令行cmd导出mysqldump命令行</li></ol></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs sql"># mysqldump <span class="hljs-operator">-</span>h主机 <span class="hljs-operator">-</span>u用户名 <span class="hljs-operator">-</span>p密码 数据库名 表名 <span class="hljs-operator">&gt;</span>物理磁盘位置\文件名<br>mysqldump <span class="hljs-operator">-</span>hlocalhost <span class="hljs-operator">-</span>uroot <span class="hljs-operator">-</span>p123456 school student <span class="hljs-operator">&gt;</span>D:\a.sql<br><br># mysqldump <span class="hljs-operator">-</span>h主机 <span class="hljs-operator">-</span>u用户名 <span class="hljs-operator">-</span>p密码 数据库名 表<span class="hljs-number">1</span> 表<span class="hljs-number">2</span> 表<span class="hljs-number">3</span> ... <span class="hljs-operator">&gt;</span>物理磁盘位置\文件名<br>mysqldump <span class="hljs-operator">-</span>hlocalhost <span class="hljs-operator">-</span>uroot <span class="hljs-operator">-</span>p123456 school student <span class="hljs-operator">&gt;</span>D:\b.sql<br><br># mysqldump <span class="hljs-operator">-</span>h主机 <span class="hljs-operator">-</span>u用户名 <span class="hljs-operator">-</span>p密码 数据库名 表名 <span class="hljs-operator">&gt;</span>物理磁盘位置\文件名<br>mysqldump <span class="hljs-operator">-</span>hlocalhost <span class="hljs-operator">-</span>uroot <span class="hljs-operator">-</span>p123456 school student <span class="hljs-operator">&gt;</span>D:\c.sql<br><br># 注意：主机这里可以换，也就是说可以把表dump 到其它主机上面（别的电脑或者服务器上）<br><br># 导入<br># 登录的情况下，切换指定的数据库<br># source备份文件<br>source C:\Users\HongHua\Desktop\a.sql<br>#mysql <span class="hljs-operator">-</span>u用户名 <span class="hljs-operator">-</span>p密码 库名<span class="hljs-operator">&lt;</span>备份文件<br></code></pre></td></tr></table></figure><p>假设你要备份数据库，来防止数据丢失，sql文件保存即可</p><p>把数据库给朋友：sql文件直接给别人即可</p><h1>9. 规范</h1><h2 id="9-1-为什么需要设计">9.1 为什么需要设计</h2><p><font color=red>当数据库比较复杂的时候我们就需要设计</font></p><p><strong>糟糕的数据库设计：</strong></p><ul><li>数据冗余，浪费空间</li><li>数据库插入和删除都会麻烦、异常【屏蔽使用物理外键】</li><li>程序的性能差</li></ul><p><strong>良好的数据库设计：</strong></p><ul><li>节省内存空间</li><li>保证数据库的完整性</li><li>方便我们开发系统</li></ul><p><strong>软件开发中，关于数据库的设计</strong></p><ul><li>分析需求：分析业务和需要处理的数据库的需求</li><li>概要设计：设计关系图E-R图</li></ul><p><strong>设计数据库的步骤：（如个人博客）</strong></p><ul><li>收集信息，分析需求<ul><li>用户表（用户登录注销，用户的个人信息，写博客，创建分类）</li><li>分类表（文章分类，创建人）</li><li>文章表（文章的内容）</li><li>评论表</li><li>友链表（链接信息）</li><li>粉丝表</li><li>自定义表（系统信息，某个关键的字，或者一些主字段） key：value</li></ul></li><li>标识实体（把需求落地到每个字段）</li><li>标识实体之间的关系<ul><li>写博客：user—&gt;blog</li><li>创建分类：user—&gt;category</li><li>关注：user—&gt;user</li><li>友链：links</li><li>评论：user-user-blog</li></ul></li></ul><h2 id="9-2-三大范式">9.2 三大范式</h2><p><strong>为什么需要数据规范化？</strong></p><ul><li>信息重复</li><li>更新异常</li><li>插入异常<ul><li>无法正常显示信息</li></ul></li><li>删除异常<ul><li>丢失有效的信息</li></ul></li></ul><blockquote><p><strong>第一范式（1NF）</strong></p></blockquote><p>原子性：保证每一列不可再分</p><blockquote><p><strong>第二范式（2NF）</strong></p></blockquote><p>前提：满足第一范式</p><p>每张表只描述一件事情</p><p>前提：满足第一范式和第二范式</p><p>第三范式需要确保数据表中的每一列数据都和主键直接相关，而不能间接相关</p><blockquote><p>（规范数据库的设计）</p></blockquote><p><strong>规范性和性能的问题</strong></p><p>关联查询的表不得超过三张表</p><ul><li>考虑商业化的需求和目标（成本，用户体验！）数据库的性能更加重要</li><li>在规范性能的问题的时候，需要适当的考虑一下 规范性！</li><li>故意给某些表增加一些冗余的字段（为了从多表查询中变为单表查询）</li><li>故意增加一些计算列（从大数据量降低为小数据的查询：索引，如计算有多少个记录）</li></ul>]]></content>
      
      
      <categories>
          
          <category> MySQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用 NetworkManager 工具来管理网络</title>
      <link href="/2023/04/17/%E6%8A%80%E6%9C%AF/Linux%E6%93%8D%E4%BD%9C%E7%BD%91%E7%BB%9C/"/>
      <url>/2023/04/17/%E6%8A%80%E6%9C%AF/Linux%E6%93%8D%E4%BD%9C%E7%BD%91%E7%BB%9C/</url>
      
        <content type="html"><![CDATA[<h3 id="使用-NetworkManager-工具来管理网络">使用 NetworkManager 工具来管理网络</h3><p>其在命令行下对应的命令是 nmcli，要连接WiFi，相关的命令如下：</p><h4 id="1）查看网络设备列表">1）查看网络设备列表</h4><p><strong>sudo nmcli dev</strong><br>注意，如果列出的设备状态全部是 unmanaged 的，说明这些网络设备不受NetworkManager管理，你需要清空 /etc/network/interfaces下的网络设置,然后重启.</p><h4 id="2）开启WiFi命令">2）开启WiFi命令</h4><p><strong>sudo nmcli r wifi on</strong></p><h4 id="3）扫描附近的-WiFi-热点">3）扫描附近的 WiFi 热点</h4><p><strong>sudo nmcli dev wifi</strong></p><h4 id="4）连接到指定的-WiFi-热点">4）连接到指定的 WiFi 热点</h4><p><strong>sudo nmcli dev wifi connect “SSID” password “PASSWORD” ifname wlan0</strong><br>请将 SSID和 PASSWORD 替换成实际的 WiFi名称和密码。</p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Servlet</title>
      <link href="/2023/04/14/%E6%8A%80%E6%9C%AF/2023-4-14-%E7%AC%AC%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0/"/>
      <url>/2023/04/14/%E6%8A%80%E6%9C%AF/2023-4-14-%E7%AC%AC%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0/</url>
      
        <content type="html"><![CDATA[<h1>1. servlet简介</h1><ul><li>Servlet就是sun公司开发动态web的一门技术。</li><li>Sun在这些API中提供一个接口叫做：Servlet，如果你想开发一个Servlet程序，只需要完成两个小步骤：<ol><li>编写一个类，实现Servlet接口；</li><li>把开发好的Java类部署到web服务器中。<br>把实现了Servlet接口Java程序叫做，Servlet</li></ol></li></ul><h1>2. HelloServlet</h1><p>Serlvet接口Sun公司有两个默认的实现类：HttpServlet，GenericServlet</p><p><img src="../../photo/2770896-20230409154206423-1918524274.jpg" alt="image"></p><ol><li><p>构建一个普通的Maven项目，删掉里面的src目录，以后我们的学习就在这个项目里面建立Moudel；这个空的工程就是Maven主工程；</p></li><li><p>关于Maven父子工程的理解：<br>父工程中会有：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">modules</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">module</span>&gt;</span>servlet-01<span class="hljs-tag">&lt;/<span class="hljs-name">module</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">modules</span>&gt;</span><br></code></pre></td></tr></table></figure><p>子项目中会有：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">parent</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>servlet<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.example<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>1.0-SNAPSHOT<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">parent</span>&gt;</span><br></code></pre></td></tr></table></figure><p>父项目中的jar包，子项目可以直接使用。反之，不可。</p><p><strong>Maven环境配置</strong>(搭配Tomcat 10)</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>jakarta.servlet<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>jakarta.servlet-api<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>6.0.0<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>jakarta.servlet.jsp<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>jakarta.servlet.jsp-api<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>3.1.1<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br></code></pre></td></tr></table></figure></li><li><p>Maven环境优化</p></li><li><p>编写一个Servlet程序<br>1.编写一个普通的类<br>2.实现Servlet接口，这里我们直接继承HttpServlet类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.hfuuwzy;<br><br><span class="hljs-keyword">import</span> jakarta.servlet.ServletException;<br><span class="hljs-keyword">import</span> jakarta.servlet.http.HttpServlet;<br><span class="hljs-keyword">import</span> jakarta.servlet.http.HttpServletRequest;<br><span class="hljs-keyword">import</span> jakarta.servlet.http.HttpServletResponse;<br><br><span class="hljs-keyword">import</span> java.io.IOException;<br><span class="hljs-keyword">import</span> java.io.PrintWriter;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">HelloServlet</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">HttpServlet</span> &#123;<br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">protected</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">doGet</span><span class="hljs-params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="hljs-keyword">throws</span> ServletException, IOException &#123;<br>        System.out.println(<span class="hljs-string">&quot;你好&quot;</span>);<br>        <span class="hljs-type">PrintWriter</span> <span class="hljs-variable">writer</span> <span class="hljs-operator">=</span> resp.getWriter();<br>        writer.print(<span class="hljs-string">&quot;hello,Servlet!!!&quot;</span>);<br>    &#125;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">protected</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">doPost</span><span class="hljs-params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="hljs-keyword">throws</span> ServletException, IOException &#123;<br>        <span class="hljs-built_in">super</span>.doPost(req, resp);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure></li><li><p>编写Servlet的映射<br>为什么需要映射：我们写的是JAVA程序，但是要通过浏览器访问，而浏览器需要连接web服务器，所以我们需要在web服务中注册我们写的Servlet，还需给他一个浏览器能够访问的路径。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-comment">&lt;!--注册servlet--&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">servlet</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">servlet-name</span>&gt;</span>hello<span class="hljs-tag">&lt;/<span class="hljs-name">servlet-name</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">servlet-class</span>&gt;</span>com.hfuuwzy.HelloServlet<span class="hljs-tag">&lt;/<span class="hljs-name">servlet-class</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">servlet</span>&gt;</span><br><span class="hljs-comment">&lt;!--Servlet的请求路径--&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">servlet-mapping</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">servlet-name</span>&gt;</span>hello<span class="hljs-tag">&lt;/<span class="hljs-name">servlet-name</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">url-pattern</span>&gt;</span>/hello<span class="hljs-tag">&lt;/<span class="hljs-name">url-pattern</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">servlet-mapping</span>&gt;</span><br></code></pre></td></tr></table></figure></li><li><p>配置tomcat<br>注意：配置项目发布路径就可以了</p></li><li><p>启动测试</p></li></ol><h1>3. Servlet原理</h1><p><img src="../../photo/2770896-20230409154243213-1040908847.jpg" alt="image"></p><h1>4. Mapping问题</h1><ol><li>一个Servlet可以指定一个映射路径</li><li>一个Servlet可以指定多个映射路径</li><li>一个Servlet可以指定通用映射路径</li><li>指定一些后缀或者前缀等等…</li></ol><h1>5. ServletContext</h1><p>web容器在启动的时候，它会为每个web程序都创建一个对应的ServletContext对象，它代表了当前的web应用。</p><h2 id="5-1-共享数据">5.1 共享数据</h2><p>在这个Servlet中保存的数据，可以在另一个Servlet中拿到</p><p><img src="../../photo/2770896-20230409154418405-1306818080.jpg" alt="image"></p><p>存入数据</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">HelloServlet</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">HttpServlet</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">doGet</span><span class="hljs-params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="hljs-keyword">throws</span> IOException &#123;<br><span class="hljs-comment">//        this.getInitParameter() 初始化参数</span><br><span class="hljs-comment">//        this.getServletConfig() Servlet配置</span><br><span class="hljs-comment">//        this.getServletContext() Servlet配置上下文</span><br>        <span class="hljs-type">ServletContext</span> <span class="hljs-variable">servletContext</span> <span class="hljs-operator">=</span> <span class="hljs-built_in">this</span>.getServletContext();<br>        <span class="hljs-type">String</span> <span class="hljs-variable">username</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;王朝阳&quot;</span>; <span class="hljs-comment">// 数据</span><br>        servletContext.setAttribute(<span class="hljs-string">&quot;username&quot;</span>,username); <span class="hljs-comment">// 将一个数据保存在ServletContext中</span><br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>读取数据</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@WebServlet(name = &quot;getc&quot;,value = &quot;/getc&quot;)</span> <span class="hljs-comment">// 此注解可以代替编写xml里的Servlet映射</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">GetServlet</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">HttpServlet</span> &#123;<br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">protected</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">doGet</span><span class="hljs-params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="hljs-keyword">throws</span> ServletException, IOException &#123;<br>        <span class="hljs-type">ServletContext</span> <span class="hljs-variable">context</span> <span class="hljs-operator">=</span> <span class="hljs-built_in">this</span>.getServletContext();<br>        <span class="hljs-type">String</span> <span class="hljs-variable">username</span> <span class="hljs-operator">=</span> (String) context.getAttribute(<span class="hljs-string">&quot;username&quot;</span>);<br>        resp.setContentType(<span class="hljs-string">&quot;text/html;charset=utf-8&quot;</span>); <span class="hljs-comment">// 设置读取的文本风格样式</span><br>        resp.getWriter().print(<span class="hljs-string">&quot;名字：&quot;</span>+username);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="5-2-获取初始化参数">5.2 获取初始化参数</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">context-param</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">param-name</span>&gt;</span>url<span class="hljs-tag">&lt;/<span class="hljs-name">param-name</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">param-value</span>&gt;</span>jdbc:mysql://localhost:3306/mybatis<span class="hljs-tag">&lt;/<span class="hljs-name">param-value</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">context-param</span>&gt;</span><br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@WebServlet(name = &quot;gp&quot;,value = &quot;/gp&quot;)</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">ServletDemo03</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">HttpServlet</span> &#123;<br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">protected</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">doGet</span><span class="hljs-params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="hljs-keyword">throws</span> ServletException, IOException &#123;<br>        <span class="hljs-type">ServletContext</span> <span class="hljs-variable">context</span> <span class="hljs-operator">=</span> <span class="hljs-built_in">this</span>.getServletContext();<br>        <span class="hljs-type">String</span> <span class="hljs-variable">url</span> <span class="hljs-operator">=</span> context.getInitParameter(<span class="hljs-string">&quot;url&quot;</span>);<br>        resp.getWriter().print(url);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="5-3-请求转发">5.3 请求转发</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">// 请求/sd4找到ServletDemo04，ServletDemo04进行请求转发到/gp，到/gp的页面</span><br><span class="hljs-comment">// (浏览器路径是sd4的路径，页面拿到的是/gp的数据)</span><br><span class="hljs-meta">@WebServlet(name = &quot;sd4&quot;, value = &quot;/sd4&quot;)</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">ServletDemo04</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">HttpServlet</span> &#123;<br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">protected</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">doGet</span><span class="hljs-params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="hljs-keyword">throws</span> ServletException, IOException &#123;<br>        <span class="hljs-type">ServletContext</span> <span class="hljs-variable">context</span> <span class="hljs-operator">=</span> <span class="hljs-built_in">this</span>.getServletContext();<br>        System.out.println(<span class="hljs-string">&quot;进入了servlet04&quot;</span>);<br>        <span class="hljs-type">RequestDispatcher</span> <span class="hljs-variable">requestDispatcher</span> <span class="hljs-operator">=</span> context.getRequestDispatcher(<span class="hljs-string">&quot;/gp&quot;</span>); <span class="hljs-comment">// 转发的请求路径 </span><br>        requestDispatcher.forward(req, resp); <span class="hljs-comment">// 调用forward实现请求转发</span><br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="5-4-读取资源文件Properties">5.4 读取资源文件Properties</h2><ul><li>在java目录下新建properties</li><li>在resources目录下新建properties发现：都被打包到了同一个路径下：classes，我们俗称这个路径为classpath。</li></ul><p>思路：需要一个文件流</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@WebServlet(name = &quot;sd5&quot;, value = &quot;/sd5&quot;)</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">ServletDemo05</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">HttpServlet</span> &#123;<br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">protected</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">doGet</span><span class="hljs-params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="hljs-keyword">throws</span> ServletException, IOException &#123;<br>        <span class="hljs-type">InputStream</span> <span class="hljs-variable">inputStream</span> <span class="hljs-operator">=</span> <span class="hljs-built_in">this</span>.getServletContext().getResourceAsStream(<span class="hljs-string">&quot;/WEB-INF/classes/db.properties&quot;</span>);<br>        <span class="hljs-type">Properties</span> <span class="hljs-variable">prop</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Properties</span>();<br>        prop.load(inputStream);<br>        <span class="hljs-type">String</span> <span class="hljs-variable">user</span> <span class="hljs-operator">=</span> prop.getProperty(<span class="hljs-string">&quot;username&quot;</span>);<br>        <span class="hljs-type">String</span> <span class="hljs-variable">pwd</span> <span class="hljs-operator">=</span> prop.getProperty(<span class="hljs-string">&quot;password&quot;</span>);<br>        resp.getWriter().print(user+<span class="hljs-string">&quot;:&quot;</span>+pwd);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p><img src="../../photo/2770896-20230409154448629-1360567652.jpg" alt="image"></p><h1>6. HttpServletResponse</h1><p>web服务器接收到客户端的http请求，针对这个请求，分别创建一个代表请求的HttpServletRequest对象，代表响应的一个HttpServletResponse；|</p><ul><li>如果要获取客户端请求过来的参数：找HttpServletRequest</li><li>如果要给客户端响应一些信息：找HttpServletResponse</li></ul><ol><li>负责向浏览器发送数据的方法</li></ol>  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> ServletOutputStream <span class="hljs-title function_">getOutputStream</span><span class="hljs-params">()</span> <span class="hljs-keyword">throws</span> IOException;<br><span class="hljs-keyword">public</span> PrintWriter <span class="hljs-title function_">getWriter</span><span class="hljs-params">()</span> <span class="hljs-keyword">throws</span> IOException;<br></code></pre></td></tr></table></figure><ol start="2"><li><p>响应的状态码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> <span class="hljs-type">int</span> <span class="hljs-variable">SC_CONTINUE</span> <span class="hljs-operator">=</span> <span class="hljs-number">100</span>;<br> <span class="hljs-comment">/**</span><br><span class="hljs-comment">  * Status code (200) indicating the request succeeded normally.</span><br><span class="hljs-comment">  */</span><br> <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> <span class="hljs-type">int</span> <span class="hljs-variable">SC_OK</span> <span class="hljs-operator">=</span> <span class="hljs-number">200</span>;<br> <span class="hljs-comment">/**</span><br><span class="hljs-comment">  * Status code (302) indicating that the resource has temporarily</span><br><span class="hljs-comment">  * moved to another location, but that future references should</span><br><span class="hljs-comment">  * still use the original URI to access the resource.</span><br><span class="hljs-comment">  *</span><br><span class="hljs-comment">  * This definition is being retained for backwards compatibility.</span><br><span class="hljs-comment">  * SC_FOUND is now the preferred definition.</span><br><span class="hljs-comment">  */</span><br> <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> <span class="hljs-type">int</span> <span class="hljs-variable">SC_MOVED_TEMPORARILY</span> <span class="hljs-operator">=</span> <span class="hljs-number">302</span>;<br> <span class="hljs-comment">/**</span><br><span class="hljs-comment"> * Status code (302) indicating that the resource reside</span><br><span class="hljs-comment"> * temporarily under a different URI. Since the redirection might</span><br><span class="hljs-comment"> * be altered on occasion, the client should continue to use the</span><br><span class="hljs-comment"> * Request-URI for future requests.(HTTP/1.1) To represent the</span><br><span class="hljs-comment"> * status code (302), it is recommended to use this variable.</span><br><span class="hljs-comment"> */</span><br> <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> <span class="hljs-type">int</span> <span class="hljs-variable">SC_FOUND</span> <span class="hljs-operator">=</span> <span class="hljs-number">302</span>;<br> <span class="hljs-comment">/**</span><br><span class="hljs-comment">  * Status code (304) indicating that a conditional GET operation</span><br><span class="hljs-comment">  * found that the resource was available and not modified.</span><br><span class="hljs-comment">  */</span><br> <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> <span class="hljs-type">int</span> <span class="hljs-variable">SC_NOT_MODIFIED</span> <span class="hljs-operator">=</span> <span class="hljs-number">304</span>;<br> <span class="hljs-comment">/**</span><br><span class="hljs-comment">  * Status code (404) indicating that the requested resource is not</span><br><span class="hljs-comment">  * available.</span><br><span class="hljs-comment">  */</span><br> <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> <span class="hljs-type">int</span> <span class="hljs-variable">SC_NOT_FOUND</span> <span class="hljs-operator">=</span> <span class="hljs-number">404</span>;<br> <span class="hljs-comment">/**</span><br><span class="hljs-comment">  * Status code (500) indicating an error inside the HTTP server</span><br><span class="hljs-comment">  * which prevented it from fulfilling the request.</span><br><span class="hljs-comment">  */</span><br> <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> <span class="hljs-type">int</span> <span class="hljs-variable">SC_INTERNAL_SERVER_ERROR</span> <span class="hljs-operator">=</span> <span class="hljs-number">500</span>;<br> <span class="hljs-comment">/**</span><br><span class="hljs-comment">  * Status code (502) indicating that the HTTP server received an</span><br><span class="hljs-comment">  * invalid response from a server it consulted when acting as a</span><br><span class="hljs-comment">  * proxy or gateway.</span><br><span class="hljs-comment">  */</span><br> <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> <span class="hljs-type">int</span> <span class="hljs-variable">SC_BAD_GATEWAY</span> <span class="hljs-operator">=</span> <span class="hljs-number">502</span>;<br> <span class="hljs-comment">// ...</span><br></code></pre></td></tr></table></figure></li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">常见应用<br></code></pre></td></tr></table></figure><ol><li><p>向浏览器输出消息</p></li><li><p>下载文件</p></li></ol>  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@WebServlet(name = &quot;file&quot;,value = &quot;/file&quot;)</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">FileServlet</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">HttpServlet</span> &#123;<br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">protected</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">doGet</span><span class="hljs-params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="hljs-keyword">throws</span> ServletException, IOException &#123;<br>        <span class="hljs-comment">// 1.要获取下载文件的路径</span><br>        <span class="hljs-type">String</span> <span class="hljs-variable">realPath</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;C:\\Users\\WZY\\Desktop\\大二下\\Web程序设计\\servlet\\response\\src\\main\\resources\\薇尔莉特.png&quot;</span>;<br>        System.out.println(<span class="hljs-string">&quot;下载文件的路径是：&quot;</span> + realPath);<br>        <span class="hljs-comment">// 2.下载的文件名是啥？</span><br>        <span class="hljs-type">String</span> <span class="hljs-variable">fileName</span> <span class="hljs-operator">=</span> realPath.substring(realPath.lastIndexOf(<span class="hljs-string">&quot;\\&quot;</span>) + <span class="hljs-number">1</span>);<br>        <span class="hljs-comment">// 3.设置想办法让浏览器能够支持下载我们需要的东西</span><br>        resp.setHeader(<span class="hljs-string">&quot;Content-Disposition&quot;</span>, <span class="hljs-string">&quot;attachment;filename=&quot;</span> + URLEncoder.encode(fileName, <span class="hljs-string">&quot;utf-8&quot;</span>));<br>        <span class="hljs-comment">// 4.获取下载文件的输入流</span><br>        <span class="hljs-type">FileInputStream</span> <span class="hljs-variable">in</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">FileInputStream</span>(realPath);<br>        <span class="hljs-comment">// 5.创建缓冲区</span><br>        <span class="hljs-type">int</span> <span class="hljs-variable">len</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>;<br>        <span class="hljs-type">byte</span>[] buffer = <span class="hljs-keyword">new</span> <span class="hljs-title class_">byte</span>[<span class="hljs-number">1024</span>];<br>        <span class="hljs-comment">// 6.获取OutputStream对象</span><br>        <span class="hljs-type">ServletOutputStream</span> <span class="hljs-variable">out</span> <span class="hljs-operator">=</span> resp.getOutputStream();<br>        <span class="hljs-comment">// 7.将FileOutputStream流写入到bufer缓冲区</span><br>        <span class="hljs-keyword">while</span> ((len = in.read(buffer)) != -<span class="hljs-number">1</span>) &#123;<br>            out.write(buffer, <span class="hljs-number">0</span>, len);<br>        &#125;<br>        in.close();<br>        out.close();<br>    &#125;<br><br>    <span class="hljs-comment">// 8.使用OutputStream将缓冲区中的数据输出到客户端！</span><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">protected</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">doPost</span><span class="hljs-params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="hljs-keyword">throws</span> ServletException, IOException &#123;<br>        doGet(req, resp);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><ol start="3"><li>验证码功能</li></ol>  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@WebServlet(name = &quot;img&quot;,value = &quot;/img&quot;)</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">ImageServlet</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">HttpServlet</span> &#123;<br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">protected</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">doGet</span><span class="hljs-params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="hljs-keyword">throws</span> ServletException, IOException &#123;<br>        <span class="hljs-comment">// 让浏览器3秒刷新一次</span><br>        resp.setHeader(<span class="hljs-string">&quot;refresh&quot;</span>, <span class="hljs-string">&quot;3&quot;</span>);<br>        <span class="hljs-comment">// 在内存中创建一个图片</span><br>        <span class="hljs-type">BufferedImage</span> <span class="hljs-variable">image</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BufferedImage</span>(<span class="hljs-number">80</span>, <span class="hljs-number">20</span>, BufferedImage.TYPE_INT_RGB);<span class="hljs-comment">// 宽、高、颜色</span><br>        <span class="hljs-comment">// 得到图片</span><br>        <span class="hljs-type">Graphics2D</span> <span class="hljs-variable">g</span> <span class="hljs-operator">=</span> (Graphics2D) image.getGraphics();<span class="hljs-comment">// 得到一只2D的笔</span><br>        <span class="hljs-comment">// 设置图片的背景颜色</span><br>        g.setColor(Color.white);<br>        g.fillRect(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">80</span>, <span class="hljs-number">20</span>);<span class="hljs-comment">// 填充颜色</span><br>        <span class="hljs-comment">// 换个背景颜色</span><br>        g.setColor(Color.BLUE);<br>        <span class="hljs-comment">// 设置字体样式：粗体，20</span><br>        g.setFont(<span class="hljs-keyword">new</span> <span class="hljs-title class_">Font</span>(<span class="hljs-literal">null</span>, Font.BOLD, <span class="hljs-number">20</span>));<br>        <span class="hljs-comment">// 画一个字符串（给图片写数据）</span><br>        g.drawString(makeNum(), <span class="hljs-number">0</span>, <span class="hljs-number">20</span>);<br>        <span class="hljs-comment">// 告诉浏览器，这个请求用图片的方式打开</span><br>        resp.setContentType(<span class="hljs-string">&quot;image/jpeg&quot;</span>);<br>        <span class="hljs-comment">// 网站存在缓存，不让浏览器缓存</span><br>        resp.setDateHeader(<span class="hljs-string">&quot;expires&quot;</span>, -<span class="hljs-number">1</span>);<br>        resp.setHeader(<span class="hljs-string">&quot;Cache-Control&quot;</span>, <span class="hljs-string">&quot;no-cache&quot;</span>);<br>        resp.setHeader(<span class="hljs-string">&quot;Pragma&quot;</span>, <span class="hljs-string">&quot;no-cache&quot;</span>);<br>        <span class="hljs-comment">// 把图片写给浏览器</span><br>        <span class="hljs-type">boolean</span> <span class="hljs-variable">write</span> <span class="hljs-operator">=</span> ImageIO.write(image, <span class="hljs-string">&quot;jpg&quot;</span>, resp.getOutputStream());<br>    &#125;<br><br>    <span class="hljs-comment">// 生成随机数</span><br>    <span class="hljs-keyword">private</span> String <span class="hljs-title function_">makeNum</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-type">Random</span> <span class="hljs-variable">random</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Random</span>();<br>        <span class="hljs-type">String</span> <span class="hljs-variable">num</span> <span class="hljs-operator">=</span> random.nextInt(<span class="hljs-number">9999999</span>) + <span class="hljs-string">&quot;&quot;</span>;<span class="hljs-comment">// 随机数，最大七位，[0,9999999)</span><br>        <span class="hljs-type">StringBuffer</span> <span class="hljs-variable">sb</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">StringBuffer</span>();<br>        <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">7</span> - num.length(); i++) &#123;<span class="hljs-comment">// 不足七位，则添加0</span><br>            sb.append(<span class="hljs-string">&quot;0&quot;</span>);<br>        &#125;<br>        num = sb.toString() + num;<span class="hljs-comment">// 不足七位，在随机数前面添加0</span><br>        <span class="hljs-keyword">return</span> num;<br>    &#125;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">protected</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">doPost</span><span class="hljs-params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="hljs-keyword">throws</span> ServletException, IOException &#123;<br>        doGet(req, resp);<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><ol start="4"><li><p>实现请求重定向</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@WebServlet(name = &quot;Red&quot;, value = &quot;/red&quot;)</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">RedirectServlet</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">HttpServlet</span> &#123;<br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">protected</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">doGet</span><span class="hljs-params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="hljs-keyword">throws</span> ServletException, IOException &#123;<br><span class="hljs-comment">/*</span><br><span class="hljs-comment">        resp.setHeader(&quot;Location&quot;,&quot;/res/image&quot;);</span><br><span class="hljs-comment">        resp.setStatus(302);</span><br><span class="hljs-comment">*/</span><br>        resp.sendRedirect(<span class="hljs-string">&quot;/res/img&quot;</span>);<br>    &#125;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">protected</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">doPost</span><span class="hljs-params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="hljs-keyword">throws</span> ServletException, IOException &#123;<br>        doGet(req, resp);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure></li></ol><h1>7. HttpServletRequest</h1><p>HttpServletRequest代表客户端的请求，用户通过Http协议访问服务器，HTTP请求中的所有信息会被封装到HttpServletRequest，通过这个HttpServletRequest的方法，获得客户端的所有信息。</p><ol><li><p>获取前端传递的参数<br><img src="../../photo/2770896-20230409154536953-743078500.jpg" alt="image"></p></li><li><p>请求转发<br>前端：</p><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs jsp">&lt;%@ page contentType=<span class="hljs-string">&quot;text/html; charset=UTF-8&quot;</span> pageEncoding=<span class="hljs-string">&quot;UTF-8&quot;</span> %&gt;<br>&lt;!DOCTYPE html&gt;<br>&lt;html&gt;<br>&lt;head&gt;<br>    &lt;title&gt;登录&lt;/title&gt;<br>&lt;/head&gt;<br>&lt;body&gt;<br>&lt;h1&gt;登录&lt;/h1&gt;<br>&lt;div &gt;<br>    &lt;%--这里表单表示的意思：以post方式提交表单，提交到我们的login请求--%&gt;<br>    &lt;form action=<span class="hljs-string">&quot;$&#123;pageContext.request.contextPath&#125;/login&quot;</span> method=<span class="hljs-string">&quot;post&quot;</span>&gt;<br>        用户名：&lt;input type=<span class="hljs-string">&quot;text&quot;</span> name=<span class="hljs-string">&quot;username&quot;</span>&gt;&lt;br&gt;<br>        密码：&lt;input type=<span class="hljs-string">&quot;password&quot;</span> name=<span class="hljs-string">&quot;password&quot;</span>&gt;&lt;br&gt;<br>        爱好：<br>        &lt;input type=<span class="hljs-string">&quot;checkbox&quot;</span> name=<span class="hljs-string">&quot;hobbys&quot;</span> value=<span class="hljs-string">&quot;代码&quot;</span>&gt; 代码<br>        &lt;input type=<span class="hljs-string">&quot;checkbox&quot;</span> name=<span class="hljs-string">&quot;hobbys&quot;</span> value=<span class="hljs-string">&quot;唱歌&quot;</span>&gt; 唱歌<br>        &lt;input type=<span class="hljs-string">&quot;checkbox&quot;</span> name=<span class="hljs-string">&quot;hobbys&quot;</span> value=<span class="hljs-string">&quot;女孩&quot;</span>&gt; 女孩<br>        &lt;input type=<span class="hljs-string">&quot;checkbox&quot;</span> name=<span class="hljs-string">&quot;hobbys&quot;</span> value=<span class="hljs-string">&quot;电影&quot;</span>&gt; 电影<br>        &lt;br&gt;<br>        &lt;input type=<span class="hljs-string">&quot;submit&quot;</span> name=<span class="hljs-string">&quot;提交&quot;</span>&gt;<br>    &lt;/form&gt;<br>&lt;/div&gt;<br>&lt;/body&gt;<br>&lt;/html&gt;<br></code></pre></td></tr></table></figure><p>后端：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@WebServlet(name = &quot;LoginServlet&quot;,value = &quot;/login&quot;)</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">LoginServlet</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">HttpServlet</span> &#123;<br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">protected</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">doGet</span><span class="hljs-params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="hljs-keyword">throws</span> ServletException, IOException &#123;<br>        <span class="hljs-type">String</span> <span class="hljs-variable">username</span> <span class="hljs-operator">=</span> req.getParameter(<span class="hljs-string">&quot;username&quot;</span>);<br>        <span class="hljs-type">String</span> <span class="hljs-variable">password</span> <span class="hljs-operator">=</span> req.getParameter(<span class="hljs-string">&quot;password&quot;</span>);<br>        String[] hobbys = req.getParameterValues(<span class="hljs-string">&quot;hobbys&quot;</span>);<br>        System.out.println(<span class="hljs-string">&quot;------------------------&quot;</span>);<br>        System.out.println(username);<br>        System.out.println(password);<br>        System.out.println(Arrays.toString(hobbys));<br>        <span class="hljs-comment">// 通过请求转发</span><br><span class="hljs-comment">//        resp.sendRedirect(&quot;/req/success.jsp&quot;);</span><br>        req.getRequestDispatcher(<span class="hljs-string">&quot;/success.jsp&quot;</span>).forward(req,resp); <span class="hljs-comment">// 转发 / 代表当前的web应用，直接跟路径名称就行，与重定向不一样</span><br>    &#125;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">protected</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">doPost</span><span class="hljs-params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="hljs-keyword">throws</span> ServletException, IOException &#123;<br>        doGet(req, resp);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure></li></ol><p><code>面试题：请你聊聊重定向和转发的区别？</code><br>相同点：页面都会实现跳转<br>不同点：</p><ul><li>请求转发的时候，url地址栏不会产生变化。307</li><li>重定向时候，url地址栏会发生变化。302</li></ul>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
