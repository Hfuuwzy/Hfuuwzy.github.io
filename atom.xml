<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>黄前久美子</title>
  
  
  <link href="https://hfuuwzy.github.io/atom.xml" rel="self"/>
  
  <link href="https://hfuuwzy.github.io/"/>
  <updated>2023-04-20T08:05:17.481Z</updated>
  <id>https://hfuuwzy.github.io/</id>
  
  <author>
    <name>wzy</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Test文章</title>
    <link href="https://hfuuwzy.github.io/2023/04/20/test/"/>
    <id>https://hfuuwzy.github.io/2023/04/20/test/</id>
    <published>2023-04-19T16:00:00.000Z</published>
    <updated>2023-04-20T08:05:17.481Z</updated>
    
    <content type="html"><![CDATA[<h1>Test</h1><p>你是我的我是你的谁</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">test</span>()&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;你好世界&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>结束战斗哈哈</p><h1>end</h1>]]></content>
    
    
    <summary type="html">实验室小白鼠</summary>
    
    
    
    <category term="Linux" scheme="https://hfuuwzy.github.io/categories/Linux/"/>
    
    
    <category term="Linux" scheme="https://hfuuwzy.github.io/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>MySQL基础</title>
    <link href="https://hfuuwzy.github.io/2023/04/20/MySQL%E5%9F%BA%E7%A1%80/"/>
    <id>https://hfuuwzy.github.io/2023/04/20/MySQL%E5%9F%BA%E7%A1%80/</id>
    <published>2023-04-19T16:00:00.000Z</published>
    <updated>2023-04-20T08:07:56.539Z</updated>
    
    <content type="html"><![CDATA[<h1>1. 初识MySQL</h1><h2 id="1-1-什么是数据库">1.1 什么是数据库</h2><p>数据库(DB,DataBase)</p><p>概念：数据仓库，<strong>软件</strong>，安装在操作系统之上，SQL，可以存储大量的数据，500w！</p><p>作用：存储数据，管理数据</p><h2 id="1-2-数据库分类">1.2 数据库分类</h2><p><strong>关系型数据库</strong></p><ul><li>MySQL,Oracle,Sql Server,DB2,SQLlite</li><li>通过表与表之间，行列之间的关系进行数据的存储，学员信息表，考勤表…</li></ul><p><strong>非关系型数据库</strong>(NoSQL) not only</p><ul><li>Redis,MongDB</li><li>对象存储，通过对象的自身的属性来决定</li></ul><h2 id="1-3-连接数据库">1.3 连接数据库</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">mysql -u rppt -p -- 连接数据库</span><br><span class="line"></span><br><span class="line">update mysql.user set authentication_string=password(&quot;******&quot;)where user = &#x27;root&#x27; and Host = &#x27;localhost&#x27;; -- 修改用户密码</span><br><span class="line">flush privileges; -- 刷新权限</span><br><span class="line">----------------------------</span><br><span class="line">-- 所有语句都使用; 结尾</span><br><span class="line">show databases; -- 查看所有的数据库</span><br><span class="line"></span><br><span class="line">mysql &gt; use school --切换数据据 use 数据库名</span><br><span class="line">Database change;</span><br><span class="line"></span><br><span class="line">show tables; -- 查看数据库中所有的表的信息</span><br><span class="line">describe student ; -- 显示数据库中所有的表的信息</span><br><span class="line"></span><br><span class="line">create database westos; -- 创建一个数据库</span><br><span class="line"></span><br><span class="line">exit -- 退出连接</span><br></pre></td></tr></table></figure><p>数据库xxx语言</p><p>DDL 定义</p><p>DML 操作</p><p>DQL 查询</p><p>DCL 控制</p><h1>2. 操作数据库</h1><h2 id="2-1-操作数据库">2.1 操作数据库</h2><p><strong>操作数据库—&gt;操作数据库中的表—&gt;操作数据库中表的数据</strong></p><p>== mysql关键字不区分大小写 ==</p><ol><li><p>创建数据库</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">CREATE DATABASE [IF NOT EXISTS] westos; -- 创建数据库westos if判断可用可不用create database shop character set utf8 collate utf8_general_ci -- 字符集，字符校对</span><br></pre></td></tr></table></figure></li><li><p>删除数据库</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">DROP DATABASE IF EXISTS westos;</span><br></pre></td></tr></table></figure></li><li><p>使用数据库</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-- ``在tab键的上面,如果你的表名或者字段名是一个特殊字符，就需要带``USE `school`;-- 切换数据库-- user是个特殊的字段，在SQLyog中会标为关键字，而在student表中只是我设置的一个普通属性，不需要特殊标识，所以user用``标记SELECT `user` FROM student;</span><br></pre></td></tr></table></figure></li><li><p>查看数据库</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SHOW DATABASES;-- 查看所有的数据库</span><br></pre></td></tr></table></figure></li></ol><p>学习思路：</p><ul><li>对照SQLyog可视化的历史记录来查看SQL代码，多敲SQL代码</li><li>固定的语法或关键字必须要强行记住！多敲就能记住</li></ul><h2 id="2-2-数据库的属性类型">2.2 数据库的属性类型</h2><blockquote><p>数值</p></blockquote><ul><li>tinyint 十分小的数据 1个字节</li><li>smallint 较小的数据 2个字节</li><li>mediumint 中等大小的数据 3个字节</li><li><strong>int 标准的整数 4个字节 常用</strong></li><li>bigint 较大的数据 8个字节</li><li>float 浮点数 4个字节</li><li>double 浮点数 8个字节（这种类型的浮点数都会有精度问题）</li><li><strong>decimal 字符串形式的浮点数 金融计算的时候一般都是使用decimal，这不会丢失精度</strong></li></ul><p><font color=red>int显示长度与零填充有关，不与值大小有关，而varchar的长度与字符串长度和值有关</font></p><blockquote><p>字符串</p></blockquote><ul><li>char 字符串固定大小的 0~255</li><li><strong>varchar 可变字符串 0~65535 常用的变量 String</strong></li><li>tinytext 微型文本 2^8 - 1</li><li><strong>text 文本串 2^16 - 1 一般可保存大文本</strong></li></ul><blockquote><p>时间日期</p></blockquote><p>java.util.Data</p><ul><li>data YYYY-MM-DD 日期格式</li><li>time HH:mm:ss      时间格式</li><li><strong>datetime YYYY-MM-DD HH:mm:ss     最常用的时间格式</strong></li><li><strong>timestamp 时间戳 1970.1.1到现在的毫秒数 较为常用</strong></li><li>year 年份表示</li></ul><blockquote><p>null</p></blockquote><ul><li>没有值 未知的意思</li><li>==注意，不要使用NULL进行运算，有NULL的话最后的结果也是NULL，没意义 ==</li></ul><h2 id="2-3-数据库的字段属性（重点）">2.3 数据库的字段属性（重点）</h2><p><font color=red>Unsigned:</font></p><ul><li>无符号的整数</li><li>表明了该列不能声明为负数</li></ul><p><font color=red>zerofill:</font></p><ul><li>零填充的</li><li>不足的位数，使用零来填充，int(3)，5 … 005</li></ul><p><font color=red>自增:</font>（auto_increment）</p><p>+ 通常理解为自增,一般使用在主键中<br>+ 通常用来设计唯一的主键 index，必须是整数类型<br>+ 可以自定义设计主键自增的起始值和步长</p><p><font color=red>非空：</font>NULL 与 NOT NULL</p><p>+ 假设设置为not null：如果不给它赋值，就会报错！<br>+ 不设置not null：如果不填写值，默认就是NULL</p><p><font color=red>默认：</font></p><ul><li>设置默认的值</li></ul><p>扩展：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">/* 每一个表，都必须存在以下五个字段！未来做项目用的，表示一个记录存在意义id   </span><br><span class="line">主键`version`    </span><br><span class="line">乐观锁is_delete    </span><br><span class="line">伪删除gmt_create   </span><br><span class="line">创建时间gmt_update   </span><br><span class="line">修改时间*/</span><br></pre></td></tr></table></figure><h2 id="2-4-创建数据库表（重点）">2.4 创建数据库表（重点）</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 目标：创建一个school数据库-- 创建学生表（列，字段） 使用SQL创建-- 学号int 登录密码varchar(20) 姓名，性别varchar(2)，出生日期(datetime)，家庭住址。email</span></span><br><span class="line"><span class="comment">-- 注意点，使用英文（），表的名称和字段  尽量使用``括起来</span></span><br><span class="line"><span class="comment">-- AUTO_INCREMENT 自增-- 字符串使用单引号&#x27;&#x27;括起来！</span></span><br><span class="line"><span class="comment">-- 所有的语句后面加英文逗号 , (英文)，最后一个不用加</span></span><br><span class="line"><span class="comment">-- primary key 主键，一般一个表只有一个唯一的主键</span></span><br><span class="line"><span class="comment">-- ENGINE=INNODB 设置存储引擎， DEFAULT CHARSET=utf8 设置编码格式</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> IF <span class="keyword">NOT</span> <span class="keyword">EXISTS</span> `student`(</span><br><span class="line">    `id` <span class="type">INT</span>(<span class="number">4</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT COMMENT <span class="string">&#x27;学号&#x27;</span>,     </span><br><span class="line">    `password` <span class="type">VARCHAR</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;123456&#x27;</span> COMMENT <span class="string">&#x27;密码&#x27;</span>,     </span><br><span class="line">    `name` <span class="type">VARCHAR</span>(<span class="number">10</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;匿名&#x27;</span> COMMENT <span class="string">&#x27;名字&#x27;</span>,     </span><br><span class="line">    `sex` <span class="type">VARCHAR</span>(<span class="number">2</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;男&#x27;</span> COMMENT <span class="string">&#x27;性别&#x27;</span>,     </span><br><span class="line">    `birthday` DATETIME <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;出生日期&#x27;</span>,     </span><br><span class="line">    `address` <span class="type">VARCHAR</span>(<span class="number">50</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;家庭住址&#x27;</span>,     </span><br><span class="line">    `email` <span class="type">VARCHAR</span>(<span class="number">30</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;邮件&#x27;</span>,     </span><br><span class="line">    <span class="keyword">PRIMARY</span> KEY(`id`)</span><br><span class="line">)ENGINE<span class="operator">=</span>INNODB <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8</span><br></pre></td></tr></table></figure><p>格式：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> [IF <span class="keyword">NOT</span> <span class="keyword">EXISTS</span>] `表名`(     </span><br><span class="line">    `字段名` 属性类型 [属性] [索引] [注释],     </span><br><span class="line">    `字段名` 属性类型 [属性] [索引] [注释],   </span><br><span class="line">    ......    </span><br><span class="line">    `字段名` 属性类型 [属性] [索引] [注释],    </span><br><span class="line">    <span class="keyword">primary</span> key(``)<span class="comment">-- 设置主键</span></span><br><span class="line">)[表类型][字符集设置][注释]</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>常用命令：</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SHOW</span> <span class="keyword">CREATE</span> DATABASE school  <span class="comment">-- 查看创建school数据库的语句</span></span><br><span class="line"><span class="comment">-- CREATE DATABASE `school` /*!40100 DEFAULT CHARACTER SET utf8 */</span></span><br><span class="line"><span class="keyword">SHOW</span> <span class="keyword">CREATE</span> <span class="keyword">TABLE</span> student <span class="comment">-- 查看student数据表的定义语句</span></span><br><span class="line"><span class="keyword">DESC</span> student <span class="comment">-- 显示表的结构，属性</span></span><br></pre></td></tr></table></figure><h2 id="2-5-数据表的类型">2.5 数据表的类型</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 关于数据库的引擎</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">INNODB 默认使用~</span></span><br><span class="line"><span class="comment">MYISAM 早些年使用的</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><table><thead><tr><th></th><th>MYISAM</th><th>INNODB</th></tr></thead><tbody><tr><td>事务支持</td><td>不支持</td><td>支持</td></tr><tr><td>数据行锁定</td><td>不支持</td><td>支持</td></tr><tr><td>外键约束</td><td>不支持</td><td>支持</td></tr><tr><td>全文索引</td><td>支持</td><td>不支持</td></tr><tr><td>表空间大小</td><td>较小</td><td>较大，约为2倍的MYISAM</td></tr></tbody></table><p>常规使用操作：</p><ul><li>MYISAM 节约空间，速度较快</li><li>INNODB 安全性高，事务的处理，多表多用户操作</li></ul><blockquote><p>在物理空间存在的位置:</p></blockquote><p>所有的数据库文件都存在data目录下，一个文件夹就对应一个数据库，本质还是文件的存储！</p><p>MYSQL（5版本）引擎在物理文件上的区别：</p><ul><li>INNODB 在数据库中有一个*.frm文件和* .ibd文件，以及上级目录下的ibdata1文件</li><li>MYISAM对应文件：<ul><li>*.frm 表结构的定义文件</li><li>*.MYD 数据文件（data）</li><li>*.MYI 索引文件（index）</li></ul></li></ul><blockquote><p>设置数据库表的字符集编码</p></blockquote><p>MySQL的默认编码是Latin1 不支持中文</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">charset =utf8</span><br></pre></td></tr></table></figure><p>不设置的话，会是mysql默认的字符集编码（不支持中文）</p><ol><li><p>在建表的时候设置字符编码</p><p><em>ENGINE</em>=<strong>InnoDB</strong>  <em>DEFAULT CHARSET</em>=<strong>utf8</strong></p></li><li><p>在my.ini主配置中设置默认的编码（不推荐）</p><p><code>character-set-server=utf8</code></p></li></ol><h2 id="2-6-修改删除表">2.6 修改删除表</h2><blockquote><p><strong>修改</strong>：</p></blockquote><p>对表进行修改，不是修改里面的数据（行）</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 创建表</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> IF <span class="keyword">NOT</span> <span class="keyword">EXISTS</span> teacher (</span><br><span class="line">    `tid` <span class="type">INT</span>(<span class="number">5</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT COMMENT <span class="string">&#x27;id&#x27;</span>, </span><br><span class="line">    <span class="keyword">PRIMARY</span> KEY(tid)</span><br><span class="line">)ENGINE<span class="operator">=</span>INNODB <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8</span><br><span class="line"><span class="comment">-- 修改表名  ALTER TABLE 旧表名 RENAME AS 新表名</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> teacher RENAME <span class="keyword">AS</span> teacher1</span><br><span class="line"><span class="comment">-- 增加表的字段(属性) ALTER TABLE 表名 ADD 字段名（属性名） 数据类型</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> teacher1 <span class="keyword">ADD</span> `age` <span class="type">INT</span>(<span class="number">3</span>)</span><br><span class="line"><span class="comment">-- 修改表的字段（重命名，修改约束！）</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> teacher1 MODIFY age <span class="type">VARCHAR</span>(<span class="number">11</span>) <span class="comment">-- 修改约束（数据类型）</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> teacher1 CHANGE age age1 <span class="type">INT</span>(<span class="number">3</span>) <span class="comment">-- 字段重命名</span></span><br><span class="line"><span class="comment">-- 删除表的字段(属性):ALTER TABLE 表名 DROP 属性名（字段名）</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> teacher1 <span class="keyword">DROP</span> age1</span><br></pre></td></tr></table></figure><blockquote><p>删除：</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 删除表（如果表存在则删除）</span></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> IF <span class="keyword">EXISTS</span> teacher1</span><br></pre></td></tr></table></figure><p>注意点：</p><ul><li>字段名要用 ``包裹</li><li>注释： — 和 /**/</li><li>sql关键字大小写不敏感，建议都小写（SQLyog会自动转为大写）</li><li>所有的符号全部用英文</li></ul><h1>3. MySQL数据管理</h1><h2 id="3-1-外键">3.1 外键</h2><blockquote><p>方式一：创建表的时候就添加外键</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `grade`(</span><br><span class="line">    `gid` <span class="type">INT</span>(<span class="number">10</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT COMMENT <span class="string">&#x27;年级id&#x27;</span>,</span><br><span class="line">    <span class="keyword">PRIMARY</span> KEY(`gid`)</span><br><span class="line">)ENGINE<span class="operator">=</span>INNODB <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 学生表的gradeid字段，要去引用年级表的gradeid</span></span><br><span class="line"><span class="comment">-- 定义外键key</span></span><br><span class="line"><span class="comment">-- 给这个外键添加约束（执行引用） constraint约束 references引用</span></span><br><span class="line"><span class="comment">-- 注意添加表的时候确保这个表之前不在，不要直接在添加表的代码里临时添加数据，添加表属性用alter...add...</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> IF <span class="keyword">NOT</span> <span class="keyword">EXISTS</span> `student`(</span><br><span class="line">     `id` <span class="type">INT</span>(<span class="number">4</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT COMMENT <span class="string">&#x27;学号&#x27;</span>,</span><br><span class="line">     `gradeid` <span class="type">INT</span>(<span class="number">10</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;学生的年级&#x27;</span>,</span><br><span class="line">     <span class="keyword">PRIMARY</span> KEY(`id`),</span><br><span class="line">     KEY `FK_gradeid`(`gradeid`),</span><br><span class="line">     <span class="keyword">CONSTRAINT</span> `FK_gradeid` <span class="keyword">FOREIGN</span> KEY (`gradeid`) <span class="keyword">REFERENCES</span> `grade`(`gid`)</span><br><span class="line">)ENGINE<span class="operator">=</span>INNODB <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8</span><br></pre></td></tr></table></figure><blockquote><p>方式二：在创建表时没有添加外键，手动临时添加外键约束如下：</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 创建表的时候没有外键关系,手动修改表，创建外键</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> `student` </span><br><span class="line"><span class="keyword">ADD</span> </span><br><span class="line"><span class="keyword">CONSTRAINT</span> `FK_gradeid` <span class="keyword">FOREIGN</span> KEY(`gradeid`) <span class="keyword">REFERENCES</span> `grade`(`gid`);</span><br><span class="line"><span class="comment">-- ALTER TABLE 表名 ADD CONSTRAINT 约束名 FOREIGN KEY(作为外键的属性) REFERENCES 哪个表(哪个字段（属性）);</span></span><br></pre></td></tr></table></figure><p>以上操作都是物理外键，数据库级别的外键，不建议使用，（避免数据库过多造成困扰）</p><p><strong>最佳实践</strong></p><ul><li>数据库就是单纯的表，只用来存数据，只有行（数据）和列（字段，属性）</li><li>我们想使用多张表的数据，想实现关联（外键）（用程序去实现）</li></ul><p>为什么不用外键： <a href="https://blog.csdn.net/yxz8102/article/details/107303975">(19条消息) 为什么实际开发中不使用外键_王富贵儿。的博客-CSDN博客_实际开发中会用外键吗</a></p><h2 id="3-2-DML语言">3.2 DML语言</h2><p>**数据库意义：**数据存储，数据管理</p><p>DML语言：数据操作语言**（对数据（记录，行）进行操作）**</p><ul><li>insert</li><li>update</li><li>delete</li></ul><h2 id="3-3-添加">3.3 添加</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 插入语句（添加）</span></span><br><span class="line"><span class="comment">-- insert into 表名（[字段名1,字段名2,...]）values (值1,值2,值3,...),(值1,值2,值3,...),(值1,值2,值3,...)...</span></span><br><span class="line"><span class="comment">-- 一个括号values()代表一个数据(记录)</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `grade`(gname) <span class="keyword">VALUES</span> (<span class="string">&#x27;大四&#x27;</span>)</span><br><span class="line"><span class="comment">-- 由于主键自增我们可以省略（如果不写表的字段，他就会一一匹配）</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `grade` <span class="keyword">VALUES</span>(<span class="string">&#x27;大三&#x27;</span>) <span class="comment">-- 这里会报错，大三对应的是gid（int类型）</span></span><br><span class="line"><span class="comment">-- 插入多个字段</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> grade(gname) </span><br><span class="line"><span class="keyword">VALUES</span> (<span class="string">&#x27;大三&#x27;</span>),(<span class="string">&#x27;大二&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `student`(`name`) <span class="keyword">VALUES</span> (<span class="string">&#x27;张三&#x27;</span>)</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `student`(`name`,`password`,`sex`)</span><br><span class="line"><span class="keyword">VALUES</span>(<span class="string">&#x27;张三&#x27;</span>,<span class="string">&#x27;aaaaaaa&#x27;</span>,<span class="string">&#x27;男&#x27;</span>),(<span class="string">&#x27;李四&#x27;</span>,<span class="string">&#x27;bbbbbb&#x27;</span>,<span class="string">&#x27;男&#x27;</span>);</span><br><span class="line"><span class="comment">-- 没有字段名（属性名）则需要一一对应表中的属性顺序</span></span><br><span class="line"><span class="comment">-- 要全部属性对应的数据都写出来，主键不能一样，外键编号对应在引用表里也必须存在</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `student` <span class="keyword">VALUES</span>(<span class="number">10</span>,<span class="string">&#x27;000000&#x27;</span>,<span class="string">&#x27;Tang&#x27;</span>,<span class="string">&#x27;男&#x27;</span>,<span class="string">&#x27;2021-01-01&#x27;</span>,<span class="string">&#x27;湖南&#x27;</span>,<span class="string">&#x27;email&#x27;</span>,<span class="number">2</span>)</span><br></pre></td></tr></table></figure><p>语法：<code>insert into 表名（[字段名1,字段名2,...]）values (值1,值2,值3,...),(值1,值2,值3,...),(值1,值2,值3,...)...</code></p><p>一 一对应</p><p><strong>注意事项：</strong></p><ol><li>字段和字段之间使用英文逗号隔开</li><li>字段是可以省略的，但是后面的值必须要一一对应，不能少</li><li>可以同时插入多条数据，values后面的值需要使用，隔开即可values(),(),…</li><li>没有字段名（属性名）则需要一 一对应表中的属性顺序<br><strong>要全部属性对应的数据都写出来，主键不能一样，外键编号对应在引用表里也必须存在</strong></li></ol><h2 id="3-4-修改">3.4 修改</h2><blockquote><p>update 修改谁 [条件] set 属性名=新值</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 修改学生名字</span></span><br><span class="line"><span class="keyword">UPDATE</span> `student` <span class="keyword">SET</span> `name`<span class="operator">=</span><span class="string">&#x27;狂神&#x27;</span> <span class="keyword">WHERE</span> id<span class="operator">=</span><span class="number">1</span>;</span><br><span class="line"><span class="comment">-- 不指定条件的情况下会修改表中所有记录的数据</span></span><br><span class="line"><span class="keyword">UPDATE</span> student <span class="keyword">SET</span> `name`<span class="operator">=</span><span class="string">&#x27;1号&#x27;</span></span><br><span class="line"><span class="comment">-- 修改多个属性，逗号隔开</span></span><br><span class="line"><span class="keyword">UPDATE</span> student <span class="keyword">SET</span> `name`<span class="operator">=</span><span class="string">&#x27;狂神&#x27;</span>,email<span class="operator">=</span><span class="keyword">NULL</span> <span class="keyword">WHERE</span> id <span class="operator">=</span><span class="number">6</span>;</span><br><span class="line"><span class="comment">-- 语法：</span></span><br><span class="line"><span class="comment">-- UPDATE 表名 SET column_name=value,[column_name=value,...] WHERE [条件];</span></span><br></pre></td></tr></table></figure><p>条件：where子句 运算符 id等于某个值，大于某个值，在某个区间修改 ……</p><p>UPDATE student SET <code>name</code>=’狂神’,email=’123’ WHERE id BETWEEN 2 AND 5;</p><p>操作符会返回 布尔值</p><table><thead><tr><th>操作符</th><th>含义</th><th>范围</th><th>结果</th></tr></thead><tbody><tr><td>=</td><td>等于</td><td>5=6</td><td>false</td></tr><tr><td>&lt;&gt;或!=</td><td>不等于</td><td>5&lt;&gt;6或5!=6</td><td>true</td></tr><tr><td>&gt;</td><td>大于</td><td>5&gt;6</td><td>false</td></tr><tr><td>&lt;</td><td>小于</td><td>5&lt;6</td><td>true</td></tr><tr><td>&gt;=</td><td>大于等于</td><td>5&gt;=6</td><td>false</td></tr><tr><td>&lt;=</td><td>小于等于</td><td>5&lt;=6</td><td>true</td></tr><tr><td>between…and…</td><td>在某个范围内，双闭合区间</td><td>[2,5]</td><td></td></tr><tr><td>and</td><td>&amp;&amp; 和</td><td>5&gt;1 and 1&gt;2</td><td>false</td></tr><tr><td>or</td><td>|| 或</td><td>5&gt;1 or 1&gt;2</td><td>true</td></tr></tbody></table><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 通过多个条件定位数据</span></span><br><span class="line"><span class="keyword">UPDATE</span> student <span class="keyword">SET</span> `name`<span class="operator">=</span><span class="string">&#x27;长江7号&#x27;</span> <span class="keyword">WHERE</span> `name`<span class="operator">=</span><span class="string">&#x27;狂神&#x27;</span> <span class="keyword">AND</span> sex<span class="operator">=</span><span class="string">&#x27;女&#x27;</span></span><br></pre></td></tr></table></figure><p><strong>注意:</strong></p><ul><li>column_name 是数据库的列，尽量带上``</li><li>筛选的条件，如果没有指定，则会修改所有的列</li><li>value是一个具体的值，也可以是一个变量</li><li>多个变量的属性之间使用英文逗号隔开</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- CURRENT_TIME 当前时间 （变量）</span></span><br><span class="line"><span class="keyword">UPDATE</span> student <span class="keyword">SET</span> birthday<span class="operator">=</span><span class="built_in">CURRENT_TIME</span> <span class="keyword">WHERE</span> id<span class="operator">=</span><span class="number">1</span></span><br><span class="line"><span class="comment">-- or</span></span><br><span class="line"><span class="keyword">UPDATE</span> student <span class="keyword">SET</span> birthday<span class="operator">=</span><span class="string">&#x27;xxxx-xx-xx&#x27;</span> <span class="keyword">WHERE</span> id<span class="operator">=</span><span class="number">1</span></span><br></pre></td></tr></table></figure><h2 id="3-5-删除">3.5 删除</h2><blockquote><p>delete 命令</p></blockquote><p>语法：<code>delete from 表名 [where 条件]</code></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 删除指定数据D</span></span><br><span class="line">ELETE <span class="keyword">FROM</span> student <span class="keyword">WHERE</span> id <span class="operator">=</span><span class="number">1</span>;</span><br><span class="line"><span class="comment">-- 删除数据没有条件（避免这样写，会全部清空表）</span></span><br><span class="line"><span class="keyword">DELETE</span> <span class="keyword">FROM</span> student;</span><br></pre></td></tr></table></figure><blockquote><p>truncate命令</p></blockquote><p>作用：完全清空一个数据库表，表的结构和索引约束不会变！</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 清空student表(会将自增量也清零)</span></span><br><span class="line"><span class="keyword">TRUNCATE</span> student</span><br></pre></td></tr></table></figure><blockquote><p>delete与truncate的区别</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 测试delete 和 truncate区别</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `test`(</span><br><span class="line">`id` <span class="type">INT</span>(<span class="number">4</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT,</span><br><span class="line">    `coll` <span class="type">VARCHAR</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,   </span><br><span class="line">     <span class="keyword">PRIMARY</span> KEY(`id`)</span><br><span class="line">)ENGINE<span class="operator">=</span>INNODB <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> test(coll) <span class="keyword">VALUES</span> (<span class="string">&#x27;1&#x27;</span>),(<span class="string">&#x27;2&#x27;</span>),(<span class="string">&#x27;3&#x27;</span>)<span class="keyword">DELETE</span> <span class="keyword">FROM</span> test </span><br><span class="line"><span class="comment">-- delete 不会影响自增</span></span><br><span class="line"><span class="keyword">TRUNCATE</span> test  <span class="comment">-- 清零自增量</span></span><br></pre></td></tr></table></figure><p>了解即可：delete删除的问题，<strong>重启数据库</strong>现象:</p><ul><li>INNODB 自增列会重1开始 (存在内存当中，断电即失)</li><li>MYISAM 继续从上一个自增量开始（存在文件中，不会丢失）</li></ul><h1>4. DQL查询数据（最重点）</h1><h2 id="4-1-DQL">4.1 DQL</h2><p>DQL: Data Query Language 数据查询语言</p><ul><li>所有的查询操作都用它 Select</li><li>简单的查询，复杂的查询它都能做</li><li><font color=red>数据库中最核心的语言，最重要的语句</font></li><li>使用频率最高的语句</li></ul><p><font color = red>以下图片内的语法顺序必须遵守</font></p><p><strong>where的条件不能使用聚集函数，要再having中使用</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 一般sql语句</span></span><br><span class="line"><span class="operator">=</span><span class="operator">=</span>顺序很重要：<span class="operator">=</span><span class="operator">=</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> 去重(<span class="keyword">distinct</span>) 要查询的字段<span class="keyword">from</span>表（注意：表和字段可以区别名）<span class="operator">=</span><span class="operator">=</span></span><br><span class="line"></span><br><span class="line">xxx <span class="keyword">join</span> 要连接的表 <span class="keyword">on</span> 判断的连接点</span><br><span class="line"></span><br><span class="line"><span class="keyword">where</span>（具体的值，子查询语句）<span class="operator">=</span><span class="operator">=</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Group</span> <span class="keyword">By</span>（通过哪个字段来分组）<span class="operator">=</span><span class="operator">=</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Having</span>（过滤分组后的信息，条件语法和<span class="keyword">where</span>是一样的，位置不同，用在分组中）</span><br><span class="line"></span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span>（通过哪个字段排序）【升序<span class="operator">/</span>降序】</span><br><span class="line"></span><br><span class="line">limit startindex， pageSize（分页）</span><br><span class="line"></span><br><span class="line">业务层面：查询：跨表，跨数据库…</span><br></pre></td></tr></table></figure><h2 id="4-2-查询指定字段">4.2 查询指定字段</h2><p><font color = red>select 字段,… from 表名 </font></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 查询全部学生   SELECT * FROM 表名</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> student</span><br><span class="line"><span class="comment">-- 查询指定字段</span></span><br><span class="line"><span class="keyword">SELECT</span> `studentno`,`studentname` <span class="keyword">FROM</span> student</span><br><span class="line"><span class="comment">-- 别名，给结果起一个别名  用AS（as可以省略）</span></span><br><span class="line"><span class="keyword">SELECT</span> `studentno` <span class="keyword">AS</span> `学号`,`studentname` <span class="keyword">AS</span> 名字 <span class="keyword">FROM</span> student</span><br><span class="line"><span class="comment">-- 在姓名前加上“姓名:XXX” 函数concat(a,b)</span></span><br><span class="line"><span class="keyword">SELECT</span> `studentno`  学号,CONCAT(<span class="string">&#x27;姓名：&#x27;</span>,`studentname`)<span class="keyword">AS</span> 新姓名 <span class="keyword">FROM</span> student</span><br></pre></td></tr></table></figure><blockquote><p>有的时候列名字不是那么的见名知意，所以有了别名 AS（可以省略） 字段名 as 别名 表名 as 别名</p></blockquote><blockquote><p>去重 distinct</p></blockquote><p><strong>作用：去除重复的结果数据，重复的数据只显示一条</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 查询一下有哪些同学参加了考试，成绩</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> <span class="keyword">result</span>  <span class="comment">-- 查询全部的考试成绩</span></span><br><span class="line"><span class="keyword">SELECT</span> `studentno` <span class="keyword">FROM</span> <span class="keyword">result</span> <span class="comment">-- 查询哪些同学参加了考试，只显示学号</span></span><br><span class="line"><span class="comment">-- 发现有重复数据，distinct去重</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">DISTINCT</span> `studentno` <span class="keyword">FROM</span> <span class="keyword">result</span></span><br></pre></td></tr></table></figure><blockquote><p>数据库的列（表达式）</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> VERSION()  <span class="comment">-- 查询系统的版本（函数）</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="number">100</span><span class="operator">*</span><span class="number">3</span><span class="number">-1</span> <span class="keyword">AS</span> 计算结果  <span class="comment">-- 用来计算（表达式）</span></span><br><span class="line"><span class="keyword">SELECT</span> @<span class="variable">@auto</span>_increment_increment <span class="comment">-- 查询自增量的步长（变量）</span></span><br><span class="line"><span class="comment">-- 学生的考试成绩+1分查看</span></span><br><span class="line"><span class="keyword">SELECT</span> `studentno`, `studentresult`<span class="operator">+</span><span class="number">1</span> <span class="keyword">AS</span> <span class="string">&#x27;提分后&#x27;</span> <span class="keyword">FROM</span> <span class="keyword">result</span></span><br></pre></td></tr></table></figure><p><strong>数据库中的表达式有：文本值，列，null，函数，计算表达式，系统变量….</strong></p><p><strong>select 表达式 from 表</strong></p><h2 id="4-3-where条件子句">4.3 where条件子句</h2><p>作用 ： 检索条件中<code>符合条件</code>的值</p><blockquote><p>逻辑运算符：<font color=red>尽量使用英文字母</font></p></blockquote><table><thead><tr><th>运算符</th><th>语法</th><th>描述</th></tr></thead><tbody><tr><td>and &amp;&amp;</td><td>a and b a&amp;&amp;b</td><td>逻辑与</td></tr><tr><td>or</td><td>a or b    a||b</td><td>逻辑或</td></tr><tr><td>not !</td><td>not a !a</td><td>逻辑非</td></tr></tbody></table><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- ========where========</span></span><br><span class="line"><span class="keyword">SELECT</span> studentNo,StudentResult <span class="keyword">FROM</span> <span class="keyword">result</span>; <span class="comment">-- 不区分大小写</span></span><br><span class="line"><span class="comment">-- AND 查询考试成绩在90~100分之间</span></span><br><span class="line"><span class="keyword">SELECT</span> `studentno`,`studentresult` <span class="keyword">FROM</span> <span class="keyword">result</span></span><br><span class="line"><span class="keyword">WHERE</span> `studentresult`<span class="operator">&gt;=</span><span class="number">90</span> <span class="keyword">AND</span> `studentresult`<span class="operator">&lt;=</span><span class="number">100</span>;</span><br><span class="line"><span class="comment">-- &amp;&amp;</span></span><br><span class="line"><span class="keyword">SELECT</span> `studentno`,`studentresult` <span class="keyword">FROM</span> <span class="keyword">result</span></span><br><span class="line"><span class="keyword">WHERE</span> `studentresult`<span class="operator">&gt;=</span><span class="number">90</span> <span class="operator">&amp;&amp;</span> `studentresult`<span class="operator">&lt;=</span><span class="number">100</span>;</span><br><span class="line"><span class="comment">-- 闭合区间：between...and...</span></span><br><span class="line"><span class="keyword">SELECT</span> `studentno`,`studentresult` <span class="keyword">FROM</span> <span class="keyword">result</span></span><br><span class="line"><span class="keyword">WHERE</span> `studentresult` <span class="keyword">BETWEEN</span> <span class="number">90</span> <span class="keyword">AND</span> <span class="number">100</span>;</span><br><span class="line"><span class="comment">-- != 除了1001号学生之外的同学的成绩</span></span><br><span class="line"><span class="keyword">SELECT</span> `studentno`,`studentresult` <span class="keyword">FROM</span> <span class="keyword">result</span></span><br><span class="line"><span class="keyword">WHERE</span> studentno<span class="operator">!=</span><span class="number">1001</span>;</span><br><span class="line"><span class="comment">-- not 除了1001号学生之外的同学的成绩</span></span><br><span class="line"><span class="keyword">SELECT</span> `studentno`,`studentresult` <span class="keyword">FROM</span> <span class="keyword">result</span></span><br><span class="line"><span class="keyword">WHERE</span> <span class="keyword">NOT</span> studentno<span class="operator">=</span><span class="number">1001</span>;</span><br></pre></td></tr></table></figure><blockquote><p>模糊查询：比较运算符</p></blockquote><table><thead><tr><th>运算符</th><th>语法</th><th>描述</th></tr></thead><tbody><tr><td>is null</td><td>a is null</td><td>如果操作数为null，结果为真</td></tr><tr><td>is not null</td><td>a is not null</td><td>如果操作数不为null，结果为真</td></tr><tr><td>between</td><td>a between b and c</td><td>若a在[b,c]之间，则结果为真</td></tr><tr><td>like</td><td>a like b</td><td>SQL匹配，如果a匹配b，则结果为真</td></tr><tr><td>in</td><td>a in（a1，a2，a3，…）</td><td>若a为区间(a1,a2,a3,…)中某个值，则结果为真</td></tr></tbody></table><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- =======模糊查询========</span></span><br><span class="line"><span class="comment">-- 查询性唐的同学</span></span><br><span class="line"><span class="comment">-- like结合 %(代表0到任意个字符)  _(一个字符)</span></span><br><span class="line"><span class="keyword">SELECT</span> `studentno`,`studentname` <span class="keyword">FROM</span> student</span><br><span class="line"><span class="keyword">WHERE</span> `studentname` <span class="keyword">LIKE</span> <span class="string">&#x27;唐%&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询姓唐的同学，名字后面只有一个字的</span></span><br><span class="line"><span class="keyword">SELECT</span> `studentno`,`studentname` <span class="keyword">FROM</span> student</span><br><span class="line"><span class="keyword">WHERE</span> `studentname` <span class="keyword">LIKE</span> <span class="string">&#x27;唐_&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询姓唐的同学，名字后面只有两个字的</span></span><br><span class="line"><span class="keyword">SELECT</span> `studentno`,`studentname` <span class="keyword">FROM</span> student</span><br><span class="line"><span class="keyword">WHERE</span> `studentname` <span class="keyword">LIKE</span> <span class="string">&#x27;唐__&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询名字中间有嘉字的同学%嘉%</span></span><br><span class="line"><span class="keyword">SELECT</span> `studentno`,`studentname` <span class="keyword">FROM</span> student</span><br><span class="line"><span class="keyword">WHERE</span> `studentname` <span class="keyword">LIKE</span> <span class="string">&#x27;%嘉%&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- in（具体的一个或者多个值(全称)）</span></span><br><span class="line"><span class="comment">-- 查询1001,1002,1003号学生</span></span><br><span class="line"><span class="keyword">SELECT</span> `studentno`,`studentname` <span class="keyword">FROM</span> `student`</span><br><span class="line"><span class="keyword">WHERE</span> `studentno` <span class="keyword">IN</span>(<span class="number">1001</span>,<span class="number">1002</span>,<span class="number">1003</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询在北京的学生</span></span><br><span class="line"><span class="keyword">SELECT</span> `studentno`,`studentname` <span class="keyword">FROM</span> `student`</span><br><span class="line"><span class="keyword">WHERE</span> `address` <span class="keyword">IN</span>(<span class="string">&#x27;湖南&#x27;</span>,<span class="string">&#x27;河南洛阳&#x27;</span>);<span class="comment">-- 必须是全称，一一匹配</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- null     not null</span></span><br><span class="line"><span class="comment">-- 查询地址为空的学生null &#x27;&#x27;</span></span><br><span class="line"><span class="keyword">SELECT</span> `studentno`,`studentname` <span class="keyword">FROM</span> `student`</span><br><span class="line"><span class="keyword">WHERE</span> `address`<span class="operator">=</span><span class="string">&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询出生日期的同学 不为空</span></span><br><span class="line"><span class="keyword">SELECT</span> `studentno`,`studentname` <span class="keyword">FROM</span> `student`</span><br><span class="line"><span class="keyword">WHERE</span> `borndate` <span class="keyword">IS</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询没有出生日期的同学  为空</span></span><br><span class="line"><span class="keyword">SELECT</span> `studentno`,`studentname` <span class="keyword">FROM</span> `student`</span><br><span class="line"><span class="keyword">WHERE</span> `borndate` <span class="keyword">IS</span> <span class="keyword">NULL</span>;</span><br></pre></td></tr></table></figure><h2 id="4-4-联表查询">4.4 联表查询</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- =========联表查询 join==========</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> student</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> <span class="keyword">result</span></span><br><span class="line"><span class="comment">-- 查询参加了考试的同学（学号，姓名，科目编号，分数）</span></span><br><span class="line"><span class="comment">/* 思路</span></span><br><span class="line"><span class="comment">1.分析需求，分析查询的字段来自哪些表（连接查询）</span></span><br><span class="line"><span class="comment">2.确定使用哪种连接查询？7种</span></span><br><span class="line"><span class="comment">3.确定交叉点（这两个表哪个数据是相同的）</span></span><br><span class="line"><span class="comment">4.判断的条件：学生表中studentno = 成绩表中studentno（这里用别名会方便很多）</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="comment">-- join on   连接查询</span></span><br><span class="line"><span class="comment">-- where     等值查询</span></span><br><span class="line"><span class="comment">-- inner join</span></span><br><span class="line"><span class="keyword">SELECT</span> s.studentno,studentname,subjectno,studentresult</span><br><span class="line"><span class="keyword">FROM</span> student <span class="keyword">AS</span> s</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> <span class="keyword">result</span> <span class="keyword">AS</span> r</span><br><span class="line"><span class="keyword">WHERE</span> s.studentno <span class="operator">=</span> r.studentn</span><br><span class="line"><span class="comment">-- right join</span></span><br><span class="line"><span class="keyword">SELECT</span> s.`studentno`,`studentname`,`studentname`,`studentresult`</span><br><span class="line"><span class="keyword">FROM</span> `student` s</span><br><span class="line"><span class="keyword">RIGHT</span> <span class="keyword">JOIN</span> `<span class="keyword">result</span>` r</span><br><span class="line"><span class="keyword">ON</span> r.`studentno` <span class="operator">=</span> s.`studentno`</span><br><span class="line"><span class="comment">-- left join</span></span><br><span class="line"><span class="keyword">SELECT</span> s.`studentno`,`studentname`,`studentname`,`studentresult`</span><br><span class="line"><span class="keyword">FROM</span> `student` s</span><br><span class="line"><span class="keyword">LEFT</span> <span class="keyword">JOIN</span> `<span class="keyword">result</span>` r</span><br><span class="line"><span class="keyword">ON</span> r.`studentno` <span class="operator">=</span> s.`studentno`</span><br></pre></td></tr></table></figure><p><font color = red>注意：right join和left join只能用on确定交叉点</font></p><ul><li><p>join on 连接查询</p><p>on是在临时表的生成时，不管on后面的条件为不为真，都会返回左表的记录，然后再通过条件进行覆盖条件为真的记录，而不为真的用null来代替</p></li><li><p>where 等值查询</p><p>where条件是在临时表生成好后再对临时表进行过滤的条件，这时已经没有left join的含义了，条件不为真的就全部过滤掉</p></li></ul><table><thead><tr><th>操作</th><th>描述</th></tr></thead><tbody><tr><td>inner join</td><td>两个表都要存在的数据，只取交集</td></tr><tr><td>left join</td><td>左表都有，右表可以没有。在右表中没有的数据，展示的属性数据用null替代或者过滤掉</td></tr><tr><td>right join</td><td>右表都有，左表可以没有。在左表中没有的数据，展示的属性数据用null替代或者过滤掉</td></tr></tbody></table><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 查询缺考的同学 先查出所有同学再通过条件筛选出缺考的学生</span></span><br><span class="line"><span class="keyword">SELECT</span> s.studentno,studentname,subjectno,studentresult</span><br><span class="line"><span class="keyword">FROM</span> student s <span class="keyword">LEFT</span> <span class="keyword">JOIN</span> <span class="keyword">result</span> r</span><br><span class="line"><span class="keyword">ON</span> s.studentno<span class="operator">=</span>r.studentno</span><br><span class="line"><span class="keyword">WHERE</span> `studentresult` <span class="keyword">IS</span> <span class="keyword">NULL</span>;</span><br><span class="line"><span class="comment">-- 思考题（查询参加考试的同学的信息：学号，学生姓名，科目名，分数）(三表查询)</span></span><br><span class="line"><span class="comment">/*思路</span></span><br><span class="line"><span class="comment">1.分析需求，分析查询的字段来自哪些表，student，result，subject（连接查询）</span></span><br><span class="line"><span class="comment">2.确定使用左连接找出参加考试同学的信息，然后再通过交集连接把课程名打印出来</span></span><br><span class="line"><span class="comment">3.确定交叉点 studentno，subjectno</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">SELECT</span> s.`studentno`,`studentname`,`subjectname`,`studentresult`</span><br><span class="line"><span class="keyword">FROM</span> `student` s</span><br><span class="line"><span class="keyword">RIGHT</span> <span class="keyword">JOIN</span> `<span class="keyword">result</span>` r</span><br><span class="line"><span class="keyword">ON</span> r.`studentno` <span class="operator">=</span> s.`studentno`</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> `subject` sub</span><br><span class="line"><span class="keyword">ON</span> sub.`subjectno` <span class="operator">=</span> r.`subjectno`</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> s.`studentno`,`studentname`,`gradename`,`studentresult`</span><br><span class="line"><span class="keyword">FROM</span> `student` s</span><br><span class="line"><span class="keyword">LEFT</span> <span class="keyword">JOIN</span> `<span class="keyword">result</span>` r</span><br><span class="line"><span class="keyword">ON</span> r.`studentno` <span class="operator">=</span> s.`studentno`</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> `grade` sub</span><br><span class="line"><span class="keyword">ON</span> sub.`gradeid` <span class="operator">=</span> s.`gradeid`</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">-- 查询数据 select ...</span><br><span class="line">-- 从哪几个表中查 from 表名XXX join 连接的表XXX on 交叉的条件</span><br><span class="line">-- 假设存在一种多张表查询，一步一步来，先查询两张表然后再慢慢增加查询</span><br><span class="line">-- from a inner join b</span><br><span class="line">-- from a left join b</span><br><span class="line">-- from a right join b</span><br></pre></td></tr></table></figure><p>三表查询的注意事项，关于谁作为左右表的:</p><p><font color = red ><strong>左右表就是查询比对的底层表</strong></font></p><p>当第一个表作为左表时，第三个表要有作为左表的相同字段，在第一个表和第二个表查询后，再使用inner join交叉查询</p><p>当第一个表作为右表时，第三个表要有作为右表的相同字段，在第一个表和第二个表查询后，再使用inner join交叉查询</p><blockquote><p>自连接</p></blockquote><p>自己的表和自己的表连接，核心：<strong>一张表拆为两种一样的表即可</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- ==========自连接============</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `category`(</span><br><span class="line">   `id` <span class="type">INT</span>(<span class="number">10</span>) UNSIGNED <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT COMMENT <span class="string">&#x27;唯一id&#x27;</span>,</span><br><span class="line">   `pid` <span class="type">INT</span>(<span class="number">10</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;父级id&#x27;</span>,</span><br><span class="line">   `name` <span class="type">VARCHAR</span>(<span class="number">50</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;名称&#x27;</span>,</span><br><span class="line">   <span class="keyword">PRIMARY</span> KEY(`id`)</span><br><span class="line">)ENGINE <span class="operator">=</span>INNODB AUTO_INCREMENT<span class="operator">=</span><span class="number">9</span> <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> category (id,pid,`name`)</span><br><span class="line"><span class="keyword">VALUES</span> (<span class="number">2</span>,<span class="number">1</span>,<span class="string">&#x27;信息技术&#x27;</span>),(<span class="number">3</span>,<span class="number">1</span>,<span class="string">&#x27;软件开发&#x27;</span>),(<span class="number">4</span>,<span class="number">3</span>,<span class="string">&#x27;数据库&#x27;</span>),</span><br><span class="line">(<span class="number">5</span>,<span class="number">1</span>,<span class="string">&#x27;美术设计&#x27;</span>),(<span class="number">6</span>,<span class="number">3</span>,<span class="string">&#x27;web开发&#x27;</span>),(<span class="number">7</span>,<span class="number">5</span>,<span class="string">&#x27;ps技术&#x27;</span>),(<span class="number">8</span>,<span class="number">2</span>,<span class="string">&#x27;办公信息&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询父子信息：把一张表看成两个一模一样的表</span></span><br><span class="line"><span class="keyword">SELECT</span> a.`categoryName` 父栏目,b.`categoryName` 子栏目</span><br><span class="line"><span class="keyword">FROM</span> `category` a,</span><br><span class="line">`category` b</span><br><span class="line"><span class="keyword">WHERE</span> a.`categoryid` <span class="operator">=</span> b.`pid`</span><br></pre></td></tr></table></figure><p>查询练习：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 查询学员所属的年级（学员，学生的姓名，年级名称）</span></span><br><span class="line"><span class="keyword">SELECT</span> `studentno`,`studentname`,`gradename`</span><br><span class="line"><span class="keyword">FROM</span> student s</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> grade g</span><br><span class="line"><span class="keyword">ON</span> s.gradeid<span class="operator">=</span>g.gradeid</span><br><span class="line"><span class="comment">-- 查询科目所属的年级（科目名称，年级名称）</span></span><br><span class="line"><span class="keyword">SELECT</span> `subjectname`,`gradename`</span><br><span class="line"><span class="keyword">FROM</span> `subject` sub</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> grade g</span><br><span class="line"><span class="keyword">ON</span> sub.gradeid<span class="operator">=</span>g.gradeid</span><br><span class="line"><span class="comment">-- 查询了参加高等数学-1 考试的同学信息（学号，学生姓名，科目名，分数）</span></span><br><span class="line"><span class="keyword">SELECT</span> s.`studentno`,`studentname`,`subjectname`,`studentresult`</span><br><span class="line"><span class="keyword">FROM</span> student s</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> <span class="keyword">result</span> r</span><br><span class="line"><span class="keyword">ON</span> s.studentno<span class="operator">=</span>r.studentno</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> `subject` sub</span><br><span class="line"><span class="keyword">ON</span> r.`subjectno`<span class="operator">=</span>sub.`subjectno`</span><br><span class="line"><span class="keyword">WHERE</span> `subjectname`<span class="operator">=</span><span class="string">&#x27;高等数学-1&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="4-5-分页和排序">4.5 分页和排序</h2><blockquote><p>排序</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- =======分页 limit和排序 order by=========</span></span><br><span class="line"><span class="comment">-- 排序：升序ASC，降序DESC</span></span><br><span class="line"><span class="comment">-- 语法：order by 通过哪个字段进行排序，怎么排（asc，desc）</span></span><br><span class="line"><span class="comment">-- 查询的结果根据成绩排序</span></span><br><span class="line"><span class="keyword">SELECT</span> s.`studentno`,`studentname`,`subjectname`,`studentresult`</span><br><span class="line"><span class="keyword">FROM</span> student s</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> <span class="keyword">result</span> r</span><br><span class="line"><span class="keyword">ON</span> s.studentno<span class="operator">=</span>r.studentno</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> `subject` sub</span><br><span class="line"><span class="keyword">ON</span> r.`subjectno`<span class="operator">=</span>sub.`subjectno`</span><br><span class="line"><span class="keyword">WHERE</span> `subjectname`<span class="operator">=</span><span class="string">&#x27;高等数学-1&#x27;</span></span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> `studentresult` <span class="keyword">ASC</span></span><br></pre></td></tr></table></figure><blockquote><p>分页</p></blockquote><ul><li>为什么要分页<ul><li>缓解数据库压力，给人的体验更好，瀑布流（例如抖音，一直往下刷）</li><li>分页，每页只显示五条数据</li><li>语法：limit 记录下标(数据库第一个数据的下标是0),页面大小</li><li>limit 0,5  从1开始，展示5个记录</li><li>limit 0,5  1~5</li><li>limit 5,5  6~10</li></ul></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> s.`studentno`,`studentname`,`subjectname`,`studentresult`</span><br><span class="line"><span class="keyword">FROM</span> student s</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> <span class="keyword">result</span> r</span><br><span class="line"><span class="keyword">ON</span> s.studentno<span class="operator">=</span>r.studentno</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> `subject` sub</span><br><span class="line"><span class="keyword">ON</span> r.`subjectno`<span class="operator">=</span>sub.`subjectno`</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> `studentresult` <span class="keyword">ASC</span></span><br><span class="line">LIMIT <span class="number">5</span>,<span class="number">5</span></span><br><span class="line"><span class="comment">-- 第一页 limit 0,5   (1-1)*5</span></span><br><span class="line"><span class="comment">-- 第二页 limit 5,5   (2-1)*5</span></span><br><span class="line"><span class="comment">-- 第三页 limit 10,5  (3-1)*5</span></span><br><span class="line"><span class="comment">-- 第n页  limit ~,5   (n-1)*pageSize,pageSize</span></span><br><span class="line"><span class="comment">-- 【pageSize：页面大小】</span></span><br><span class="line"><span class="comment">-- 【(n-1)*pageSize:起始值】</span></span><br><span class="line"><span class="comment">-- 【n: 当前页】</span></span><br><span class="line"><span class="comment">-- 【总页数= 数据总数/页面大小】（向上取整）</span></span><br><span class="line"><span class="comment">-- 思考</span></span><br><span class="line"><span class="comment">-- 查询java-1 课程成绩排名第一的学生，并且分数要大于80的学生信息(学号，姓名，课程名称，分数)</span></span><br><span class="line"><span class="keyword">SELECT</span> s.`studentno`,`studentname`,`subjectname`,`studentresult`</span><br><span class="line"><span class="keyword">FROM</span> student s</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> <span class="keyword">result</span> r</span><br><span class="line"><span class="keyword">ON</span> s.studentno<span class="operator">=</span>r.studentno</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> `subject` sub</span><br><span class="line"><span class="keyword">ON</span> r.`subjectno`<span class="operator">=</span>sub.`subjectno`</span><br><span class="line"><span class="keyword">WHERE</span> `subjectname`<span class="operator">=</span><span class="string">&#x27;java-1&#x27;</span> <span class="keyword">AND</span> `studentresult`<span class="operator">&gt;=</span><span class="number">60</span></span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> `studentresult` <span class="keyword">DESC</span></span><br><span class="line">LIMIT <span class="number">0</span>,<span class="number">1</span></span><br></pre></td></tr></table></figure><p><font color = red>语法：limit（起始下标，pageSize）</font></p><h2 id="4-6-子查询">4.6 子查询</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- ===========where=========</span></span><br><span class="line"><span class="comment">-- 1.查询 高等数学-1 的所有的考试结果（学号，科目编号，成绩）按成绩降序排列</span></span><br><span class="line"><span class="comment">-- 方式一：使用联表查询</span></span><br><span class="line"><span class="keyword">SELECT</span> `studentno`,r.`subjectno`,`studentresult`</span><br><span class="line"><span class="keyword">FROM</span> `<span class="keyword">result</span>` r</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> `subject` sub</span><br><span class="line"><span class="keyword">ON</span> r.subjectno<span class="operator">=</span>sub.subjectno</span><br><span class="line"><span class="keyword">WHERE</span> `subjectname`<span class="operator">=</span><span class="string">&#x27;高等数学-1&#x27;</span></span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> `studentresult` <span class="keyword">DESC</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 方式二：使用子查询（由里及外）</span></span><br><span class="line"><span class="comment">-- 查询所有学生的学号等信息，然后通过子查询再筛选出高等数学-1的学生信息</span></span><br><span class="line"><span class="keyword">SELECT</span> studentno,`subjectno`,`studentresult`</span><br><span class="line"><span class="keyword">FROM</span> <span class="keyword">result</span></span><br><span class="line"><span class="keyword">WHERE</span> `subjectno`<span class="operator">=</span>(</span><br><span class="line"><span class="comment">-- 查询高等数学-1的科目编号</span></span><br><span class="line"><span class="keyword">SELECT</span> `subjectno` <span class="keyword">FROM</span> `subject` <span class="keyword">WHERE</span> `subjectname`<span class="operator">=</span><span class="string">&#x27;高等数学-1&#x27;</span></span><br><span class="line">)</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> `studentresult` <span class="keyword">DESC</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 练习：</span></span><br><span class="line"><span class="comment">-- 1.分数不小于60分的学生的学号和姓名(使用联表方式)</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">DISTINCT</span> s.studentno,studentname</span><br><span class="line"><span class="keyword">FROM</span> student s</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> <span class="keyword">result</span> r</span><br><span class="line"><span class="keyword">ON</span> s.studentno<span class="operator">=</span>r.studentno</span><br><span class="line"><span class="keyword">WHERE</span> studentresult <span class="operator">&gt;=</span> <span class="number">60</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">-- 2.在这个基础上增加一个科目，高等数学-2</span></span><br><span class="line"><span class="comment">SELECT DISTINCT s.studentno,studentname</span></span><br><span class="line"><span class="comment">FROM student s</span></span><br><span class="line"><span class="comment">INNER JOIN result r</span></span><br><span class="line"><span class="comment">ON s.studentno=r.studentno</span></span><br><span class="line"><span class="comment">WHERE studentresult &gt;= 60 AND studentname=&#x27;高等数学-2&#x27;</span></span><br><span class="line"><span class="comment">-- 错误，因为还要再联一个subject表才行，所以用子查询会方便很多</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 3.正确方式，加一个联表(联了三个表)效率较子查询来说要低一些</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">DISTINCT</span> s.studentno,studentname</span><br><span class="line"><span class="keyword">FROM</span> student s</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> <span class="keyword">result</span> r</span><br><span class="line"><span class="keyword">ON</span> s.studentno<span class="operator">=</span>r.studentno</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> `subject` sub</span><br><span class="line"><span class="keyword">ON</span> r.subjectno<span class="operator">=</span>sub.subjectno</span><br><span class="line"><span class="keyword">WHERE</span> studentresult <span class="operator">&gt;=</span> <span class="number">60</span> <span class="keyword">AND</span> subjectname<span class="operator">=</span><span class="string">&#x27;高等数学-2&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 4.子查询方式。在这个基础上增加一个科目，高等数学-2</span></span><br><span class="line"><span class="comment">-- 子查询 查询高等数学-2的编号</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">DISTINCT</span> s.`studentno`,`studentname`</span><br><span class="line"><span class="keyword">FROM</span> `student` s</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> `<span class="keyword">result</span>` r</span><br><span class="line"><span class="keyword">ON</span> s.`studentno` <span class="operator">=</span> r.`studentno`</span><br><span class="line"><span class="keyword">WHERE</span> `studentresult` <span class="operator">&gt;</span> <span class="number">60</span> <span class="keyword">AND</span> subjectno <span class="operator">=</span> (</span><br><span class="line">  <span class="keyword">SELECT</span> subjectno <span class="keyword">FROM</span> `subject`</span><br><span class="line">  <span class="keyword">WHERE</span> `subjectname` <span class="operator">=</span> <span class="string">&#x27;高等数学-1&#x27;</span></span><br><span class="line">)</span><br><span class="line"><span class="comment">-- 5.通过子查询再简化，把联表操作去掉</span></span><br><span class="line"><span class="comment">-- 再次改造（由里及外）</span></span><br><span class="line"><span class="keyword">SELECT</span> studentno , studentname <span class="keyword">FROM</span> student <span class="keyword">WHERE</span> studentno <span class="keyword">IN</span>(</span><br><span class="line">  <span class="keyword">SELECT</span> studentno <span class="keyword">FROM</span> <span class="keyword">result</span> <span class="keyword">WHERE</span> studentresult <span class="operator">&gt;</span> <span class="number">60</span> <span class="keyword">AND</span> subjectno <span class="operator">=</span> (</span><br><span class="line">      <span class="keyword">SELECT</span> subjectno <span class="keyword">FROM</span> `subject` <span class="keyword">WHERE</span> `subjectname` <span class="operator">=</span> <span class="string">&#x27;高等数学-1&#x27;</span></span><br><span class="line">  )</span><br><span class="line">)</span><br><span class="line"><span class="comment">-- 练习：查询java-2 前5名同学的成绩的信息（学号，姓名，分数） 使用子查询</span></span><br><span class="line"><span class="keyword">SELECT</span> s.`studentno`,`studentname`,`studentresult`</span><br><span class="line"><span class="keyword">FROM</span> student s</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> <span class="keyword">result</span> r</span><br><span class="line"><span class="keyword">ON</span> s.studentno<span class="operator">=</span>r.studentno</span><br><span class="line"><span class="keyword">WHERE</span> r.subjectno <span class="operator">=</span> (</span><br><span class="line"><span class="keyword">SELECT</span> subjectno <span class="keyword">FROM</span> `subject` <span class="keyword">WHERE</span> subjectname<span class="operator">=</span> <span class="string">&#x27;java-2&#x27;</span></span><br><span class="line">)</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> `studentresult` <span class="keyword">DESC</span></span><br><span class="line">LIMIT <span class="number">0</span>,<span class="number">5</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">SELECT studentno ,studentname, FROM student WHERE studentno IN(</span></span><br><span class="line"><span class="comment">  SELECT studentno,studentresult FROM result WHERE subjectno = (</span></span><br><span class="line"><span class="comment">     SELECT subjectno FROM `subject` WHERE subjectname = &#x27;高等数学-1&#x27;</span></span><br><span class="line"><span class="comment">  )</span></span><br><span class="line"><span class="comment">)*/</span></span><br></pre></td></tr></table></figure><h2 id="4-7-分组和过滤">4.7 分组和过滤</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 查询不同课程的平均分，最高分，最低分，并且平均分大于80</span></span><br><span class="line"><span class="comment">-- 核心（根据不同的课程分组）</span></span><br><span class="line"><span class="keyword">SELECT</span> `subjectname` ,<span class="built_in">AVG</span>(`studentresult`) 平均分,<span class="built_in">MAX</span>(`studentresult`) 最高分,<span class="built_in">MIN</span>(`studentresult`) 最低分</span><br><span class="line"><span class="keyword">FROM</span> <span class="keyword">result</span> r</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> `subject` sub</span><br><span class="line"><span class="keyword">ON</span> r.`subjectno` <span class="operator">=</span> sub.`subjectno`</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> `subjectname`</span><br><span class="line"><span class="keyword">HAVING</span> 平均分 <span class="operator">&gt;</span> <span class="number">80</span></span><br><span class="line"><span class="comment">-- having 用于分组后过滤</span></span><br></pre></td></tr></table></figure><h1>5. MySQL函数</h1><p>官网：<a href="https://dev.mysql.com/doc/refman/5.7/en/functions.html">https://dev.mysql.com/doc/refman/5.7/en/functions.html</a></p><h2 id="5-1-通用函数（不常用）">5.1 通用函数（不常用）</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- ===========常用函数==========</span></span><br><span class="line"><span class="comment">-- 数学运算</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">ABS</span>(<span class="number">-8</span>)    <span class="comment">-- 绝对值</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">CEILING</span>(<span class="number">9.4</span>) <span class="comment">-- 向上取整</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">FLOOR</span>(<span class="number">9.4</span>) <span class="comment">-- 向下取整</span></span><br><span class="line"><span class="keyword">SELECT</span> RAND() <span class="comment">-- 返回一个0~1之间的随机数</span></span><br><span class="line"><span class="keyword">SELECT</span> SIGN(<span class="number">0</span>) <span class="comment">-- 判断一个数的符号 0返回0 负数返回-1，正数返回 1 </span></span><br><span class="line"><span class="comment">-- 字符串函数</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">CHAR_LENGTH</span>(<span class="string">&#x27;即使再小的帆也能远航&#x27;</span>) <span class="comment">-- 字符串长度</span></span><br><span class="line"><span class="keyword">SELECT</span> CONCAT(<span class="string">&#x27;我&#x27;</span>,<span class="string">&#x27;爱&#x27;</span>,<span class="string">&#x27;wlh&#x27;</span>) <span class="comment">-- 拼接字符串</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">INSERT</span>(<span class="string">&#x27;我爱编程HelloWord&#x27;</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="string">&#x27;超级热爱&#x27;</span>) <span class="comment">-- 插入，从某个位置开始替换某个长度</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">LOWER</span>(<span class="string">&#x27;KuangShen&#x27;</span>) <span class="comment">-- 全小写</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">UPPER</span>(<span class="string">&#x27;KuangShen&#x27;</span>) <span class="comment">-- 全大写</span></span><br><span class="line"><span class="keyword">SELECT</span> INSTR(<span class="string">&#x27;kuangShen&#x27;</span>,<span class="string">&#x27;h&#x27;</span>)<span class="comment">-- 返回第一次出现的字串的索引</span></span><br><span class="line"><span class="keyword">SELECT</span> REPLACE(<span class="string">&#x27;每天都是坚持就能成功&#x27;</span>,<span class="string">&#x27;坚持&#x27;</span>,<span class="string">&#x27;努力&#x27;</span>)<span class="comment">-- 替换出现的指定字符串</span></span><br><span class="line"><span class="keyword">SELECT</span> SUBSTR(<span class="string">&#x27;每天都是坚持就能成功&#x27;</span>,<span class="number">5</span>,<span class="number">2</span>) <span class="comment">-- 返回指定的字符串（源字符串，截取位置，截取的长度）</span></span><br><span class="line"><span class="keyword">SELECT</span> REVERSE(<span class="string">&#x27;每天都是坚持就能成功&#x27;</span>) <span class="comment">-- 反转</span></span><br><span class="line"><span class="comment">-- 查询姓周的同学，替换为邹</span></span><br><span class="line"><span class="comment">-- 当有名字里有多个周的时候用insert方法</span></span><br><span class="line"><span class="keyword">SELECT</span> REPLACE(studentname,<span class="string">&#x27;周&#x27;</span>,<span class="string">&#x27;邹&#x27;</span>)<span class="keyword">FROM</span> student</span><br><span class="line"><span class="keyword">WHERE</span> studentname <span class="keyword">LIKE</span> <span class="string">&#x27;周%&#x27;</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">INSERT</span>(studentname,<span class="number">1</span>,<span class="number">1</span>,<span class="string">&#x27;邹&#x27;</span>)<span class="keyword">FROM</span> student</span><br><span class="line"><span class="keyword">WHERE</span> studentname <span class="keyword">LIKE</span> <span class="string">&#x27;周%&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 时间和日期函数（记住！）</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">CURRENT_DATE</span>() <span class="comment">-- 获取当前日期</span></span><br><span class="line"><span class="keyword">SELECT</span> CURDATE() <span class="comment">-- 获取当前日期</span></span><br><span class="line"><span class="keyword">SELECT</span> NOW() <span class="comment">-- 获取当前的时间有时分秒</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">LOCALTIME</span>() <span class="comment">-- 获取本地时间</span></span><br><span class="line"><span class="keyword">SELECT</span> SYSDATE() <span class="comment">-- 获取系统时间</span></span><br><span class="line"><span class="comment">-- 年月日时分秒</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">YEAR</span>(NOW())<span class="comment">-- 年</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">MONTH</span>(NOW())<span class="comment">-- 月</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">DAY</span>(NOW())<span class="comment">-- 日</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">HOUR</span>(NOW())<span class="comment">-- 小时</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">MINUTE</span>(NOW())<span class="comment">-- 分钟</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">SECOND</span>(NOW())<span class="comment">-- 秒</span></span><br><span class="line"><span class="comment">-- 获取系统信息</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">SYSTEM_USER</span>() <span class="comment">-- root@localhost</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">USER</span>()<span class="comment">-- root@localhost</span></span><br><span class="line"><span class="keyword">SELECT</span> VERSION() <span class="comment">-- 查了MySQL版本号</span></span><br></pre></td></tr></table></figure><h2 id="5-2-聚合函数-常用">5.2 聚合函数(常用)</h2><table><thead><tr><th>函数名称</th><th>描述</th></tr></thead><tbody><tr><td>count()****</td><td><strong>计数</strong></td></tr><tr><td>sum()</td><td>求和</td></tr><tr><td>avg()</td><td>平均值</td></tr><tr><td>max()</td><td>最大值</td></tr><tr><td>min()</td><td>最小值</td></tr><tr><td>……</td><td>……</td></tr></tbody></table><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- ==========聚合函数==========</span></span><br><span class="line"><span class="comment">-- 统计表中的数据（想查询一个表中有多少个记录，就使用这个count()）</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">COUNT</span>(`address`) <span class="keyword">FROM</span> student; <span class="comment">-- count(字段)，会忽略所有的null值</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">COUNT</span>(<span class="operator">*</span>) <span class="keyword">FROM</span> student; <span class="comment">-- count(*) 不会忽略null值，本质  计算行数</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">COUNT</span>(<span class="number">1</span>) <span class="keyword">FROM</span> student;<span class="comment">-- count(1)  不会忽略null值，本质  计算行数</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">SUM</span>(`studentresult`) <span class="keyword">AS</span> 总分 <span class="keyword">FROM</span> <span class="keyword">result</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">AVG</span>(studentresult) <span class="keyword">AS</span> 平均分 <span class="keyword">FROM</span> <span class="keyword">result</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">MAX</span>(studentresult) <span class="keyword">AS</span> 最高分 <span class="keyword">FROM</span> <span class="keyword">result</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">MIN</span>(studentresult) <span class="keyword">AS</span> 最低分 <span class="keyword">FROM</span> <span class="keyword">result</span></span><br></pre></td></tr></table></figure><h2 id="5-3-数据库级别的MD5加密-扩展">5.3 数据库级别的MD5加密(扩展)</h2><p>什么是MD5？</p><p>主要是增强算法复杂度和不可逆性</p><p>MD5不可逆，具体的值的MD5是一样的</p><p>MD5破解网站的原理，背后有一个字典，MD5加密后的值，加密的前值</p><p>password()函数也是一个加密不可逆的加密方式</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- ==========测试加密MD5========</span></span><br><span class="line"><span class="comment">-- 加密后不可逆！！</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span>`testmd5`(</span><br><span class="line">    `id` <span class="type">INT</span>(<span class="number">4</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">    `name` <span class="type">VARCHAR</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">    `pwd` <span class="type">VARCHAR</span>(<span class="number">50</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">    <span class="keyword">PRIMARY</span> KEY(`id`)</span><br><span class="line">)ENGINE<span class="operator">=</span>INNODB <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8</span><br><span class="line"><span class="comment">-- 明文密码（能看见的密码）</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `testmd5` <span class="keyword">VALUES</span>(<span class="number">1</span>,<span class="string">&#x27;Tang&#x27;</span>,<span class="string">&#x27;123456&#x27;</span>),(<span class="number">2</span>,<span class="string">&#x27;Wen&#x27;</span>,<span class="string">&#x27;123456&#x27;</span>),(<span class="number">3</span>,<span class="string">&#x27;xiao&#x27;</span>,<span class="string">&#x27;123456&#x27;</span>)</span><br><span class="line"><span class="comment">-- 加密（对id为1的pwd记录加密一次）</span></span><br><span class="line"><span class="keyword">UPDATE</span> testmd5 <span class="keyword">SET</span> pwd<span class="operator">=</span>MD5(pwd) <span class="keyword">WHERE</span> id<span class="operator">=</span><span class="number">1</span></span><br><span class="line"><span class="comment">-- 加密全部的密码</span></span><br><span class="line"><span class="keyword">UPDATE</span> testmd5 <span class="keyword">SET</span> pwd<span class="operator">=</span>MD5(pwd)</span><br><span class="line"><span class="comment">-- 插入的时候加密！</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> testmd5 <span class="keyword">VALUES</span>(<span class="number">4</span>,<span class="string">&#x27;zu&#x27;</span>,MD5(<span class="string">&#x27;123456&#x27;</span>))</span><br><span class="line"><span class="comment">-- 如何校验：将用户传递进来的密码进行md5加密，然后比对加密后的值</span></span><br><span class="line"><span class="comment">-- 当用户要登录查询用户信息时，如何进行验证：用户登录输入的密码加密后， 与注册表里加密后的密码进行比对就ok了</span></span><br><span class="line"><span class="comment">-- 注意加密的次数，对加密后再加密就是加密了两次，与加密一次的值不一样的</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> testmd5 <span class="keyword">WHERE</span> `name`<span class="operator">=</span><span class="string">&#x27;Wen&#x27;</span> <span class="keyword">AND</span> pwd<span class="operator">=</span>MD5(<span class="string">&#x27;123456&#x27;</span>)</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> testmd5 <span class="keyword">WHERE</span> `name`<span class="operator">=</span><span class="string">&#x27;Tang&#x27;</span> <span class="keyword">AND</span> pwd<span class="operator">=</span>MD5(MD5(<span class="string">&#x27;123456&#x27;</span>))</span><br></pre></td></tr></table></figure><h1>6. 事务</h1><h2 id="6-1-什么是事务">6.1 什么是事务</h2><p>事务：就是一些增删改查等等操作</p><p>目的：设置事务是为了保证一组事务要么都成功，要么都失败</p><hr><ol><li>SQL执行 A给B转账 A 1000 —&gt;200 B 200</li><li>SQL执行 B收到A的钱 A 800 B 400</li></ol><hr><p>将一组SQL放在一个批次中去执行</p><blockquote><p><font color = orifen>事务原则: ACID原则： 原子性，一致性，隔离性，持久性</font></p></blockquote><p>可供参考博客链接： <a href="https://blog.csdn.net/dengjili/article/details/82468576">(20条消息) 事务ACID理解_dengjili的博客-CSDN博客_事务acid</a></p><p><strong>原子性（Atomicity）</strong></p><p>要么都成功，要么都失败</p><p><strong>一致性（Consistency）</strong></p><p>事务前后的数据完整性要保持一致</p><p><strong>持久性（Durability）</strong>——事务提交</p><p>事务一旦提交则不可逆，被持久化到数据库中</p><p><strong>隔离性（Isolation）</strong></p><p>事务的隔离性是多个用户并发访问数据库时，数据库为每一个用户开启的事务，不能被其他事务的操作数据所干扰，多个并发事务之间要相互隔离。</p><blockquote><p><font color = blue>隔离所导致的一些问题</font></p></blockquote><p><strong>脏读：</strong></p><p>指一个事务读取了另一个事务未提交的数据</p><p><strong>不可重复读：</strong></p><p>在一个事务内读取表中的某一行数据，多次读取结果不同。（这个不一定是错误，只是某些场合不对）</p><p><strong>虚读(幻读)</strong></p><p>是指在一个事务内读取到了别的事务插入的数据，导致前后读取不一致</p><h2 id="6-2-操作事务方式">6.2 操作事务方式</h2><blockquote><p>执行事务</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- MySQL是默认开启事务自动提交的</span></span><br><span class="line"><span class="keyword">SET</span> autocommit<span class="operator">=</span><span class="number">0</span> <span class="comment">-- 关闭</span></span><br><span class="line"><span class="keyword">SET</span> autocommit<span class="operator">=</span><span class="number">1</span> <span class="comment">-- 开启（默认的）</span></span><br><span class="line"><span class="comment">-- 手动处理事务（事务：对数据库进行增删改查等操作）</span></span><br><span class="line"><span class="comment">-- 事务开启</span></span><br><span class="line"><span class="keyword">START</span> TRANSACTION <span class="comment">-- 标记一个事务的开始，从这个之后的sql都在同一个事务内</span></span><br><span class="line"><span class="comment">-- 用start直接开启手动模式，写完事务就直接commit提交事务，不需要语法设置</span></span><br><span class="line"><span class="keyword">INSERT</span> xx</span><br><span class="line"><span class="keyword">INSERT</span> xx</span><br><span class="line"><span class="comment">-- 提交：提交后就是持久化到数据库中(成功)</span></span><br><span class="line"><span class="keyword">COMMIT</span></span><br><span class="line"><span class="comment">-- 回滚：回到原来的样子（失败）</span></span><br><span class="line"><span class="keyword">ROLLBACK</span></span><br><span class="line"><span class="comment">-- 事务结束`    </span></span><br><span class="line"><span class="keyword">SET</span> autocommit<span class="operator">=</span><span class="number">1</span> <span class="comment">-- 开启自动提交</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/* 了解</span></span><br><span class="line"><span class="comment">SAVEPOINT 保存点 名 -- 设置一个事务的保存点</span></span><br><span class="line"><span class="comment">ROLLBACK TO SAVEPOINT 保存点 名 -- 回滚到保存点</span></span><br><span class="line"><span class="comment">RELEASE SAVEPOINT 保存点 名 -- 撤销保存点</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><p><strong>MySQL 默认开启事务自动提交模式，即除非显式的开启事务（BEGIN 或 START TRANSACTION），否则每条 SOL 语句都会被当做一个单独的事务自动执行。但有些情况下，我们需要关闭事务自动提交来保证数据的一致性。</strong></p><blockquote><p>模拟场景</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 转账  1.创建银行数据库</span></span><br><span class="line"><span class="keyword">CREATE</span> DATABASE shop <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8 <span class="keyword">COLLATE</span> utf8_general_ci</span><br><span class="line">USE shop</span><br><span class="line"><span class="comment">-- 创建表</span></span><br><span class="line"><span class="comment">-- DECIMAL(9,2)代表：9位数，其中小数位是两位</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `account`(</span><br><span class="line">    `id` <span class="type">INT</span>(<span class="number">5</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT,</span><br><span class="line">    `name` <span class="type">VARCHAR</span>(<span class="number">30</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">    `money` <span class="type">DECIMAL</span>(<span class="number">9</span>,<span class="number">2</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">    <span class="keyword">PRIMARY</span> KEY(`id`)</span><br><span class="line">)ENGINE<span class="operator">=</span>INNODB <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8</span><br><span class="line"><span class="comment">-- 添加数据</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> account(`name`,`money`)</span><br><span class="line"><span class="keyword">VALUES</span>(<span class="string">&#x27;A&#x27;</span>,<span class="number">2000</span>),(<span class="string">&#x27;B&#x27;</span>,<span class="number">10000</span>)</span><br><span class="line"><span class="comment">-- 模拟转账事务</span></span><br><span class="line"><span class="keyword">SET</span> autocommit<span class="operator">=</span><span class="number">0</span>; <span class="comment">-- 关闭自动提交</span></span><br><span class="line"><span class="keyword">START</span> TRANSACTION <span class="comment">-- 开启一个事务（一组事务）</span></span><br><span class="line"><span class="keyword">UPDATE</span> account <span class="keyword">SET</span> money<span class="operator">=</span>money<span class="number">-500</span> <span class="keyword">WHERE</span> `name`<span class="operator">=</span><span class="string">&#x27;A&#x27;</span> <span class="comment">-- A减500</span></span><br><span class="line"><span class="keyword">UPDATE</span> account <span class="keyword">SET</span> money<span class="operator">=</span>money<span class="operator">+</span><span class="number">500</span> <span class="keyword">WHERE</span> `name`<span class="operator">=</span><span class="string">&#x27;B&#x27;</span> <span class="comment">-- B加500</span></span><br><span class="line"><span class="keyword">COMMIT</span>;<span class="comment">-- 提交事务，就被持久化了</span></span><br><span class="line"><span class="keyword">ROLLBACK</span>;<span class="comment">-- 回滚，回到事务前的数据</span></span><br><span class="line"><span class="keyword">SET</span> autocommit <span class="operator">=</span> <span class="number">1</span>;<span class="comment">-- 恢复自动提交</span></span><br></pre></td></tr></table></figure><h1>7. 索引</h1><blockquote><p>MySQL官方对索引的定义为：<strong>索引（index）是帮助MySQL高效获取数据的数据结构</strong></p><p>提取句子主干，就可以得到索引的本质，索引是数据结构</p></blockquote><p><a href="http://blog.codinglabs.org/articles/theory-of-mysql-index.html">MySQL索引背后的数据结构及算法原理</a></p><h2 id="7-1-索引的分类">7.1 索引的分类</h2><blockquote><p>在一个表中，不能设置多个主键索引，可以设置多个唯一键索引</p></blockquote><ul><li>主键索引（primary key）<ul><li>唯一的标识，主键不可重复，只能有一个列作为主键</li></ul></li><li>唯一索引（unique key）<ul><li>避免重复的列数据出现，值唯一，可以重复—&gt;也就是说可以设置多个唯一索引</li></ul></li><li>常规索引（key/index）<ul><li>默认的，index，key关键字来设置</li></ul></li><li>全文索引（fulltext）<ul><li>在特定的数据库引擎下才有，MYISAM</li><li>快速定位数据</li></ul></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 索引的使用</span></span><br><span class="line"><span class="comment">-- 1.在创建表的时候给字段增加索引（第一种添加索引方式）</span></span><br><span class="line"><span class="comment">-- 2.创建完毕后，增加索引</span></span><br><span class="line"><span class="comment">-- 显示所有的索引信息</span></span><br><span class="line"><span class="keyword">SHOW</span> INDEX <span class="keyword">FROM</span> student</span><br><span class="line"><span class="comment">-- 第二种添加索引方式：增加一个全文索引(索引名) 列名</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> school.`student`<span class="keyword">ADD</span> FULLTEXT INDEX studentname(studentname);</span><br><span class="line"><span class="comment">-- explain 分析sql执行的状况</span></span><br><span class="line">EXPLAIN <span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> student <span class="comment">-- 非全文索引(rows返回你查了多少行的数据，相当于检查了这条SQL的效率)</span></span><br><span class="line"><span class="comment">-- 全文索引，一般用于很多很多数据的时候</span></span><br><span class="line">EXPLAIN <span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> student <span class="keyword">WHERE</span> <span class="keyword">MATCH</span>(studentname)AGAINST(<span class="string">&#x27;刘&#x27;</span>)</span><br></pre></td></tr></table></figure><p>添加索引的方式：</p><ol><li>在创建表的时候给字段增加索引（第一种添加索引方式）</li><li>第二种添加索引方式：增加一个全文索引(索引名) 列名<br>ALTER TABLE school.<code>student</code>ADD FULLTEXT INDEX studentname(studentname);</li><li>添加索引 命名格式：id <em>表名</em> 字段名<br>CREATE INDEX 索引名 ON 表(字段)</li></ol><h2 id="7-2-测试索引">7.2 测试索引</h2><p>插入100 0000条数据</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `app_user`(</span><br><span class="line">    `id` <span class="type">BIGINT</span>(<span class="number">20</span>) UNSIGNED <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT,</span><br><span class="line">    `name` <span class="type">VARCHAR</span>(<span class="number">50</span>) <span class="keyword">DEFAULT</span> <span class="string">&#x27;&#x27;</span> COMMENT <span class="string">&#x27;用户昵称&#x27;</span>,</span><br><span class="line">    `email`<span class="type">VARCHAR</span>(<span class="number">50</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;用户邮箱&#x27;</span>,</span><br><span class="line">    `phone`<span class="type">VARCHAR</span>(<span class="number">20</span>) <span class="keyword">DEFAULT</span> <span class="string">&#x27;&#x27;</span> COMMENT <span class="string">&#x27;手机号&#x27;</span>,</span><br><span class="line">    `gender`TINYINT(<span class="number">4</span>) UNSIGNED <span class="keyword">DEFAULT</span><span class="string">&#x27;0&#x27;</span> COMMENT <span class="string">&#x27;性别(男:0;女:1)&#x27;</span>,</span><br><span class="line">    `password` <span class="type">VARCHAR</span>(<span class="number">100</span>)<span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT<span class="string">&#x27;密码&#x27;</span>,</span><br><span class="line">    `age`TINYINT(<span class="number">3</span>)<span class="keyword">DEFAULT</span><span class="string">&#x27;0&#x27;</span> COMMENT<span class="string">&#x27;年龄&#x27;</span>,</span><br><span class="line">    `create_time`DATETIME <span class="keyword">DEFAULT</span> <span class="built_in">CURRENT_TIMESTAMP</span>,</span><br><span class="line">    `update_time`<span class="type">TIMESTAMP</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="built_in">CURRENT_TIMESTAMP</span> <span class="keyword">ON</span> <span class="keyword">UPDATE</span> <span class="built_in">CURRENT_TIMESTAMP</span>,</span><br><span class="line">    <span class="keyword">PRIMARY</span> KEY(`id`) </span><br><span class="line">)ENGINE<span class="operator">=</span>INNODB <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8mb4 COMMENT<span class="operator">=</span><span class="string">&#x27;app用户表&#x27;</span></span><br><span class="line"><span class="comment">-- 插入1万条数据</span></span><br><span class="line"><span class="comment">-- 创建函数，还不是执行函数</span></span><br><span class="line">DELIMITER $$ <span class="comment">-- 写函数之前必须要写，标志（类似于c语言的头文件）</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">FUNCTION</span> mock_data()</span><br><span class="line"><span class="keyword">RETURNS</span> <span class="type">INT</span> <span class="comment">-- 放回值</span></span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line">   <span class="comment">-- 声明变量</span></span><br><span class="line">   <span class="keyword">DECLARE</span> num <span class="type">INT</span> <span class="keyword">DEFAULT</span> <span class="number">500000</span>;</span><br><span class="line">   <span class="keyword">DECLARE</span> i <span class="type">INT</span> <span class="keyword">DEFAULT</span> <span class="number">0</span>;</span><br><span class="line">   WHILE i<span class="operator">&lt;</span>num DO</span><br><span class="line">        <span class="comment">-- 插入数据</span></span><br><span class="line">        <span class="keyword">INSERT</span> <span class="keyword">INTO</span> app_user(`name`,`email`,`phone`,`gender`,`password`,`age`)</span><br><span class="line">        <span class="keyword">VALUES</span>(CONCAT(<span class="string">&#x27;用户&#x27;</span>,i),<span class="string">&#x27;2640420434@qq.com&#x27;</span>,</span><br><span class="line">        CONCAT(<span class="string">&#x27;18&#x27;</span>,<span class="built_in">FLOOR</span>(RAND()<span class="operator">*</span><span class="number">899999999</span><span class="operator">+</span><span class="number">100000000</span>)),</span><br><span class="line">        <span class="built_in">FLOOR</span>(RAND()<span class="operator">*</span><span class="number">2</span>),UUID(),<span class="built_in">FLOOR</span>(RAND()<span class="operator">*</span><span class="number">100</span>));</span><br><span class="line">        <span class="keyword">SET</span> i<span class="operator">=</span>i<span class="operator">+</span><span class="number">1</span>;</span><br><span class="line">   <span class="keyword">END</span> WHILE; </span><br><span class="line">   <span class="keyword">RETURN</span> i;<span class="comment">-- 注意这里是return 前面是returns    </span></span><br><span class="line"><span class="keyword">END</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">TRUNCATE</span> app_user;<span class="comment">-- 清空表</span></span><br><span class="line"><span class="keyword">SELECT</span> mock_data();<span class="comment">-- 执行函数</span></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">FUNCTION</span> mock_data; <span class="comment">-- 删除函数</span></span><br></pre></td></tr></table></figure><p>索引查询比较</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 查询用户9999数据,当没有索引的时候(总耗时:0.573 sec)</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> app_user <span class="keyword">WHERE</span> `name`<span class="operator">=</span><span class="string">&#x27;用户9999&#x27;</span>;</span><br><span class="line">EXPLAIN <span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> app_user <span class="keyword">WHERE</span> `name`<span class="operator">=</span><span class="string">&#x27;用户9999&#x27;</span>;</span><br><span class="line"><span class="comment">-- 添加索引 命名格式：id_表名_字段名</span></span><br><span class="line"><span class="comment">-- CREATE INDEX 索引名 ON 表(字段)</span></span><br><span class="line"><span class="keyword">CREATE</span> INDEX id_app_user_name <span class="keyword">ON</span> app_user(`name`);</span><br><span class="line"><span class="comment">-- 查询用户9999数据,当有索引的时候(总耗时:0.001 sec)</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> app_user <span class="keyword">WHERE</span> `name`<span class="operator">=</span><span class="string">&#x27;用户9999&#x27;</span>;</span><br><span class="line">EXPLAIN <span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> app_user <span class="keyword">WHERE</span> `name`<span class="operator">=</span><span class="string">&#x27;用户9999&#x27;</span>;</span><br></pre></td></tr></table></figure><h2 id="7-3-索引原则">7.3 索引原则</h2><ul><li>索引不是越多越好</li><li>不要对进程变动数据加索引</li><li>小数据量的表不需要加索引</li><li>索引一般加在常用来查询的字段上</li></ul><blockquote><p>索引的数据结构</p></blockquote><p>Hash类型的索引</p><p>Btree:innodb默认的数据结构</p><p>阅读：<a href="http://blog.codinglabs.org/articles/theory-of-mysql-index.html">CodingLabs - MySQL索引背后的数据结构及算法原理</a></p><h1>8. 用户管理和备份</h1><h2 id="8-1-用户管理">8.1 用户管理</h2><p><strong>root是最高权限用户</strong></p><blockquote><p>可视化命令操作</p></blockquote><blockquote><p>SQL 命令操作</p></blockquote><p>用户表：mysql.user表</p><p>本质:读这张表进行增删改查</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 创建用户 CREATE USER 用户名 IDENTIFIED BY &#x27;密码&#x27;</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">USER</span> Tang IDENTIFIED <span class="keyword">BY</span> <span class="string">&#x27;123456&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 修改密码（修改当前用户密码）这个时候修改的是root用户（最高权限用户）</span></span><br><span class="line"><span class="keyword">SET</span> PASSWORD<span class="operator">=</span>PASSWORD(<span class="string">&#x27;123456&#x27;</span>)<span class="comment">-- 注意：mysql8.0已经不能这样修改密码了</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 修改密码（修改指定用户密码）</span></span><br><span class="line"><span class="keyword">SET</span> PASSWORD <span class="keyword">FOR</span> Tang<span class="operator">=</span>PASSWORD(<span class="string">&#x27;123456&#x27;</span>); <span class="comment">-- 第一种方式</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">USER</span> <span class="string">&#x27;Tang&#x27;</span>@<span class="string">&#x27;%&#x27;</span> IDENTIFIED <span class="keyword">BY</span> <span class="string">&#x27;456789&#x27;</span>;<span class="comment">-- 第二种方式</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 重命名 rename user 原来名字 to 新的名字</span></span><br><span class="line">RENAME <span class="keyword">USER</span> Tang <span class="keyword">TO</span> Wen</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 用户授权grant all privileges(全部的权限) on 库.表 to Wen</span></span><br><span class="line"><span class="comment">-- all privileges 除了给别人授权，其它都能干（也就是不会给grant权限）</span></span><br><span class="line"><span class="keyword">GRANT</span> <span class="keyword">ALL</span> PRIVILEGES <span class="keyword">ON</span> <span class="operator">*</span>.<span class="operator">*</span> <span class="keyword">TO</span> Wen</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询权限</span></span><br><span class="line"><span class="comment">-- 查看指定用户的权限sql语句</span></span><br><span class="line"><span class="keyword">SHOW</span> GRANTS <span class="keyword">FOR</span> Wen </span><br><span class="line"></span><br><span class="line"><span class="comment">-- GRANT ALL PRIVILEGES ON *.* TO &#x27;Wen&#x27;@&#x27;%&#x27;</span></span><br><span class="line"><span class="keyword">SHOW</span> GRANTS <span class="keyword">FOR</span> root<span class="variable">@localhost</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- GRANT ALL PRIVILEGES ON *.* TO &#x27;root&#x27;@&#x27;localhost&#x27; WITH GRANT OPTION</span></span><br><span class="line"><span class="comment">-- 撤销权限 revoke 哪些权限，在哪个库撤销，给谁撤销</span></span><br><span class="line"><span class="keyword">REVOKE</span> <span class="keyword">ALL</span> PRIVILEGES <span class="keyword">ON</span> <span class="operator">*</span>.<span class="operator">*</span> <span class="keyword">FROM</span> Wen</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 注意：当你只给了指定库的权限时，用上面*.*不能直接撤销，需要指定库指定表</span></span><br><span class="line"><span class="comment">-- 现在要撤销Wen里school库的全部权限</span></span><br><span class="line"><span class="keyword">REVOKE</span> <span class="keyword">ALL</span> PRIVILEGES <span class="keyword">ON</span> school.<span class="operator">*</span> <span class="keyword">FROM</span> Wen</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 删除用户</span></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">USER</span> Wen</span><br></pre></td></tr></table></figure><h2 id="8-2-MySQL备份">8.2 MySQL备份</h2><p>为什么要备份：</p><ul><li>保证重要的数据不丢失</li><li>数据转移</li></ul><p>MySQL数据库备份的方式</p><blockquote><ol><li>直接拷贝物理文件</li><li>使用可视化工具（SQLyog）手动备份导出</li></ol></blockquote><p>点击你要导出的文件（库或者表）鼠标右键选择备份/导出，选择‘备选表作为sql存储’</p><blockquote><ol><li>使用命令行cmd导出mysqldump命令行</li></ol></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"># mysqldump <span class="operator">-</span>h主机 <span class="operator">-</span>u用户名 <span class="operator">-</span>p密码 数据库名 表名 <span class="operator">&gt;</span>物理磁盘位置\文件名</span><br><span class="line">mysqldump <span class="operator">-</span>hlocalhost <span class="operator">-</span>uroot <span class="operator">-</span>p123456 school student <span class="operator">&gt;</span>D:\a.sql</span><br><span class="line"></span><br><span class="line"># mysqldump <span class="operator">-</span>h主机 <span class="operator">-</span>u用户名 <span class="operator">-</span>p密码 数据库名 表<span class="number">1</span> 表<span class="number">2</span> 表<span class="number">3</span> ... <span class="operator">&gt;</span>物理磁盘位置\文件名</span><br><span class="line">mysqldump <span class="operator">-</span>hlocalhost <span class="operator">-</span>uroot <span class="operator">-</span>p123456 school student <span class="operator">&gt;</span>D:\b.sql</span><br><span class="line"></span><br><span class="line"># mysqldump <span class="operator">-</span>h主机 <span class="operator">-</span>u用户名 <span class="operator">-</span>p密码 数据库名 表名 <span class="operator">&gt;</span>物理磁盘位置\文件名</span><br><span class="line">mysqldump <span class="operator">-</span>hlocalhost <span class="operator">-</span>uroot <span class="operator">-</span>p123456 school student <span class="operator">&gt;</span>D:\c.sql</span><br><span class="line"></span><br><span class="line"># 注意：主机这里可以换，也就是说可以把表dump 到其它主机上面（别的电脑或者服务器上）</span><br><span class="line"></span><br><span class="line"># 导入</span><br><span class="line"># 登录的情况下，切换指定的数据库</span><br><span class="line"># source备份文件</span><br><span class="line">source C:\Users\HongHua\Desktop\a.sql</span><br><span class="line">#mysql <span class="operator">-</span>u用户名 <span class="operator">-</span>p密码 库名<span class="operator">&lt;</span>备份文件</span><br></pre></td></tr></table></figure><p>假设你要备份数据库，来防止数据丢失，sql文件保存即可</p><p>把数据库给朋友：sql文件直接给别人即可</p><h1>9. 规范</h1><h2 id="9-1-为什么需要设计">9.1 为什么需要设计</h2><p><font color=red>当数据库比较复杂的时候我们就需要设计</font></p><p><strong>糟糕的数据库设计：</strong></p><ul><li>数据冗余，浪费空间</li><li>数据库插入和删除都会麻烦、异常【屏蔽使用物理外键】</li><li>程序的性能差</li></ul><p><strong>良好的数据库设计：</strong></p><ul><li>节省内存空间</li><li>保证数据库的完整性</li><li>方便我们开发系统</li></ul><p><strong>软件开发中，关于数据库的设计</strong></p><ul><li>分析需求：分析业务和需要处理的数据库的需求</li><li>概要设计：设计关系图E-R图</li></ul><p><strong>设计数据库的步骤：（如个人博客）</strong></p><ul><li>收集信息，分析需求<ul><li>用户表（用户登录注销，用户的个人信息，写博客，创建分类）</li><li>分类表（文章分类，创建人）</li><li>文章表（文章的内容）</li><li>评论表</li><li>友链表（链接信息）</li><li>粉丝表</li><li>自定义表（系统信息，某个关键的字，或者一些主字段） key：value</li></ul></li><li>标识实体（把需求落地到每个字段）</li><li>标识实体之间的关系<ul><li>写博客：user—&gt;blog</li><li>创建分类：user—&gt;category</li><li>关注：user—&gt;user</li><li>友链：links</li><li>评论：user-user-blog</li></ul></li></ul><h2 id="9-2-三大范式">9.2 三大范式</h2><p><strong>为什么需要数据规范化？</strong></p><ul><li>信息重复</li><li>更新异常</li><li>插入异常<ul><li>无法正常显示信息</li></ul></li><li>删除异常<ul><li>丢失有效的信息</li></ul></li></ul><blockquote><p><strong>第一范式（1NF）</strong></p></blockquote><p>原子性：保证每一列不可再分</p><blockquote><p><strong>第二范式（2NF）</strong></p></blockquote><p>前提：满足第一范式</p><p>每张表只描述一件事情</p><p>前提：满足第一范式和第二范式</p><p>第三范式需要确保数据表中的每一列数据都和主键直接相关，而不能间接相关</p><blockquote><p>（规范数据库的设计）</p></blockquote><p><strong>规范性和性能的问题</strong></p><p>关联查询的表不得超过三张表</p><ul><li>考虑商业化的需求和目标（成本，用户体验！）数据库的性能更加重要</li><li>在规范性能的问题的时候，需要适当的考虑一下 规范性！</li><li>故意给某些表增加一些冗余的字段（为了从多表查询中变为单表查询）</li><li>故意增加一些计算列（从大数据量降低为小数据的查询：索引，如计算有多少个记录）</li></ul>]]></content>
    
    
    <summary type="html">这里是关于数据库的基础知识</summary>
    
    
    
    <category term="MySQL" scheme="https://hfuuwzy.github.io/categories/MySQL/"/>
    
    
    <category term="Mysql" scheme="https://hfuuwzy.github.io/tags/Mysql/"/>
    
  </entry>
  
  <entry>
    <title>使用 NetworkManager 工具来管理网络</title>
    <link href="https://hfuuwzy.github.io/2023/04/17/Linux%E6%93%8D%E4%BD%9C%E7%BD%91%E7%BB%9C/"/>
    <id>https://hfuuwzy.github.io/2023/04/17/Linux%E6%93%8D%E4%BD%9C%E7%BD%91%E7%BB%9C/</id>
    <published>2023-04-16T16:00:00.000Z</published>
    <updated>2023-04-19T11:59:30.469Z</updated>
    
    <content type="html"><![CDATA[<h3 id="使用-NetworkManager-工具来管理网络">使用 NetworkManager 工具来管理网络</h3><p>其在命令行下对应的命令是 nmcli，要连接WiFi，相关的命令如下：</p><h4 id="1）查看网络设备列表">1）查看网络设备列表</h4><p><strong>sudo nmcli dev</strong><br>注意，如果列出的设备状态全部是 unmanaged 的，说明这些网络设备不受NetworkManager管理，你需要清空 /etc/network/interfaces下的网络设置,然后重启.</p><h4 id="2）开启WiFi命令">2）开启WiFi命令</h4><p><strong>sudo nmcli r wifi on</strong></p><h4 id="3）扫描附近的-WiFi-热点">3）扫描附近的 WiFi 热点</h4><p><strong>sudo nmcli dev wifi</strong></p><h4 id="4）连接到指定的-WiFi-热点">4）连接到指定的 WiFi 热点</h4><p><strong>sudo nmcli dev wifi connect “SSID” password “PASSWORD” ifname wlan0</strong><br>请将 SSID和 PASSWORD 替换成实际的 WiFi名称和密码。</p>]]></content>
    
    
    <summary type="html">传家宝级别</summary>
    
    
    
    <category term="Linux" scheme="https://hfuuwzy.github.io/categories/Linux/"/>
    
    
    <category term="Linux" scheme="https://hfuuwzy.github.io/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Servlet</title>
    <link href="https://hfuuwzy.github.io/2023/04/14/2023-4-14-%E7%AC%AC%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0/"/>
    <id>https://hfuuwzy.github.io/2023/04/14/2023-4-14-%E7%AC%AC%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0/</id>
    <published>2023-04-13T16:00:00.000Z</published>
    <updated>2023-04-16T08:07:50.644Z</updated>
    
    <content type="html"><![CDATA[<h1>1. servlet简介</h1><ul><li>Servlet就是sun公司开发动态web的一门技术。</li><li>Sun在这些API中提供一个接口叫做：Servlet，如果你想开发一个Servlet程序，只需要完成两个小步骤：<ol><li>编写一个类，实现Servlet接口；</li><li>把开发好的Java类部署到web服务器中。<br>把实现了Servlet接口Java程序叫做，Servlet</li></ol></li></ul><h1>2. HelloServlet</h1><p>Serlvet接口Sun公司有两个默认的实现类：HttpServlet，GenericServlet</p><p><img src="../../photo/2770896-20230409154206423-1918524274.jpg" alt="image"></p><ol><li><p>构建一个普通的Maven项目，删掉里面的src目录，以后我们的学习就在这个项目里面建立Moudel；这个空的工程就是Maven主工程；</p></li><li><p>关于Maven父子工程的理解：<br>父工程中会有：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">modules</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">module</span>&gt;</span>servlet-01<span class="tag">&lt;/<span class="name">module</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">modules</span>&gt;</span></span><br></pre></td></tr></table></figure><p>子项目中会有：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>servlet<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.example<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br></pre></td></tr></table></figure><p>父项目中的jar包，子项目可以直接使用。反之，不可。</p><p><strong>Maven环境配置</strong>(搭配Tomcat 10)</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>jakarta.servlet<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jakarta.servlet-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>6.0.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>jakarta.servlet.jsp<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jakarta.servlet.jsp-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.1.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>Maven环境优化</p></li><li><p>编写一个Servlet程序<br>1.编写一个普通的类<br>2.实现Servlet接口，这里我们直接继承HttpServlet类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hfuuwzy;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> jakarta.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> jakarta.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> jakarta.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> jakarta.servlet.http.HttpServletResponse;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.PrintWriter;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">HelloServlet</span> <span class="keyword">extends</span> <span class="title class_">HttpServlet</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;你好&quot;</span>);</span><br><span class="line">        <span class="type">PrintWriter</span> <span class="variable">writer</span> <span class="operator">=</span> resp.getWriter();</span><br><span class="line">        writer.print(<span class="string">&quot;hello,Servlet!!!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">        <span class="built_in">super</span>.doPost(req, resp);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>编写Servlet的映射<br>为什么需要映射：我们写的是JAVA程序，但是要通过浏览器访问，而浏览器需要连接web服务器，所以我们需要在web服务中注册我们写的Servlet，还需给他一个浏览器能够访问的路径。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--注册servlet--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>hello<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>com.hfuuwzy.HelloServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--Servlet的请求路径--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>hello<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/hello<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>配置tomcat<br>注意：配置项目发布路径就可以了</p></li><li><p>启动测试</p></li></ol><h1>3. Servlet原理</h1><p><img src="../../photo/2770896-20230409154243213-1040908847.jpg" alt="image"></p><h1>4. Mapping问题</h1><ol><li>一个Servlet可以指定一个映射路径</li><li>一个Servlet可以指定多个映射路径</li><li>一个Servlet可以指定通用映射路径</li><li>指定一些后缀或者前缀等等…</li></ol><h1>5. ServletContext</h1><p>web容器在启动的时候，它会为每个web程序都创建一个对应的ServletContext对象，它代表了当前的web应用。</p><h2 id="5-1-共享数据">5.1 共享数据</h2><p>在这个Servlet中保存的数据，可以在另一个Servlet中拿到</p><p><img src="../../photo/2770896-20230409154418405-1306818080.jpg" alt="image"></p><p>存入数据</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">HelloServlet</span> <span class="keyword">extends</span> <span class="title class_">HttpServlet</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line"><span class="comment">//        this.getInitParameter() 初始化参数</span></span><br><span class="line"><span class="comment">//        this.getServletConfig() Servlet配置</span></span><br><span class="line"><span class="comment">//        this.getServletContext() Servlet配置上下文</span></span><br><span class="line">        <span class="type">ServletContext</span> <span class="variable">servletContext</span> <span class="operator">=</span> <span class="built_in">this</span>.getServletContext();</span><br><span class="line">        <span class="type">String</span> <span class="variable">username</span> <span class="operator">=</span> <span class="string">&quot;王朝阳&quot;</span>; <span class="comment">// 数据</span></span><br><span class="line">        servletContext.setAttribute(<span class="string">&quot;username&quot;</span>,username); <span class="comment">// 将一个数据保存在ServletContext中</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>读取数据</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet(name = &quot;getc&quot;,value = &quot;/getc&quot;)</span> <span class="comment">// 此注解可以代替编写xml里的Servlet映射</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">GetServlet</span> <span class="keyword">extends</span> <span class="title class_">HttpServlet</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">        <span class="type">ServletContext</span> <span class="variable">context</span> <span class="operator">=</span> <span class="built_in">this</span>.getServletContext();</span><br><span class="line">        <span class="type">String</span> <span class="variable">username</span> <span class="operator">=</span> (String) context.getAttribute(<span class="string">&quot;username&quot;</span>);</span><br><span class="line">        resp.setContentType(<span class="string">&quot;text/html;charset=utf-8&quot;</span>); <span class="comment">// 设置读取的文本风格样式</span></span><br><span class="line">        resp.getWriter().print(<span class="string">&quot;名字：&quot;</span>+username);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="5-2-获取初始化参数">5.2 获取初始化参数</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">context-param</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>url<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>jdbc:mysql://localhost:3306/mybatis<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">context-param</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet(name = &quot;gp&quot;,value = &quot;/gp&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ServletDemo03</span> <span class="keyword">extends</span> <span class="title class_">HttpServlet</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">        <span class="type">ServletContext</span> <span class="variable">context</span> <span class="operator">=</span> <span class="built_in">this</span>.getServletContext();</span><br><span class="line">        <span class="type">String</span> <span class="variable">url</span> <span class="operator">=</span> context.getInitParameter(<span class="string">&quot;url&quot;</span>);</span><br><span class="line">        resp.getWriter().print(url);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="5-3-请求转发">5.3 请求转发</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 请求/sd4找到ServletDemo04，ServletDemo04进行请求转发到/gp，到/gp的页面</span></span><br><span class="line"><span class="comment">// (浏览器路径是sd4的路径，页面拿到的是/gp的数据)</span></span><br><span class="line"><span class="meta">@WebServlet(name = &quot;sd4&quot;, value = &quot;/sd4&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ServletDemo04</span> <span class="keyword">extends</span> <span class="title class_">HttpServlet</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">        <span class="type">ServletContext</span> <span class="variable">context</span> <span class="operator">=</span> <span class="built_in">this</span>.getServletContext();</span><br><span class="line">        System.out.println(<span class="string">&quot;进入了servlet04&quot;</span>);</span><br><span class="line">        <span class="type">RequestDispatcher</span> <span class="variable">requestDispatcher</span> <span class="operator">=</span> context.getRequestDispatcher(<span class="string">&quot;/gp&quot;</span>); <span class="comment">// 转发的请求路径 </span></span><br><span class="line">        requestDispatcher.forward(req, resp); <span class="comment">// 调用forward实现请求转发</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="5-4-读取资源文件Properties">5.4 读取资源文件Properties</h2><ul><li>在java目录下新建properties</li><li>在resources目录下新建properties发现：都被打包到了同一个路径下：classes，我们俗称这个路径为classpath。</li></ul><p>思路：需要一个文件流</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet(name = &quot;sd5&quot;, value = &quot;/sd5&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ServletDemo05</span> <span class="keyword">extends</span> <span class="title class_">HttpServlet</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">        <span class="type">InputStream</span> <span class="variable">inputStream</span> <span class="operator">=</span> <span class="built_in">this</span>.getServletContext().getResourceAsStream(<span class="string">&quot;/WEB-INF/classes/db.properties&quot;</span>);</span><br><span class="line">        <span class="type">Properties</span> <span class="variable">prop</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Properties</span>();</span><br><span class="line">        prop.load(inputStream);</span><br><span class="line">        <span class="type">String</span> <span class="variable">user</span> <span class="operator">=</span> prop.getProperty(<span class="string">&quot;username&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">pwd</span> <span class="operator">=</span> prop.getProperty(<span class="string">&quot;password&quot;</span>);</span><br><span class="line">        resp.getWriter().print(user+<span class="string">&quot;:&quot;</span>+pwd);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="../../photo/2770896-20230409154448629-1360567652.jpg" alt="image"></p><h1>6. HttpServletResponse</h1><p>web服务器接收到客户端的http请求，针对这个请求，分别创建一个代表请求的HttpServletRequest对象，代表响应的一个HttpServletResponse；|</p><ul><li>如果要获取客户端请求过来的参数：找HttpServletRequest</li><li>如果要给客户端响应一些信息：找HttpServletResponse</li></ul><ol><li>负责向浏览器发送数据的方法</li></ol>  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> ServletOutputStream <span class="title function_">getOutputStream</span><span class="params">()</span> <span class="keyword">throws</span> IOException;</span><br><span class="line"><span class="keyword">public</span> PrintWriter <span class="title function_">getWriter</span><span class="params">()</span> <span class="keyword">throws</span> IOException;</span><br></pre></td></tr></table></figure><ol start="2"><li><p>响应的状态码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">SC_CONTINUE</span> <span class="operator">=</span> <span class="number">100</span>;</span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * Status code (200) indicating the request succeeded normally.</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"> <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">SC_OK</span> <span class="operator">=</span> <span class="number">200</span>;</span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * Status code (302) indicating that the resource has temporarily</span></span><br><span class="line"><span class="comment">  * moved to another location, but that future references should</span></span><br><span class="line"><span class="comment">  * still use the original URI to access the resource.</span></span><br><span class="line"><span class="comment">  *</span></span><br><span class="line"><span class="comment">  * This definition is being retained for backwards compatibility.</span></span><br><span class="line"><span class="comment">  * SC_FOUND is now the preferred definition.</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"> <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">SC_MOVED_TEMPORARILY</span> <span class="operator">=</span> <span class="number">302</span>;</span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Status code (302) indicating that the resource reside</span></span><br><span class="line"><span class="comment"> * temporarily under a different URI. Since the redirection might</span></span><br><span class="line"><span class="comment"> * be altered on occasion, the client should continue to use the</span></span><br><span class="line"><span class="comment"> * Request-URI for future requests.(HTTP/1.1) To represent the</span></span><br><span class="line"><span class="comment"> * status code (302), it is recommended to use this variable.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"> <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">SC_FOUND</span> <span class="operator">=</span> <span class="number">302</span>;</span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * Status code (304) indicating that a conditional GET operation</span></span><br><span class="line"><span class="comment">  * found that the resource was available and not modified.</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"> <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">SC_NOT_MODIFIED</span> <span class="operator">=</span> <span class="number">304</span>;</span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * Status code (404) indicating that the requested resource is not</span></span><br><span class="line"><span class="comment">  * available.</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"> <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">SC_NOT_FOUND</span> <span class="operator">=</span> <span class="number">404</span>;</span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * Status code (500) indicating an error inside the HTTP server</span></span><br><span class="line"><span class="comment">  * which prevented it from fulfilling the request.</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"> <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">SC_INTERNAL_SERVER_ERROR</span> <span class="operator">=</span> <span class="number">500</span>;</span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * Status code (502) indicating that the HTTP server received an</span></span><br><span class="line"><span class="comment">  * invalid response from a server it consulted when acting as a</span></span><br><span class="line"><span class="comment">  * proxy or gateway.</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"> <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">SC_BAD_GATEWAY</span> <span class="operator">=</span> <span class="number">502</span>;</span><br><span class="line"> <span class="comment">// ...</span></span><br></pre></td></tr></table></figure></li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">常见应用</span><br></pre></td></tr></table></figure><ol><li><p>向浏览器输出消息</p></li><li><p>下载文件</p></li></ol>  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet(name = &quot;file&quot;,value = &quot;/file&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">FileServlet</span> <span class="keyword">extends</span> <span class="title class_">HttpServlet</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">        <span class="comment">// 1.要获取下载文件的路径</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">realPath</span> <span class="operator">=</span> <span class="string">&quot;C:\\Users\\WZY\\Desktop\\大二下\\Web程序设计\\servlet\\response\\src\\main\\resources\\薇尔莉特.png&quot;</span>;</span><br><span class="line">        System.out.println(<span class="string">&quot;下载文件的路径是：&quot;</span> + realPath);</span><br><span class="line">        <span class="comment">// 2.下载的文件名是啥？</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">fileName</span> <span class="operator">=</span> realPath.substring(realPath.lastIndexOf(<span class="string">&quot;\\&quot;</span>) + <span class="number">1</span>);</span><br><span class="line">        <span class="comment">// 3.设置想办法让浏览器能够支持下载我们需要的东西</span></span><br><span class="line">        resp.setHeader(<span class="string">&quot;Content-Disposition&quot;</span>, <span class="string">&quot;attachment;filename=&quot;</span> + URLEncoder.encode(fileName, <span class="string">&quot;utf-8&quot;</span>));</span><br><span class="line">        <span class="comment">// 4.获取下载文件的输入流</span></span><br><span class="line">        <span class="type">FileInputStream</span> <span class="variable">in</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileInputStream</span>(realPath);</span><br><span class="line">        <span class="comment">// 5.创建缓冲区</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">len</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="type">byte</span>[] buffer = <span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">1024</span>];</span><br><span class="line">        <span class="comment">// 6.获取OutputStream对象</span></span><br><span class="line">        <span class="type">ServletOutputStream</span> <span class="variable">out</span> <span class="operator">=</span> resp.getOutputStream();</span><br><span class="line">        <span class="comment">// 7.将FileOutputStream流写入到bufer缓冲区</span></span><br><span class="line">        <span class="keyword">while</span> ((len = in.read(buffer)) != -<span class="number">1</span>) &#123;</span><br><span class="line">            out.write(buffer, <span class="number">0</span>, len);</span><br><span class="line">        &#125;</span><br><span class="line">        in.close();</span><br><span class="line">        out.close();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 8.使用OutputStream将缓冲区中的数据输出到客户端！</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">        doGet(req, resp);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="3"><li>验证码功能</li></ol>  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet(name = &quot;img&quot;,value = &quot;/img&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ImageServlet</span> <span class="keyword">extends</span> <span class="title class_">HttpServlet</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">        <span class="comment">// 让浏览器3秒刷新一次</span></span><br><span class="line">        resp.setHeader(<span class="string">&quot;refresh&quot;</span>, <span class="string">&quot;3&quot;</span>);</span><br><span class="line">        <span class="comment">// 在内存中创建一个图片</span></span><br><span class="line">        <span class="type">BufferedImage</span> <span class="variable">image</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BufferedImage</span>(<span class="number">80</span>, <span class="number">20</span>, BufferedImage.TYPE_INT_RGB);<span class="comment">// 宽、高、颜色</span></span><br><span class="line">        <span class="comment">// 得到图片</span></span><br><span class="line">        <span class="type">Graphics2D</span> <span class="variable">g</span> <span class="operator">=</span> (Graphics2D) image.getGraphics();<span class="comment">// 得到一只2D的笔</span></span><br><span class="line">        <span class="comment">// 设置图片的背景颜色</span></span><br><span class="line">        g.setColor(Color.white);</span><br><span class="line">        g.fillRect(<span class="number">0</span>, <span class="number">0</span>, <span class="number">80</span>, <span class="number">20</span>);<span class="comment">// 填充颜色</span></span><br><span class="line">        <span class="comment">// 换个背景颜色</span></span><br><span class="line">        g.setColor(Color.BLUE);</span><br><span class="line">        <span class="comment">// 设置字体样式：粗体，20</span></span><br><span class="line">        g.setFont(<span class="keyword">new</span> <span class="title class_">Font</span>(<span class="literal">null</span>, Font.BOLD, <span class="number">20</span>));</span><br><span class="line">        <span class="comment">// 画一个字符串（给图片写数据）</span></span><br><span class="line">        g.drawString(makeNum(), <span class="number">0</span>, <span class="number">20</span>);</span><br><span class="line">        <span class="comment">// 告诉浏览器，这个请求用图片的方式打开</span></span><br><span class="line">        resp.setContentType(<span class="string">&quot;image/jpeg&quot;</span>);</span><br><span class="line">        <span class="comment">// 网站存在缓存，不让浏览器缓存</span></span><br><span class="line">        resp.setDateHeader(<span class="string">&quot;expires&quot;</span>, -<span class="number">1</span>);</span><br><span class="line">        resp.setHeader(<span class="string">&quot;Cache-Control&quot;</span>, <span class="string">&quot;no-cache&quot;</span>);</span><br><span class="line">        resp.setHeader(<span class="string">&quot;Pragma&quot;</span>, <span class="string">&quot;no-cache&quot;</span>);</span><br><span class="line">        <span class="comment">// 把图片写给浏览器</span></span><br><span class="line">        <span class="type">boolean</span> <span class="variable">write</span> <span class="operator">=</span> ImageIO.write(image, <span class="string">&quot;jpg&quot;</span>, resp.getOutputStream());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 生成随机数</span></span><br><span class="line">    <span class="keyword">private</span> String <span class="title function_">makeNum</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">Random</span> <span class="variable">random</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Random</span>();</span><br><span class="line">        <span class="type">String</span> <span class="variable">num</span> <span class="operator">=</span> random.nextInt(<span class="number">9999999</span>) + <span class="string">&quot;&quot;</span>;<span class="comment">// 随机数，最大七位，[0,9999999)</span></span><br><span class="line">        <span class="type">StringBuffer</span> <span class="variable">sb</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuffer</span>();</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">7</span> - num.length(); i++) &#123;<span class="comment">// 不足七位，则添加0</span></span><br><span class="line">            sb.append(<span class="string">&quot;0&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        num = sb.toString() + num;<span class="comment">// 不足七位，在随机数前面添加0</span></span><br><span class="line">        <span class="keyword">return</span> num;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">        doGet(req, resp);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ol start="4"><li><p>实现请求重定向</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet(name = &quot;Red&quot;, value = &quot;/red&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">RedirectServlet</span> <span class="keyword">extends</span> <span class="title class_">HttpServlet</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">        resp.setHeader(&quot;Location&quot;,&quot;/res/image&quot;);</span></span><br><span class="line"><span class="comment">        resp.setStatus(302);</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">        resp.sendRedirect(<span class="string">&quot;/res/img&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">        doGet(req, resp);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><h1>7. HttpServletRequest</h1><p>HttpServletRequest代表客户端的请求，用户通过Http协议访问服务器，HTTP请求中的所有信息会被封装到HttpServletRequest，通过这个HttpServletRequest的方法，获得客户端的所有信息。</p><ol><li><p>获取前端传递的参数<br><img src="../../photo/2770896-20230409154536953-743078500.jpg" alt="image"></p></li><li><p>请求转发<br>前端：</p><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page contentType=<span class="string">&quot;text/html; charset=UTF-8&quot;</span> pageEncoding=<span class="string">&quot;UTF-8&quot;</span> %&gt;</span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;登录&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;h1&gt;登录&lt;/h1&gt;</span><br><span class="line">&lt;div &gt;</span><br><span class="line">    &lt;%--这里表单表示的意思：以post方式提交表单，提交到我们的login请求--%&gt;</span><br><span class="line">    &lt;form action=<span class="string">&quot;$&#123;pageContext.request.contextPath&#125;/login&quot;</span> method=<span class="string">&quot;post&quot;</span>&gt;</span><br><span class="line">        用户名：&lt;input type=<span class="string">&quot;text&quot;</span> name=<span class="string">&quot;username&quot;</span>&gt;&lt;br&gt;</span><br><span class="line">        密码：&lt;input type=<span class="string">&quot;password&quot;</span> name=<span class="string">&quot;password&quot;</span>&gt;&lt;br&gt;</span><br><span class="line">        爱好：</span><br><span class="line">        &lt;input type=<span class="string">&quot;checkbox&quot;</span> name=<span class="string">&quot;hobbys&quot;</span> value=<span class="string">&quot;代码&quot;</span>&gt; 代码</span><br><span class="line">        &lt;input type=<span class="string">&quot;checkbox&quot;</span> name=<span class="string">&quot;hobbys&quot;</span> value=<span class="string">&quot;唱歌&quot;</span>&gt; 唱歌</span><br><span class="line">        &lt;input type=<span class="string">&quot;checkbox&quot;</span> name=<span class="string">&quot;hobbys&quot;</span> value=<span class="string">&quot;女孩&quot;</span>&gt; 女孩</span><br><span class="line">        &lt;input type=<span class="string">&quot;checkbox&quot;</span> name=<span class="string">&quot;hobbys&quot;</span> value=<span class="string">&quot;电影&quot;</span>&gt; 电影</span><br><span class="line">        &lt;br&gt;</span><br><span class="line">        &lt;input type=<span class="string">&quot;submit&quot;</span> name=<span class="string">&quot;提交&quot;</span>&gt;</span><br><span class="line">    &lt;/form&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>后端：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet(name = &quot;LoginServlet&quot;,value = &quot;/login&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">LoginServlet</span> <span class="keyword">extends</span> <span class="title class_">HttpServlet</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">username</span> <span class="operator">=</span> req.getParameter(<span class="string">&quot;username&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">password</span> <span class="operator">=</span> req.getParameter(<span class="string">&quot;password&quot;</span>);</span><br><span class="line">        String[] hobbys = req.getParameterValues(<span class="string">&quot;hobbys&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;------------------------&quot;</span>);</span><br><span class="line">        System.out.println(username);</span><br><span class="line">        System.out.println(password);</span><br><span class="line">        System.out.println(Arrays.toString(hobbys));</span><br><span class="line">        <span class="comment">// 通过请求转发</span></span><br><span class="line"><span class="comment">//        resp.sendRedirect(&quot;/req/success.jsp&quot;);</span></span><br><span class="line">        req.getRequestDispatcher(<span class="string">&quot;/success.jsp&quot;</span>).forward(req,resp); <span class="comment">// 转发 / 代表当前的web应用，直接跟路径名称就行，与重定向不一样</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">        doGet(req, resp);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><p><code>面试题：请你聊聊重定向和转发的区别？</code><br>相同点：页面都会实现跳转<br>不同点：</p><ul><li>请求转发的时候，url地址栏不会产生变化。307</li><li>重定向时候，url地址栏会发生变化。302</li></ul>]]></content>
    
    
    <summary type="html">这是测试一下长啥样</summary>
    
    
    
    
  </entry>
  
</feed>
